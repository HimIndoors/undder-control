<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Forms9Patch</name>
    </assembly>
    <members>
        <member name="T:Forms9Patch.Clipboard">
            <summary>
            Forms9Patch.Clipboard class
            </summary>
        </member>
        <member name="P:Forms9Patch.Clipboard.Entry">
            <summary>
            Gets/Sets the current Entry on the clipboard
            </summary>
        </member>
        <member name="P:Forms9Patch.Clipboard.EntryCaching">
            <summary>
            Turns of caching latest clipboard entry (for speed, of course).  Mostly for test purposes.
            </summary>
            <value><c>true</c> if the latest clipboard entry is cached; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Forms9Patch.Clipboard.ContentChanged">
            <summary>
            Event fired when the content on the clipboard has changed
            </summary>
        </member>
        <member name="T:Forms9Patch.IMimeItem`1">
            <summary>
            Generic Interface for ClipboardEntryITem
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Forms9Patch.IMimeItem`1.Value">
            <summary>
            Gets the value of this IClipboardEntryItem
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Forms9Patch.IMimeItem">
            <summary>
            Interface for a MimeItem
            </summary>
        </member>
        <member name="P:Forms9Patch.IMimeItem.MimeType">
            <summary>
            MimeType for an item
            </summary>
        </member>
        <member name="P:Forms9Patch.IMimeItem.Value">
            <summary>
            Value of the item
            </summary>
        </member>
        <member name="T:Forms9Patch.IMimeItemCollection">
            <summary>
            Interface for a Forms9Patch.ClipboardEntry
            </summary>
        </member>
        <member name="P:Forms9Patch.IMimeItemCollection.Description">
            <summary>
            Description of this ClipboardEntry  on clipboard (really only applies to Android)
            </summary>
        </member>
        <member name="P:Forms9Patch.IMimeItemCollection.PlainText">
            <summary>
            Plain text item in this ClipboardEntry
            </summary>
        </member>
        <member name="P:Forms9Patch.IMimeItemCollection.HtmlText">
            <summary>
            HtmlText item in this ClipboardEntry
            </summary>
        </member>
        <member name="P:Forms9Patch.IMimeItemCollection.Items">
            <summary>
            Gets the items in this ClipboardEntry
            </summary>
            <value>The items.</value>
        </member>
        <member name="T:Forms9Patch.IMimeItemCollectionExtensions">
            <summary>
            Interface for MimeItemCollections
            </summary>
        </member>
        <member name="M:Forms9Patch.IMimeItemCollectionExtensions.MimeTypes(Forms9Patch.IMimeItemCollection)">
            <summary>
            MIME types in the collection
            </summary>
            <returns>The MIME types.</returns>
            <param name="mimeItemCollection">MIME item collection.</param>
        </member>
        <member name="M:Forms9Patch.IMimeItemCollectionExtensions.GetFirstMimeItem``1(Forms9Patch.IMimeItemCollection,System.String)">
            <summary>
            Gets the first MimeItem of a given MIME type.
            </summary>
            <returns>The first MIME item.</returns>
            <param name="mimeItemCollection">MimeItemCollection.</param>
            <param name="mimeType">MIME type.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:Forms9Patch.IMimeItemCollectionExtensions.GetMimeItems``1(Forms9Patch.IMimeItemCollection,System.String)">
            <summary>
            Gets the all MimeItems of a given MIME type
            </summary>
            <returns>The MimeItems.</returns>
            <param name="mimeItemCollection">MIME item collection.</param>
            <param name="mimeType">MIME type.</param>
            <typeparam name="T">The 1st type parameter.</typeparam>
        </member>
        <member name="M:Forms9Patch.IMimeItemCollectionExtensions.AddBytesFromFile(Forms9Patch.MimeItemCollection,System.String,System.String)">
            <summary>
            Adds the content from file (as byte[]) to collection.  Alternative to adding file as FileInfo as the Value of a MimeItem.
            </summary>
            <returns>The bytes from file.</returns>
            <param name="mimeItemCollection">MIME item collection.</param>
            <param name="mimeType">MIME type.</param>
            <param name="path">File Path.</param>
        </member>
        <member name="M:Forms9Patch.IMimeItemCollectionExtensions.ContainsMimeType(Forms9Patch.IMimeItemCollection,System.String)">
            <summary>
            Does the MimeItemCollection contain at least one item of a given mimeType?
            </summary>
            <param name="mimeItemCollection"></param>
            <param name="mimeType"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.MimeItem`1">
            <summary>
            MimeItem class
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Forms9Patch.MimeItem`1.Value">
            <summary>
            Gets or sets the value of this MimeItemn.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Forms9Patch.MimeItem`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.MimeItem`1"/> class.
            </summary>
            <param name="mimeType">MIME type.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.MimeItem`1.#ctor(Forms9Patch.IMimeItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.MimeItem`1"/> class.
            </summary>
            <param name="mimeItem">MIME item.</param>
        </member>
        <member name="M:Forms9Patch.MimeItem`1.Create(System.String,System.Object)">
            <summary>
            Create a new MimeItem with the specified mimeType and value.
            </summary>
            <returns>The create.</returns>
            <param name="mimeType">MIME type.</param>
            <param name="value">Value.</param>
        </member>
        <member name="T:Forms9Patch.MimeItem">
            <summary>
            Base class for a MimeItem
            </summary>
        </member>
        <member name="M:Forms9Patch.MimeItem.ValidValue(System.Object)">
            <summary>
            Checks if an object can be used as a valid MimeItem.Value
            </summary>
            <returns><c>true</c>, if value was valided, <c>false</c> otherwise.</returns>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.MimeItem.ValidValueType(System.Type)">
            <summary>
            Test to determine if type can be safely put on clipboard across platforms (without crazy schema gymnastics)
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:Forms9Patch.MimeItem.MimeType">
            <summary>
            Get the MimeType of this MimeItem
            </summary>
        </member>
        <member name="P:Forms9Patch.MimeItem.Value">
            <summary>
            Get the Value of thie MimeItem
            </summary>
        </member>
        <member name="M:Forms9Patch.MimeItem.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.MimeItem"/> class.
            </summary>
            <param name="mimeType">MIME type.</param>
            <param name="value">Value.</param>
        </member>
        <member name="T:Forms9Patch.MimeItemCollection">
            <summary>
            Class used to supply data to Clipboard and Interapp Sharing
            </summary>
        </member>
        <member name="P:Forms9Patch.MimeItemCollection.Description">
            <summary>
            Short, descriptive text that can be used by app to display
            to the user what this data represents.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Forms9Patch.MimeItemCollection.PlainText">
            <summary>
            Gets or sets the plain text representation of this data (if any)
            </summary>
            <value>The plain text.</value>
        </member>
        <member name="P:Forms9Patch.MimeItemCollection.HtmlText">
            <summary>
            Gets or sets the html text representation of this data (if any)
            </summary>
            <value>The html text.</value>
        </member>
        <member name="M:Forms9Patch.MimeItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.MimeItemCollection"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.MimeItemCollection.ForPlainText(System.String,System.String)">
            <summary>
            Convenience factory for entry with just PlainText
            </summary>
            <param name="plainText"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.MimeItemCollection.AddValue(System.String,System.Object)">
            <summary>
            Adds a new item to the MimeItemCollection
            </summary>
            <param name="mimeType">MIME type.</param>
            <param name="value">Value.</param>
        </member>
        <member name="T:Forms9Patch.BaseMimeItemCollection">
            <summary>
            Do not use! Use MimeItemCollection instead!
            </summary>
        </member>
        <member name="F:Forms9Patch.BaseMimeItemCollection._description">
            <summary>
            The backing store for the MimeItemCollection's description
            </summary>
        </member>
        <member name="P:Forms9Patch.BaseMimeItemCollection.Description">
            <summary>
            Short, descriptive text that can be used by app to display
            to the user what this collection represents.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Forms9Patch.BaseMimeItemCollection.PlainText">
            <summary>
            Gets or sets the plain text representation of this data (if any)
            </summary>
            <value>The plain text.</value>
        </member>
        <member name="P:Forms9Patch.BaseMimeItemCollection.HtmlText">
            <summary>
            Gets or sets the html text representation of this data (if any)
            </summary>
            <value>The html text.</value>
        </member>
        <member name="F:Forms9Patch.BaseMimeItemCollection._items">
            <summary>
            The backing store for the collection's items.
            </summary>
        </member>
        <member name="P:Forms9Patch.BaseMimeItemCollection.Items">
            <summary>
            Gets or sets the items for this MimeItemCollection
            </summary>
            <value>The items.</value>
        </member>
        <member name="T:Forms9Patch.Sharing">
            <summary>
            Forms9Patch.Clipboard class
            </summary>
        </member>
        <member name="M:Forms9Patch.Sharing.Share(Forms9Patch.MimeItemCollection,Xamarin.Forms.VisualElement)">
            <summary>
            Share the specified MimeItemCollection.  iPad: sharing popup points at target.
            </summary>
            <param name="collection">Collection.</param>
            <param name="target">Target.</param>
        </member>
        <member name="M:Forms9Patch.Sharing.Share(Forms9Patch.MimeItemCollection,Forms9Patch.Segment)">
            <summary>
            Share the specified MimeItemCollection.  iPad: sharing popup points at target.
            </summary>
            <param name="collection">Collection.</param>
            <param name="target">Target.</param>
        </member>
        <member name="T:Forms9Patch.EmbeddedResourceFontEffect">
            <summary>
            Enable EmbeddedResource fonts to be used with Xamarin elements
            </summary>
        </member>
        <member name="M:Forms9Patch.EmbeddedResourceFontEffect.#ctor(System.Reflection.Assembly)">
            <summary>
            Constructor for Forms9Patch.EmbeddedResourceFontEffect
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="M:Forms9Patch.EmbeddedResourceFontEffect.ApplyTo(Xamarin.Forms.VisualElement,System.Reflection.Assembly)">
            <summary>
            Applies EmbeddedResourceFontEffect to a Xamarin.Forms.VisualElement
            </summary>
            <returns><c>true</c>, if to was applyed, <c>false</c> otherwise.</returns>
            <param name="element">Element.</param>
            <param name="assembly">Assembly.</param>
        </member>
        <member name="T:Forms9Patch.EntryClearButtonEffect">
            <summary>
            Adds a clear button to a Xamarin.Forms.Entry
            </summary>
        </member>
        <member name="M:Forms9Patch.EntryClearButtonEffect.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Forms9Patch.EntryClearButtonEffect.ApplyTo(Xamarin.Forms.Entry)">
            <summary>
            Applies EntryClearButtonEffect to a Xamarin.Forms.Entry
            </summary>
            <param name="entry"></param>
            <returns>true if the effect was applied or is already present</returns>
        </member>
        <member name="T:Forms9Patch.EntryNoUnderlineEffect">
            <summary>
            Removed underline from a Xamarin.Forms.Entry
            </summary>
        </member>
        <member name="M:Forms9Patch.EntryNoUnderlineEffect.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Forms9Patch.EntryNoUnderlineEffect.ApplyTo(Xamarin.Forms.Entry)">
            <summary>
            Applies EntryNoUnderlineEffect to a Xamarin.Forms.Entry
            </summary>
            <param name="entry"></param>
            <returns>true if the effect was applied or is already present</returns>
        </member>
        <member name="T:Forms9Patch.SliderStepSizeEffect">
            <summary>
            Enabled StepSize control of Xamarin.Forms.Slider element
            </summary>
        </member>
        <member name="E:Forms9Patch.SliderStepSizeEffect.PropertyChanged">
            <summary>
            PropertyChanged event handler
            </summary>
        </member>
        <member name="P:Forms9Patch.SliderStepSizeEffect.StepSize">
            <summary>
            StepSize property
            </summary>
        </member>
        <member name="M:Forms9Patch.SliderStepSizeEffect.#ctor">
            <summary>
            Constructor for SliderStepSizeEffect
            </summary>
        </member>
        <member name="M:Forms9Patch.SliderStepSizeEffect.#ctor(System.Double)">
            <summary>
            Convenience constructor for SliderStepSizeEffect
            </summary>
            <param name="stepSize"></param>
        </member>
        <member name="M:Forms9Patch.SliderStepSizeEffect.ApplyTo(Xamarin.Forms.Slider,System.Reflection.Assembly)">
            <summary>
            Applies SliderStepSizeEffect to a Xamarin.Forms.Slider
            </summary>
            <returns><c>true</c>, if to was applyed, <c>false</c> otherwise.</returns>
            <param name="slider">Slider.</param>
            <param name="assembly">Assembly.</param>
        </member>
        <member name="T:Forms9Patch.WebViewPrintEffect">
            <summary>
            Effect required to enable Printing of content of Xamarin.Forms.WebView
            </summary>
        </member>
        <member name="F:Forms9Patch.WebViewPrintEffect.ActualSourceProperty">
            <summary>
            Backing store for WebViewPrintEffect's ActualSource property
            </summary>
        </member>
        <member name="M:Forms9Patch.WebViewPrintEffect.#ctor(Xamarin.Forms.WebView)">
            <summary>
            Effect required to enable printing of content of Xamarin.Forms.Webview
            </summary>
            <param name="webView"></param>
        </member>
        <member name="M:Forms9Patch.WebViewPrintEffect.ApplyTo(Xamarin.Forms.WebView)">
            <summary>
            Apply WebViewPrintEffect to Xamarin.Forms.WebView
            </summary>
            <param name="webView"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.MaterialButton">
            <summary>
            DEPRICATED: Use Button
            </summary>
        </member>
        <member name="T:Forms9Patch.Button">
            <summary>
            Forms9Patch Button.
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.SelectedFontColorProperty">
            <summary>
            OBSOLETE: Use SelectedTextColorProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.SelectedFontColor">
            <summary>
            OBSOLETE: Use SelectedTextColor
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="F:Forms9Patch.Button.StickyBehaviorProperty">
            <summary>
            OBSOLETE: Use ToggleBehaviorProperty instead.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.StickyBehavior">
            <summary>
            OBSOLETE: Use ToggleBehavior instead.
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.ImageSourceProperty">
            <summary>
            OBSOLETE: Use IconImageProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.ImageSource">
            <summary>
            OBSOLETE: Use IconImage.
            </summary>
            <value>The image.</value>
        </member>
        <member name="F:Forms9Patch.Button.TrailingImageProperty">
            <summary>
            OBSOLETE: Use TrailingIconProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.TrailingImage">
            <summary>
            OBSOLETE: Use TrailingIcon
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.TintImageProperty">
            <summary>
            OBSOLETE: Used TintIconProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.TintImage">
            <summary>
            OBSOLETE: Use TintIcon property
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.IsEllipticalProperty">
            <summary>
            backing store for IsEliptical property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.IsElliptical">
            <summary>
            Gets/Sets the IsEliptical property
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.FontColorProperty">
            <summary>
            OBSOLETE: Use TextColorProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.FontColor">
            <summary>
            OBSOLETE: Use TextColor
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="F:Forms9Patch.Button.AlignmentProperty">
            <summary>
            Backing store for the Button.Alignment bindable property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.Alignment">
            <summary>
            Gets or sets the alignment of the image and text.
            </summary>
            <value>The alignment (left, center, right).</value>
        </member>
        <member name="F:Forms9Patch.Button.FitProperty">
            <summary>
            backing store for Fit property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.Fit">
            <summary>
            Gets/Sets the Fit property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.Content">
            <summary>
            Do not use
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.IsLongPressEnabledProperty">
            <summary>
            The is long press enabled property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.IsLongPressEnabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.Button"/> has long press enabled.
            </summary>
            <value><c>true</c> if is long press enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.Button.IsClippedProperty">
            <summary>
            Backing store for the IsClipped property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.IsClipped">
            <summary>
            Gets or sets a value indicating whether the contents of this <see cref="T:Forms9Patch.Button"/> is clipped.
            </summary>
            <value><c>true</c> if is clipped; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.Button.SelectedTextColorProperty">
            <summary>
            Backing store for the SelectedTextColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.SelectedTextColor">
            <summary>
            Gets or sets the font color of the Text or the base font color of the HtmlText for when the button is selected
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.SelectedBackgroundColorProperty">
            <summary>
            Backing store for the Button.SelectedBackgroundColor bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.SelectedBackgroundColor">
            <summary>
            Gets or sets the background color used when selected.
            </summary>
            <value>The selected background.</value>
        </member>
        <member name="F:Forms9Patch.Button.CommandProperty">
            <summary>
            Backing store for the Button.Command bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.Command">
            <summary>
            Gets or sets the command to invoke when the button is activated. This is a bindable property.
            </summary>
            
            <value>
            A command to invoke when the button is activated. The default value is <see langword="null"/>.
            </value>
            
            <remarks>
            This property is used to associate a command with an instance of a button. This property is most often set in the MVVM pattern to bind callbacks back into the ViewModel. <see cref="P:Xamarin.Forms.VisualElement.IsEnabled"/> is controlled by the Command if set.
            </remarks>
        </member>
        <member name="F:Forms9Patch.Button.CommandParameterProperty">
            <summary>
            Backing store for the Button.CommandParameter bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.CommandParameter">
            <summary>
            Gets or sets the parameter to pass to the Command property. This is a bindable property.
            </summary>
            
            <value>
            A object to pass to the command property. The default value is <see langword="null"/>.
            </value>
            
            <remarks/>
        </member>
        <member name="F:Forms9Patch.Button.ToggleBehaviorProperty">
            <summary>
            Backing store for the Button.ToggleBehavior bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.ToggleBehavior">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.Button"/> will stay selected or unselected after a tap.
            </summary>
            <value><c>true</c> if togglable; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.Button.IsSelectedProperty">
            <summary>
            Backing store for the Button.IsSelected bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.IsSelected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.Button"/> is selected.
            </summary>
            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.Button.HapticEffectProperty">
            <summary>
            The haptic effect property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.HapticEffect">
            <summary>
            Gets or sets the haptic effect.
            </summary>
            <value>The haptic effect.</value>
        </member>
        <member name="F:Forms9Patch.Button.HapticEffectModeProperty">
            <summary>
            The haptic mode property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.HapticEffectMode">
            <summary>
            Gets or sets the haptic mode.
            </summary>
            <value>The haptic mode.</value>
        </member>
        <member name="F:Forms9Patch.Button.SoundEffectProperty">
            <summary>
            The sound effect property backing store
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.SoundEffect">
            <summary>
            Gets or sets the sound effect.
            </summary>
            <value>The sound effect.</value>
        </member>
        <member name="F:Forms9Patch.Button.SoundEffectModeProperty">
            <summary>
            The backing store for the sound effect mode property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.SoundEffectMode">
            <summary>
            Gets or sets the sound effect mode.
            </summary>
            <value>The sound effect mode.</value>
        </member>
        <member name="F:Forms9Patch.Button.IconImageProperty">
            <summary>
            Backing store for the IconImage property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.IconImage">
            <summary>
            Gets or sets the icon image.  Alternatively, use IconText
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.IconTextProperty">
            <summary>
            The image text property backing store
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.IconText">
            <summary>
            Gets or sets the image text - use this to specify the image as an HTML markup string.
            </summary>
            <value>The image text.</value>
        </member>
        <member name="F:Forms9Patch.Button.IconFontFamilyProperty">
            <summary>
            Backing store for the icon font family property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.IconFontFamily">
            <summary>
            Gets or sets the font family for the IconText
            </summary>
            <value>The icon font family.</value>
        </member>
        <member name="F:Forms9Patch.Button.InternalIconFontFamilyProperty">
            <summary>
            Backing store for Button InternalIconFontFamily property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.InternalIconFontFamily">
            <summary>
            controls value of .InternalIconFontFamily property
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.TrailingIconProperty">
            <summary>
            Backing store for the trailing image property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.TrailingIcon">
            <summary>
            Gets or sets if the image is to be rendered after the text.
            </summary>
            <value>default=false</value>
        </member>
        <member name="F:Forms9Patch.Button.TintIconProperty">
            <summary>
            The tint image property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.TintIcon">
            <summary>
            Will the TextColor be used to tint the IconImage?
            </summary>
            <value><c>true</c> tint IconImage with TextColor; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.Button.IconColorProperty">
            <summary>
            Backing store for Button IconColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.IconColor">
            <summary>
            Overrides the icon color as provided by the Button's TextColor (if TintIcon=true), the default TextColor (if IconText != null), or the IconImage colors
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.IconFontSizeProperty">
            <summary>
            Backing store for Button IconFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.IconFontSize">
            <summary>
            Overrides the default icon font size (the button's FontSize).
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.InternalIconFontSizeProperty">
            <summary>
            Backing store for Button InternalFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.InternalIconFontSize">
            <summary>
            controls value of .InternalFontSize property
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.HasTightSpacingProperty">
            <summary>
            The has tight spacing property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.HasTightSpacing">
            <summary>
            Gets or sets if the Icon/Image is close (TightSpacing) to text or at edge (not TightSpacing) of button.
            </summary>
            <value><c>true</c> if has tight spacing; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.Button.SpacingProperty">
            <summary>
            Backing store for the spacing property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.Spacing">
            <summary>
            Gets or sets the spacing.
            </summary>
            <value>The spacing.</value>
        </member>
        <member name="F:Forms9Patch.Button.OrientationProperty">
            <summary>
            Backing store for the Button's orientation property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.Orientation">
            <summary>
            Gets or sets the orientation of the iamge and label.
            </summary>
            <value>The image and label orientation.</value>
        </member>
        <member name="F:Forms9Patch.Button.BackgroundColorProperty">
            <summary>
            Backing store for the BackgroundColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.BackgroundColor">
            <summary>
            Gets or sets the button's background color
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.HasShadowProperty">
            <summary>
            Backing store for the HasShadow property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.HasShadow">
            <summary>
            controls if the button has a shadow
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.OutlineColorProperty">
            <summary>
            Backing store for the OutlineColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.OutlineColor">
            <summary>
            controls the outline color of the button
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.BorderColorProperty">
            <summary>
            Backing store for Button's BorderColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.BorderColor">
            <summary>
            controls value of .BorderColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.OutlineWidthProperty">
            <summary>
            Backing store for the button's OutlineWidth property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.OutlineWidth">
            <summary>
            controls the width of the button's outline
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.BorderWidthProperty">
            <summary>
            Backing store for Button's BorderWidth property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.BorderWidth">
            <summary>
            controls value of .BorderWidth property
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.TextProperty">
            <summary>
            Backing store for the Button.Text bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="F:Forms9Patch.Button.HtmlTextProperty">
            <summary>
            Backing store for the formatted text property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.HtmlText">
            <summary>
            Gets or sets the formatted text.
            </summary>
            <value>The formatted text.</value>
        </member>
        <member name="F:Forms9Patch.Button.TextColorProperty">
            <summary>
            Backing store for the TextColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.TextColor">
            <summary>
            Gets or sets the font color of the Text or the base font color of the HtmlText
            </summary>
        </member>
        <member name="F:Forms9Patch.Button.HorizontalTextAlignmentProperty">
            <summary>
            Backing store for the Button.Alignment bindable property
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.HorizontalTextAlignment">
            <summary>
            Gets or sets the alignment of the image and text.
            </summary>
            <value>The alignment (left, center, right).</value>
        </member>
        <member name="F:Forms9Patch.Button.VerticalTextAlignmentProperty">
            <summary>
            Backing store for the vertical alignment property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
            <value>The vertical alignment.</value>
        </member>
        <member name="F:Forms9Patch.Button.LineBreakModeProperty">
            <summary>
            The line break mode property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.LineBreakMode">
            <summary>
            Gets or sets the line break mode.
            </summary>
            <value>The line break mode.</value>
        </member>
        <member name="F:Forms9Patch.Button.AutoFitProperty">
            <summary>
            The fit property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.AutoFit">
            <summary>
            Gets or sets the fit.
            </summary>
            <value>The fit.</value>
        </member>
        <member name="F:Forms9Patch.Button.LinesProperty">
            <summary>
            The lines property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.Lines">
            <summary>
            Gets or sets the lines.
            </summary>
            <value>The lines.</value>
        </member>
        <member name="F:Forms9Patch.Button.MinFontSizeProperty">
            <summary>
            The backing store for the minimum font size property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.MinFontSize">
            <summary>
            Gets or sets the minimum size of the font allowed during an autofit. 
            </summary>
            <value>The minimum size of the font.  Default=4</value>
        </member>
        <member name="F:Forms9Patch.Button.FontSizeProperty">
            <summary>
            Backing store for the Button.FontSize bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="F:Forms9Patch.Button.FontFamilyProperty">
            <summary>
            Backing store for the Button.FontFamiily bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="F:Forms9Patch.Button.FontAttributesProperty">
            <summary>
            Backing store for the Button.FontAttributes bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.FontAttributes">
            <summary>
            Gets or sets the font attributes.
            </summary>
            <value>The font attributes.</value>
        </member>
        <member name="F:Forms9Patch.Button.DarkThemeProperty">
            <summary>
            Backing store for the Button.DarkTheme property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.DarkTheme">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.Button"/> if for a dark theme.
            </summary>
            <value><c>true</c> if dark theme; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.Button.FittedFontSize">
            <summary>
            Gets the FittedFontSize of the button's text (assuming it hasn't been overridden by SychronizedFontSize
            </summary>
        </member>
        <member name="P:Forms9Patch.Button.SynchronizedFontSize">
            <summary>
            Overrides the button's label's FontSize for the purpose of synchronization between 
            </summary>
        </member>
        <member name="F:Forms9Patch.Button._stackLayout">
            <summary>
            The stack layout.
            </summary>
        </member>
        <member name="F:Forms9Patch.Button._iconImage">
            <summary>
            The image.
            </summary>
        </member>
        <member name="F:Forms9Patch.Button._label">
            <summary>
            The label.
            </summary>
        </member>
        <member name="F:Forms9Patch.Button._iconLabel">
            <summary>
            The icon label.
            </summary>
        </member>
        <member name="F:Forms9Patch.Button._gestureListener">
            <summary>
            The gesture listener.
            </summary>
        </member>
        <member name="F:Forms9Patch.Button._constructing">
            <summary>
            The constructing.
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.Button"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.#ctor(System.String,Forms9Patch.Image)">
            <summary>
            Instantiates an new Button and sets its Text and imageSource properties
            </summary>
            <param name="text"></param>
            <param name="image"></param>
        </member>
        <member name="M:Forms9Patch.Button.#ctor(System.String,Xamarin.Forms.ImageSource)">
            <summary>
            Instantiates an new Button and sets its Text property and sets the IconImage to a new image, created using the provided ImageSource
            </summary>
            <param name="text"></param>
            <param name="imageSource"></param>
        </member>
        <member name="M:Forms9Patch.Button.#ctor(System.String,System.String,System.Reflection.Assembly)">
            <summary>
            Instantiates a new Button and sets its Text and either its IconText or its IconImage, created using the provided embedded resource id 
            </summary>
            <param name="text">Button's text</param>
            <param name="icon">Segments's icon (either EmbeddedResourceId or HtmlText)</param>
            <param name="assembly">Assembly that has EmbeddedResource used for Icon</param>
        </member>
        <member name="F:Forms9Patch.Button._disposed">
            <summary>
            The disposed value.
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.Dispose(System.Boolean)">
            <summary>
            Dispose the specified disposing.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:Forms9Patch.Button.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.Button"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.Button"/>.</returns>
        </member>
        <member name="M:Forms9Patch.Button.Tap">
            <summary>
            Tap this instance.
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.OnDown(System.Object,FormsGestures.DownUpEventArgs)">
            <summary>
            Called when button is pressed down
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Forms9Patch.Button.OnUp(System.Object,FormsGestures.DownUpEventArgs)">
            <summary>
            Called when button is released
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Forms9Patch.Button.OnTapped(System.Object,FormsGestures.TapEventArgs)">
            <summary>
            Called when button is tapped
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Forms9Patch.Button.OnLongPressed(System.Object,FormsGestures.LongPressEventArgs)">
            <summary>
            Called whe button is released after long press
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Forms9Patch.Button.OnLongPressing(System.Object,FormsGestures.LongPressEventArgs)">
            <summary>
            Called whe button has been long pressed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Forms9Patch.Button.UpdateElements(System.Boolean)">
            <summary>
            Updates the elements in the button
            </summary>
            <param name="isSegment"></param>
        </member>
        <member name="E:Forms9Patch.Button.Clicked">
            <summary>
            Xamarin.Forms.IButton Clicked event
            </summary>
        </member>
        <member name="E:Forms9Patch.Button.Pressed">
            <summary>
            Xamarin.Forms.IButton Pressed event
            </summary>
        </member>
        <member name="E:Forms9Patch.Button.Released">
            <summary>
            Xamarin.Forms.IButton Released event
            </summary>
        </member>
        <member name="E:Forms9Patch.Button.Tapped">
            <summary>
            Occurs when the Button is clicked.
            </summary>
            
            <remarks>
            The user may be able to raise the clicked event using accessibility or keyboard controls when the Button has focus.
            </remarks>
        </member>
        <member name="M:Forms9Patch.Button.InvokeTapped(System.Object,System.EventArgs)">
            <summary>
            Invokes the tapped.
            </summary>
            <param name="sender">Sender.</param>
            <param name="args">Arguments.</param>
        </member>
        <member name="E:Forms9Patch.Button.Selected">
            <summary>
            Occurs when transitioned to IsSelected=true.
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.InvokeSelected(System.Object,System.EventArgs)">
            <summary>
            Invokes the selected.
            </summary>
            <param name="sender">Sender.</param>
            <param name="args">Arguments.</param>
        </member>
        <member name="E:Forms9Patch.Button.LongPressing">
            <summary>
            Occurs when button is actively being long pressed
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.InvokeLongPressing(System.Object,System.EventArgs)">
            <summary>
            Invokes the long pressing.
            </summary>
            <param name="sender">Sender.</param>
            <param name="args">Arguments.</param>
        </member>
        <member name="E:Forms9Patch.Button.LongPressed">
            <summary>
            Occurs when long pressed has completed.
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.InvokeLongPressed(System.Object,System.EventArgs)">
            <summary>
            Invokes the long pressed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Forms9Patch.Button.GetMinSize">
            <summary>
            What is the smallest that this button can be rendered (in one line of text)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Button.CheckIsClipped(System.Double,System.Double)">
            <summary>
            Test if the segment contents are clipped
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Button.OnPropertyChanging(System.String)">
            <param name="propertyName">The name of the changed property.</param>
            <summary>
            Call this method from a child class to notify that a change happened on a property.
            </summary>
            
            <remarks>
            A Button triggers this by itself. An inheritor only need to call this for properties without BindableProperty as backend store.
            </remarks>
        </member>
        <member name="M:Forms9Patch.Button.OnPropertyChanged(System.String)">
            <param name="propertyName">The name of the changed property.</param>
            <summary>
            Call this method from a child class to notify that a change happened on a property.
            </summary>
            
            <remarks>
            A Button triggers this by itself. An inheritor only need to call this for properties without BindableProperty as backend store.
            </remarks>
        </member>
        <member name="M:Forms9Patch.Button.SendTapped">
            <summary>
            Sends the tapped.
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.SendClicked">
            <summary>
            Xamarin.Forms.IButtonController SendClicked method
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.SendPressed">
            <summary>
            Xamarin.Forms.IButtonController SendPressed method
            </summary>
        </member>
        <member name="M:Forms9Patch.Button.SendReleased">
            <summary>
            Xamarin.Forms.IButtonController SendReleased method
            </summary>
        </member>
        <member name="T:Forms9Patch.Segment">
            <summary>
            Model for Segment.
            </summary>
        </member>
        <member name="F:Forms9Patch.Segment.FontColorProperty">
            <summary>
            OBSOLETE: Use TextColorProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.FontColor">
            <summary>
            OBSOLETE: Use TextColor
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="F:Forms9Patch.Segment.ImageSourceProperty">
            <summary>
            Backing store for the Image bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.ImageSource">
            <summary>
            Gets or sets the companion image for this this <see cref="T:Forms9Patch.Segment"/> - alternative to IconText.
            </summary>
            <value>The image.</value>
        </member>
        <member name="F:Forms9Patch.Segment.IconImageProperty">
            <summary>
            Bindable Property for the IconImage property
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.IconImage">
            <summary>
            Gets or sets the icon image for this <see cref="T:Forms9Patch.Segment"/>.  Alternative to IconText prop
            </summary>
        </member>
        <member name="F:Forms9Patch.Segment.IconTextProperty">
            <summary>
            The icon text property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.IconText">
            <summary>
            Gets or sets the icon text - alternative to ImageSource.
            </summary>
            <value>The icon text.</value>
        </member>
        <member name="F:Forms9Patch.Segment.IconFontFamilyProperty">
            <summary>
            Backing store for Segment IconFontFamily property
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.IconFontFamily">
            <summary>
            controls value of .IconFontFamily property
            </summary>
        </member>
        <member name="F:Forms9Patch.Segment.IconFontSizeProperty">
            <summary>
            Backing store for Segment IconFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.IconFontSize">
            <summary>
            controls value of .IconFontSize property
            </summary>
        </member>
        <member name="F:Forms9Patch.Segment.TextProperty">
            <summary>
            Backing store for the Text bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.Text">
            <summary>
            Gets or sets the text for this <see cref="T:Forms9Patch.Segment"/>.
            </summary>
            <value>The text.</value>
        </member>
        <member name="F:Forms9Patch.Segment.HtmlTextProperty">
            <summary>
            Backing store for the formatted text property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.HtmlText">
            <summary>
            Gets or sets the formatted text.
            </summary>
            <value>The formatted text.</value>
        </member>
        <member name="F:Forms9Patch.Segment.TextColorProperty">
            <summary>
            Backing store for the Segment.TextColor bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.TextColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="F:Forms9Patch.Segment.FontAttributesProperty">
            <summary>
            Backing store for the Segment.FontAttributes bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.FontAttributes">
            <summary>
            Gets or sets the font attributes.
            </summary>
            <value>The font attributes.</value>
        </member>
        <member name="F:Forms9Patch.Segment.IsEnabledProperty">
            <summary>
            The backing store for the is enabled property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.Segment"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.Segment.IsSelectedProperty">
            <summary>
            The backing store for the is selected property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.IsSelected">
            <summary>
            
            </summary>
            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.Segment.OrientationProperty">
            <summary>
            The backing store for the orientation property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.Orientation">
            <summary>
            Gets or sets the image/lable orientation.
            </summary>
            <value>The iamge/label orientation.</value>
        </member>
        <member name="F:Forms9Patch.Segment.CommandProperty">
            <summary>
            Backing store for the Segment.Command bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.Command">
            <summary>
            Gets or sets the command to invoke when the segment is selected.
            </summary>
            
            <value>
            A command to invoke when the segment is selected. The default value is <see langword="null"/>.
            </value>
            
            <remarks>
            This property is used to associate a command with an instance of a segment. This property is most often set in the MVVM pattern to bind callbacks back into the ViewModel. <see cref="P:Xamarin.Forms.VisualElement.IsEnabled"/> is controlled by the Command if set.
            </remarks>
        </member>
        <member name="F:Forms9Patch.Segment.CommandParameterProperty">
            <summary>
            Backing store for the Segment.CommandParameter bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Segment.CommandParameter">
            <summary>
            Gets or sets the parameter to pass to the Command property. 
            </summary>
            
            <value>
            A object to pass to the command property. The default value is <see langword="null"/>.
            </value>
            
            <remarks/>
        </member>
        <member name="P:Forms9Patch.Segment.VisualElement">
            <summary>
            Gets the visual element used to render the Segment (to support Bubble Popup).
            </summary>
            <value>The visual element.</value>
        </member>
        <member name="E:Forms9Patch.Segment.Tapped">
            <summary>
            Occurs when Segment is tapped.
            </summary>
        </member>
        <member name="E:Forms9Patch.Segment.Selected">
            <summary>
            Occurs when Segment is selected.
            </summary>
        </member>
        <member name="E:Forms9Patch.Segment.LongPressing">
            <summary>
            Occurs when long pressing.
            </summary>
        </member>
        <member name="E:Forms9Patch.Segment.LongPressed">
            <summary>
            Occurs when long pressed.
            </summary>
        </member>
        <member name="M:Forms9Patch.Segment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.Segment"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.Segment.#ctor(System.String,Forms9Patch.Image)">
            <summary>
            Instantiates an new Segment and sets its Text and imageSource properties
            </summary>
            <param name="text"></param>
            <param name="image"></param>
        </member>
        <member name="M:Forms9Patch.Segment.#ctor(System.String,Xamarin.Forms.ImageSource)">
            <summary>
            Instantiates an new Segment and sets its Text property and sets the IconImage to a new image, created using the provided ImageSource
            </summary>
            <param name="text"></param>
            <param name="imageSource"></param>
        </member>
        <member name="M:Forms9Patch.Segment.#ctor(System.String,System.String,System.Reflection.Assembly)">
            <summary>
            Instantiates a new Segment and sets its Text and either its IconText or its IconImage, created using the provided embedded resource id 
            </summary>
            <param name="text">Segment's text</param>
            <param name="icon">Segments's icon (either EmbeddedResourceId or HtmlText)</param>
            <param name="assembly">Assembly that has EmbeddedResource used for Icon</param>
        </member>
        <member name="M:Forms9Patch.Segment.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.Segment.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Forms9Patch.Segment.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <returns>The property changed.</returns>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:Forms9Patch.Segment.Tap">
            <summary>
            Tap this instance.
            </summary>
        </member>
        <member name="M:Forms9Patch.Segment.SendClicked">
            <summary>
            Programmically click the segement
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentButton.ExtendedElementShapeOrientationProperty">
            <summary>
            Backing store for the extended element shape orientation property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentButton.ExtendedElementShapeOrientation">
            <summary>
            Gets or sets the orientation of the shape if it's an extended element shape
            </summary>
            <value>The forms9 patch. IS hape. extended element shape orientation.</value>
        </member>
        <member name="F:Forms9Patch.SegmentButton.ExtendedElementShapeProperty">
            <summary>
            backing store for ExtendedElementShape property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentButton.ExtendedElementShape">
            <summary>
            Gets/Sets the ExtendedElementShape property
            </summary>
        </member>
        <member name="M:Forms9Patch.SegmentButton.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.MaterialSegmentedControl">
            <summary>
            DEPRICATED: USE SegmentedControl
            </summary>
        </member>
        <member name="T:Forms9Patch.SegmentedControl">
            <summary>
            Forms9Patch Material Segmented Control.
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.FontColorProperty">
            <summary>
            Use TextColorProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.FontColor">
            <summary>
            OBSOLETE: Use TextColor
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.SelectedFontColorProperty">
            <summary>
            OBSOLETE: Use SelectedTextColorProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.SelectedFontColor">
            <summary>
            OBSOLETE: Use SelectedTextColor property
            </summary>
            <value>The color of the selected font.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.StickyBehaviorProperty">
            <summary>
            OBSOLETE: Use ToggleBehaviorProperty instead.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.StickyBehavior">
            <summary>
            OBSOLETE: Use ToggleBehavior instead.
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.TrailingImageProperty">
            <summary>
            OBSOLETE: Use TrailingIconProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.TrailingImage">
            <summary>
            OBSOLETE: Use TrailingIcon
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.TintImageProperty">
            <summary>
            OBSOLETE: Use TintIconProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.TintImage">
            <summary>
            OBSOLETE: Use TintIcon property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.Content">
            <summary>
            Do not sue!
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.IsClippedProperty">
            <summary>
            Backing store for the IsClipped property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.IsClipped">
            <summary>
            Gets or sets a value indicating whether any of the contents of this <see cref="T:Forms9Patch.SegmentedControl"/> is clipped.
            </summary>
            <value><c>true</c> if is clipped; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.SyncSegmentFontSizesProperty">
            <summary>
            The size segment fonts equally property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.SyncSegmentFontSizes">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.SegmentedControl"/> size segment fonts equally.
            </summary>
            <value><c>true</c> if size segment fonts equally; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.Segments">
            <summary>
            The container for the Segmented Control's buttons.
            </summary>
            <value>The buttons.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.PaddingProperty">
            <summary>
            Identifies the Padding bindable property.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.Padding">
            <summary>
            Gets or sets the padding for SegmentedControl's segments.
            </summary>
            <value>The Thickness values for the layout. The default value is a Thickness with all values set to 0.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.SelectedTextColorProperty">
            <summary>
            The selected text color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.SelectedTextColor">
            <summary>
            Gets or sets the color of the selected font.
            </summary>
            <value>The color of the selected font.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.FontAttributesProperty">
            <summary>
            Backing store for the Button.FontAttributes bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.FontAttributes">
            <summary>
            Gets or sets the font attributes.
            </summary>
            <value>The font attributes.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.FontSizeProperty">
            <summary>
            Backing store for the Button.FontSize bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.FontFamilyProperty">
            <summary>
            Backing store for the Button.FontFamiily bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.IconFontFamilyProperty">
            <summary>
            Backing store for IconFontFamily property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.IconFontFamily">
            <summary>
            Sets the font used for rendering the IconText 
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.IconFontSizeProperty">
            <summary>
            Backing store for SegmentedControl IconFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.IconFontSize">
            <summary>
            controls value of .IconFontSize property
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.BackgroundColorProperty">
            <summary>
            Backing store for the Button.BackgroundColor bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.SelectedBackgroundColorProperty">
            <summary>
            Backing store for the Selected.BackgroundColor property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.SelectedBackgroundColor">
            <summary>
            Gets or sets the background color used when selected.
            </summary>
            <value>The selected background.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.DarkThemeProperty">
            <summary>
            Backing store for the Button.DarkTheme property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.DarkTheme">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.Button"/> if for a dark theme.
            </summary>
            <value><c>true</c> if dark theme; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.SelectedSegments">
            <summary>
            Gets the selected segments(s).
            </summary>
            <value>The selected segment(s).</value>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.SelectedIndexes">
            <summary>
            Gets the selected index(es).
            </summary>
            <value>The selected index(es).</value>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.IsIndexSelected(System.Int32)">
            <summary>
            Answers the question: Is an index selected?
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.IsLongPressEnabledProperty">
            <summary>
            The is long press enabled property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.IsLongPressEnabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.SegmentedControl"/> has long press enabled.
            </summary>
            <value><c>true</c> if is long press enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.GroupToggleBehaviorProperty">
            <summary>
            The backing store for the MaterialSegmentControl's ToggleBehavior property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.GroupToggleBehavior">
            <summary>
            Gets or sets the MaterialSegmentControl's Toggle behavior.
            </summary>
            <value>The Toggle behavior (None, Radio, Multiselect).</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.SeparatorWidthProperty">
            <summary>
            The backing store for the MaterialSegmentControl's SeparatorWidth property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.SeparatorWidth">
            <summary>
            Gets or sets the width of the separator.  Uses OutlineWidth by default (-1).
            </summary>
            <value>The width of the separator.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.TrailingIconProperty">
            <summary>
            Backing store for the trailing image property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.TrailingIcon">
            <summary>
            Gets or sets if the image is to be rendered after the text.
            </summary>
            <value>default=false</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.HapticEffectProperty">
            <summary>
            The haptic effect property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.HapticEffect">
            <summary>
            Gets or sets the haptic effect.
            </summary>
            <value>The haptic effect.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.HapticEffectModeProperty">
            <summary>
            The haptic mode property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.HapticEffectMode">
            <summary>
            Gets or sets the haptic mode.
            </summary>
            <value>The haptic mode.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.SoundEffectProperty">
            <summary>
            The backing store for the sound effect property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.SoundEffect">
            <summary>
            Gets or sets the sound effect played when a segment is tapped
            </summary>
            <value>The sound effect.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.SoundEffectModeProperty">
            <summary>
            Backing store for the sound effect mode property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.SoundEffectMode">
            <summary>
            Gets or sets the sound effect is perfomed when a segment is tapped
            </summary>
            <value>The sound effect mode.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.TintIconProperty">
            <summary>
            The tint image property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.TintIcon">
            <summary>
            Will the TextColor be applied to the IconImage image?
            </summary>
            <value><c>true</c> tint IconImage image with TextColor; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.IconColorProperty">
            <summary>
            Backing store for SegmentedControl IconColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.IconColor">
            <summary>
            controls value of .IconColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.HasTightSpacingProperty">
            <summary>
            The has tight spacing property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.HasTightSpacing">
            <summary>
            Gets or sets if the Icon/Image is close (TightSpacing) to text or at edge (not TightSpacing) of button.
            </summary>
            <value><c>true</c> if has tight spacing; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.IntraSegmentOrientationProperty">
            <summary>
            The backing store for the segments orientation property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.IntraSegmentOrientation">
            <summary>
            Gets or sets the orientation of elements within the segments.
            </summary>
            <value>The orientation of the elements within the segments.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.IntraSegmentSpacingProperty">
            <summary>
            The backing store for the intra segment spacing property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.IntraSegmentSpacing">
            <summary>
            Gets or sets the intra segment spacing.
            </summary>
            <value>The intra segment spacing.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.OrientationProperty">
            <summary>
            Backing store for the Orienation property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.Orientation">
            <summary>
            controls the orientation of the segments relative to eachother
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.TextColorProperty">
            <summary>
            Backing store for the TextColor bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.TextColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.HorizontalTextAlignmentProperty">
            <summary>
            Backing store for the horizontal text alignment property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal text alignment.
            </summary>
            <value>The horizontal text alignment.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.VerticalTextAlignmentProperty">
            <summary>
            Backing store for the vertical text alignment property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
            <value>The vertical text alignment.</value>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.LineBreakModeProperty">
            <summary>
            backing store for LineBreakMode property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.LineBreakMode">
            <summary>
            Gets/Sets the LineBreakMode property
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.AutoFitProperty">
            <summary>
            backing store for AutoFit property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.AutoFit">
            <summary>
            Gets/Sets the AutoFit property
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.LinesProperty">
            <summary>
            backing store for Lines property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.Lines">
            <summary>
            Gets/Sets the Lines property
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControl.MinFontSizeProperty">
            <summary>
            backing store for MinFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.SegmentedControl.MinFontSize">
            <summary>
            Gets/Sets the MinFontSize property
            </summary>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SegmentedControl"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.Dispose(System.Boolean)">
            <summary>
            Dispose the specified disposing.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.Dispose">
            <summary>
            Dispose of Forms9Patch.SegmentedControl element.
            </summary>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.TapIndex(System.Int32)">
            <summary>
            Taps the index.
            </summary>
            <param name="index">Index.</param>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.SelectIndex(System.Int32)">
            <summary>
            Selects the segment at index.
            </summary>
            <param name="index">segment index.</param>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.DeselectIndex(System.Int32)">
            <summary>
            Deselected the segment at index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.SelectAll">
            <summary>
            Selects all segments
            </summary>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.DeselectAll">
            <summary>
            Deselects all segments.
            </summary>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.OnBindingContextChanged">
            <summary>
            Called when BindingContext is changed
            </summary>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.OnPropertyChanged(System.String)">
            <param name="propertyName">The name of the property that changed.</param>
            <summary>
            Call this method from a child class to notify that a change happened on a property.
            </summary>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.GetMinSize">
            <summary>
            What is the smallest that this control can be rendered (labels are 1 line)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.OnMeasure(System.Double,System.Double)">
            <summary>
            Processes a measurement request
            </summary>
            <param name="widthConstraint"></param>
            <param name="heightConstraint"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <param name="x">A value representing the x coordinate of the child region bounding box.</param>
            <param name="y">A value representing the y coordinate of the child region bounding box.</param>
            <param name="width">A value representing the width of the child region bounding box.</param>
            <param name="height">A value representing the height of the child region bounding box.</param>
            <summary>
            Positions and sizes the children of a Layout.
            </summary>
            <remarks>Implementors wishing to change the default behavior of a Layout should override this method. It is suggested to
            still call the base method and modify its calculated results.</remarks>
        </member>
        <member name="M:Forms9Patch.SegmentedControl.CheckIsClipped(System.Double,System.Double)">
            <summary>
            tests if the contents of a segment is clipped
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="E:Forms9Patch.SegmentedControl.SegmentTapped">
            <summary>
            Occurs when one of the segments is tapped.
            </summary>
        </member>
        <member name="E:Forms9Patch.SegmentedControl.SegmentSelected">
            <summary>
            Occurs when one of the segments is selected.
            </summary>
        </member>
        <member name="E:Forms9Patch.SegmentedControl.SegmentLongPressing">
            <summary>
            Occurs when segment long pressing.
            </summary>
        </member>
        <member name="E:Forms9Patch.SegmentedControl.SegmentLongPressed">
            <summary>
            Occurs when segment long pressed.
            </summary>
        </member>
        <member name="T:Forms9Patch.ImageButton">
            <summary>
            Depricated: Use StateButton
            </summary>
        </member>
        <member name="T:Forms9Patch.StateButton">
            <summary>
            Image button.
            </summary>
        </member>
        <member name="F:Forms9Patch.StateButton.TextProperty">
            <summary>
            Backing store for the Button.Text bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.StateButton.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="F:Forms9Patch.StateButton.HtmlTextProperty">
            <summary>
            Backing store for the formatted text property.
            </summary>
        </member>
        <member name="P:Forms9Patch.StateButton.HtmlText">
            <summary>
            Gets or sets the formatted text.
            </summary>
            <value>The formatted text.</value>
        </member>
        <member name="F:Forms9Patch.StateButton.IconImageProperty">
            <summary>
            Backing store for the IconImage property
            </summary>
        </member>
        <member name="P:Forms9Patch.StateButton.IconImage">
            <summary>
            Gets or sets the icon image.  Alternatively, use IconText
            </summary>
        </member>
        <member name="F:Forms9Patch.StateButton.IconTextProperty">
            <summary>
            The image text property backing store
            </summary>
        </member>
        <member name="P:Forms9Patch.StateButton.IconText">
            <summary>
            Gets or sets the image text - use this to specify the image as an HTML markup string.
            </summary>
            <value>The image text.</value>
        </member>
        <member name="F:Forms9Patch.StateButton.DefaultStateProperty">
            <summary>
            Backing store for the DefaultState bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.StateButton.DefaultState">
            <summary>
            Gets or sets the StateButton's properties for the default button state.
            </summary>
            <value>The ButtonState structure for the default button state.</value>
        </member>
        <member name="F:Forms9Patch.StateButton.PressingStateProperty">
            <summary>
            Backing store for the PressingState bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.StateButton.PressingState">
            <summary>
            Gets or sets the StateButton's properties for the pressing button state.
            </summary>
            <value>The ButtonState structure for the pressing button state.</value>
        </member>
        <member name="F:Forms9Patch.StateButton.SelectedStateProperty">
            <summary>
            Backing store for the SelectedState bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.StateButton.SelectedState">
            <summary>
            Gets or sets the StateButton's properties for the selected button state.
            </summary>
            <value>The ButtonState structure for the selected button state.</value>
        </member>
        <member name="F:Forms9Patch.StateButton.DisabledStateProperty">
            <summary>
            Backing store for the DisabledState bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.StateButton.DisabledState">
            <summary>
            Gets or sets the StateButton's properties for the disabled button state.
            </summary>
            <value>The ButtonState structure for the disabled button state.</value>
        </member>
        <member name="F:Forms9Patch.StateButton.DisabledAndSelectedStateProperty">
            <summary>
            Backing store for the DisabledAndSelectedState bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.StateButton.DisabledAndSelectedState">
            <summary>
            Gets or sets the StateButton's properties for the disabled and selected button state.
            </summary>
            <value>The ButtonState structure for the disabled and selected button state.</value>
        </member>
        <member name="M:Forms9Patch.StateButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.StateButton"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.StateButton.Dispose(System.Boolean)">
            <summary>
            Dispose the specified disposing.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:Forms9Patch.StateButton.Dispose">
            <summary>
            Called when the button is disposed
            </summary>
        </member>
        <member name="M:Forms9Patch.StateButton.UpdateState">
            <summary>
            Redraws the button to the current state: Default, Selected, Disabled or DisabledAndSelected.
            </summary>
        </member>
        <member name="M:Forms9Patch.StateButton.ShowState(Forms9Patch.ButtonState)">
            <summary>
            Redraws the button to a custom ButtonState
            </summary>
            <param name="newState">Custom ButtonState.</param>
        </member>
        <member name="M:Forms9Patch.StateButton.Tap">
            <summary>
            Tap this instance.
            </summary>
        </member>
        <member name="M:Forms9Patch.StateButton.OnUp(System.Object,FormsGestures.DownUpEventArgs)">
            <summary>
            Called when the button is released
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Forms9Patch.StateButton.OnDown(System.Object,FormsGestures.DownUpEventArgs)">
            <summary>
            Called when the button is pressed down
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Forms9Patch.StateButton.OnLongPressing(System.Object,FormsGestures.LongPressEventArgs)">
            <summary>
            Called when the button is in long press state
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Forms9Patch.StateButton.OnLongPressed(System.Object,FormsGestures.LongPressEventArgs)">
            <summary>
            Called when the button is released from a long press state
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Forms9Patch.StateButton.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.ColorGradientBox">
            <summary>
            Box view with a color gradient fill.  Don't count on this element sticking around for too long.
            </summary>
        </member>
        <member name="F:Forms9Patch.ColorGradientBox.StartColorProperty">
            <summary>
            The start color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ColorGradientBox.StartColor">
            <summary>
            Gets or sets the start color.
            </summary>
            <value>The start color.</value>
        </member>
        <member name="F:Forms9Patch.ColorGradientBox.EndColorProperty">
            <summary>
            The end color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ColorGradientBox.EndColor">
            <summary>
            Gets or sets the end color.
            </summary>
            <value>The end color.</value>
        </member>
        <member name="F:Forms9Patch.ColorGradientBox.OrientationProperty">
            <summary>
            The orientation property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ColorGradientBox.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="T:Forms9Patch.Image">
            <summary>
            Forms9Patch.Image element
            </summary>
        </member>
        <member name="M:Forms9Patch.Image.ClearDownloadCache(System.String)">
            <summary>
            Clears the cache of Forms9Patch images sourced using Xamarin.Forms.ImageSource.FromUri
            </summary>
            <param name="uri">The URI of the image.  If null, all cached images are cleared.</param>
        </member>
        <member name="M:Forms9Patch.Image.ClearEmbeddedResourceCache(System.String,System.Reflection.Assembly)">
            <summary>
            Apps run faster when Embedded Resources image don't have to be extracted EVERY SINGLE TIME.  This clears the cache of these images.
            </summary>
            <param name="resourceId"></param>
            <param name="assembly"></param>
        </member>
        <member name="F:Forms9Patch.Image.SourceProperty">
            <summary>
            backing store for Source property
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.Source">
            <summary>
            Gets/Sets the Source property
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.IsLoadingProperty">
            <summary>
            backing store for IsLoading property
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.IsLoading">
            <summary>
            Gets/Sets the IsLoading property
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.FillProperty">
            <summary>
            Backing store for the Fill bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.Fill">
            <summary>
            Fill behavior for nonscalable (not NinePatch or CapInsets not set) image. 
            </summary>
            <value>The fill method (AspectFill, AspectFit, Fill, Tile)</value>
        </member>
        <member name="F:Forms9Patch.Image.CapInsetsProperty">
            <summary>
            Backing store for the CapsInset bindable property.
            </summary>
            <remarks>
            End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. 
            When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance.
            </remarks>
            <value>The end-cap insets (double or int)</value>
        </member>
        <member name="P:Forms9Patch.Image.CapInsets">
            <summary>
            Gets or sets the end-cap insets.  This is a bindable property.
            </summary>
            <value>The end-cap insets.</value>
        </member>
        <member name="F:Forms9Patch.Image.ContentPaddingProperty">
            <summary>
            Backing store for the ContentPadding bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.ContentPadding">
            <summary>
            Gets content padding if Source is NinePatch image.
            </summary>
            <value>The content padding.</value>
        </member>
        <member name="F:Forms9Patch.Image.TintColorProperty">
            <summary>
            The tint property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.TintColor">
            <summary>
            Gets or sets the image's tint.
            </summary>
            <value>The tint.  Default is not to tint the image</value>
        </member>
        <member name="P:Forms9Patch.Image.SourceImageSize">
            <summary>
            Size of source image
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.SourceImageWidth">
            <summary>
            Width of source image
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.SourceImageHeight">
            <summary>
            Height of source Image
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.AntiAliasProperty">
            <summary>
            backing store for AntiAlias property
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.AntiAlias">
            <summary>
            Gets/Sets the AntiAlias property
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.ExtendedElementShapeOrientationProperty">
            <summary>
            Backing store for the extended element shape orientation property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.Forms9Patch#IExtendedShape#ExtendedElementShapeOrientation">
            <summary>
            Gets or sets the orientation of the shape if it's an extended element shape
            </summary>
            <value>The forms9 patch. IS hape. extended element shape orientation.</value>
        </member>
        <member name="F:Forms9Patch.Image.ExtendedElementShapeProperty">
            <summary>
            backing store for ExtendedElementShape property
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.Forms9Patch#IExtendedShape#ExtendedElementShape">
            <summary>
            Gets/Sets the ExtendedElementShape property
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.ExtendedElementSeparatorWidthProperty">
            <summary>
            Backing store key for INTERNAL ExtendedElementSeparatorWidth property
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.BackgroundColorProperty">
            <summary>
            backing store for BackgroundColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.BackgroundColor">
            <summary>
            Gets/Sets the BackgroundColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.HasShadowProperty">
            <summary>
            Backing store for HasShadow property
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.HasShadow">
            <summary>
            Get/sets if the shape (if any) behind the image has a shadow
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.ShadowInvertedProperty">
            <summary>
            backing store for ShadowInverted property
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.ShadowInverted">
            <summary>
            Gets/Sets the ShadowInverted property
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.OutlineColorProperty">
            <summary>
            Backing store for the outline color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.OutlineColor">
            <summary>
            Gets or sets the color of the outline.
            </summary>
            <value>The color of the outline.</value>
        </member>
        <member name="F:Forms9Patch.Image.BorderColorProperty">
            <summary>
            The boarder color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.BorderColor">
            <summary>
            Gets or sets the color of the boarder.
            </summary>
            <value>The color of the boarder.</value>
        </member>
        <member name="F:Forms9Patch.Image.OutlineRadiusProperty">
            <summary>
            Backing store for the outline radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.OutlineRadius">
            <summary>
            Gets or sets the outline radius.
            </summary>
            <value>The outline radius.</value>
        </member>
        <member name="F:Forms9Patch.Image.BorderRadiusProperty">
            <summary>
            The boarder radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.BorderRadius">
            <summary>
            Gets or sets the boarder radius.
            </summary>
            <value>The boarder radius.</value>
        </member>
        <member name="F:Forms9Patch.Image.OutlineWidthProperty">
            <summary>
            Backing store for the outline width property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.OutlineWidth">
            <summary>
            Gets or sets the width of the outline.
            </summary>
            <value>The width of the outline.</value>
        </member>
        <member name="F:Forms9Patch.Image.BorderWidthProperty">
            <summary>
            The boarder width property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.BorderWidth">
            <summary>
            Gets or sets the width of the boarder.
            </summary>
            <value>The width of the boarder.</value>
        </member>
        <member name="F:Forms9Patch.Image.ElementShapeProperty">
            <summary>
            Backing store for the ElementShape property
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.ElementShape">
            <summary>
            Gets/sets the geometry of the element
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.InstanceId">
            <summary>
            Returns index instance ID for this class (starts at 0)
            </summary>
        </member>
        <member name="F:Forms9Patch.Image.PointerLengthProperty">
            <summary>
            Backing store for pointer length property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.Forms9Patch#IBubbleShape#PointerLength">
            <summary>
            Gets or sets the length of the bubble layout's pointer.
            </summary>
            <value>The length of the pointer.</value>
        </member>
        <member name="F:Forms9Patch.Image.PointerTipRadiusProperty">
            <summary>
            Backing store for pointer tip radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.Forms9Patch#IBubbleShape#PointerTipRadius">
            <summary>
            Gets or sets the radius of the bubble's pointer tip.
            </summary>
            <value>The pointer tip radius.</value>
        </member>
        <member name="F:Forms9Patch.Image.PointerAxialPositionProperty">
            <summary>
            Backing store for pointer axial position property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.Forms9Patch#IBubbleShape#PointerAxialPosition">
            <summary>
            Gets or sets the position of the bubble's pointer along the face it's on.
            </summary>
            <value>The pointer axial position (left/top is zero).</value>
        </member>
        <member name="F:Forms9Patch.Image.PointerDirectionProperty">
            <summary>
            Backing store for pointer direction property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.Forms9Patch#IBubbleShape#PointerDirection">
            <summary>
            Gets or sets the direction in which the pointer pointing.
            </summary>
            <value>The pointer direction.</value>
        </member>
        <member name="F:Forms9Patch.Image.PointerCornerRadiusProperty">
            <summary>
            The pointer corner radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Image.Forms9Patch#IBubbleShape#PointerCornerRadius">
            <summary>
            Gets or sets the pointer corner radius.
            </summary>
            <value>The pointer corner radius.</value>
        </member>
        <member name="M:Forms9Patch.Image.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Forms9Patch.Image.#ctor(System.String,System.Reflection.Assembly)">
            <summary>
            Instantiates a new instance of Image from an MultiResource embedded resource
            </summary>
            <param name="embeddedResourceId">EmbeddedResourceId for image</param>
            <param name="assembly">Assembly in which embedded resource is embedded</param>
        </member>
        <member name="M:Forms9Patch.Image.#ctor(Xamarin.Forms.ImageSource)">
            <summary>
            Instantiates a new instance of Image from an imageSource
            </summary>
            <param name="imageSource"></param>
        </member>
        <member name="M:Forms9Patch.Image.#ctor(Xamarin.Forms.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.Image"/> class.
            </summary>
            <param name="image">Image.</param>
        </member>
        <member name="M:Forms9Patch.Image.#ctor(Forms9Patch.Image)">
            <summary>
            Convenience constructor for Forms9Patch.Image
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:Forms9Patch.Image.Dispose(System.Boolean)">
            <summary>
            Disposed the image
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.Image.Dispose">
            <summary>
            Dispose the image
            </summary>
        </member>
        <member name="M:Forms9Patch.Image.op_Implicit(Xamarin.Forms.Image)~Forms9Patch.Image">
            <summary>
            Converts Xamarin.Forms.Image to Forms9Patch.Image
            </summary>
            <param name="xamarinFormsImage"></param>
        </member>
        <member name="M:Forms9Patch.Image.op_Implicit(System.String)~Forms9Patch.Image">
            <summary>
            Converts string (embedded resource id) into a Forms9Patch.Image
            </summary>
            <param name="embeddedResourceId"></param>
        </member>
        <member name="M:Forms9Patch.Image.OnBindingContextChanged">
            <summary>
            Called when the binding contex has changed.
            </summary>
        </member>
        <member name="M:Forms9Patch.Image.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Forms9Patch.Image.GetSizeRequest(System.Double,System.Double)">
            <summary>
            Internal use only
            </summary>
            <param name="widthConstraint"></param>
            <param name="heightConstraint"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Image.OnPaintSurface(SkiaSharp.Views.Forms.SKPaintSurfaceEventArgs)">
            <summary>
            Internal use only
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Forms9Patch.Label">
            <summary>
            Forms9Patch.Label
            </summary>
        </member>
        <member name="F:Forms9Patch.Label.FitProperty">
            <summary>
            backing store for Fit property
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.Fit">
            <summary>
            Gets/Sets the Fit property
            </summary>
        </member>
        <member name="F:Forms9Patch.Label.ActualFontSizeProperty">
            <summary>
            OBSOLETE: Use FittedFontSizeProperty instead
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.ActualFontSize">
            <summary>
            OBSOLETE: Use FittedFontSize property instead
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.DefaultFontSize">
            <summary>
            The default size of labels rendered on the current platform
            </summary>
        </member>
        <member name="F:Forms9Patch.Label.HtmlTextProperty">
            <summary>
            Backing store for the formatted text property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.HtmlText">
            <summary>
            Gets or sets the formatted text.
            </summary>
            <value>The formatted text.</value>
        </member>
        <member name="F:Forms9Patch.Label.AutoFitProperty">
            <summary>
            The backing store for the AutoFit property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.AutoFit">
            <summary>
            Gets or sets the fit method.  Ignored if the Width and Height is not fixed by a parent, HeightRequest, and/or WidthRequest.
            </summary>
            <value>The fit.</value>
        </member>
        <member name="F:Forms9Patch.Label.LinesProperty">
            <summary>
            The backing store for the lines property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.Lines">
            <summary>
            Gets or sets the number of lines used in a fit.  If zero and fit is not AutoFit.None or ignored, will maximize the font size to best width and height with minimum number of lines.
            </summary>
            <value>The lines.</value>
        </member>
        <member name="F:Forms9Patch.Label.MinFontSizeProperty">
            <summary>
            The backing store for the minimum font size property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.MinFontSize">
            <summary>
            Gets or sets the minimum size of the font allowed during an autofit. 
            </summary>
            <value>The minimum size of the font.  Default=4</value>
        </member>
        <member name="F:Forms9Patch.Label.IsDynamicallySizedProperty">
            <summary>
            The backing store for fixed size property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.IsDynamicallySized">
            <summary>
            Gets if the size of the label has been fixed by a parent element, the HeightRequest and/or the WidthRequest properties.
            </summary>
            <value>Is the label fixed in size.</value>
        </member>
        <member name="F:Forms9Patch.Label.FittedFontSizeProperty">
            <summary>
            Backing store for the actual font size property after fitting.
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.FittedFontSize">
            <summary>
            Gets the actual size of the font (after fitting).
            </summary>
            <value>The actual size of the font.</value>
        </member>
        <member name="F:Forms9Patch.Label.SynchronizedFontSizeProperty">
            <summary>
            backing store for SynchronizedFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.SynchronizedFontSize">
            <summary>
            Gets/Sets the SynchronizedFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.Label.InstanceId">
            <summary>
            Incremental identity (starting at 0) of instance of this class
            </summary>
        </member>
        <member name="E:Forms9Patch.Label.ActionTagTapped">
            <summary>
            Occurs when HtmlText wrapped with an action (&lt;a&gt;) tag is tapped.
            </summary>
        </member>
        <member name="E:Forms9Patch.Label.FittedFontSizeChanged">
            <summary>
            Occurs when label has performed fitting algorithm.  A value of -1 indicates that value of the FontSize property was used.
            </summary>
        </member>
        <member name="M:Forms9Patch.Label.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.Label"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.Label.#ctor(System.String)">
            <summary>
            Convenience constructor for Forms9Patch.Label instance
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Forms9Patch.Label.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <returns>The property changed.</returns>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:Forms9Patch.Label.op_Explicit(Forms9Patch.Label)~System.String">
            <param name="label">Label.</param>
        </member>
        <member name="M:Forms9Patch.Label.ToString">
            <summary>
            String representation of Label
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Label.SizeForWidthAndFontSize(System.Double,System.Double)">
            <summary>
            Sizes the size of the for width and font.
            </summary>
            <returns>The for width and font size.</returns>
            <param name="width">Width.</param>
            <param name="fontSize">Font size.</param>
        </member>
        <member name="M:Forms9Patch.Label.GetSizeRequest(System.Double,System.Double)">
            <param name="widthConstraint">The available width that a parent element can allocated to a child. Value will be between 0 and double.PositiveInfinity.</param>
            <param name="heightConstraint">The available height that a parent element can allocated to a child. Value will be between 0 and double.PositiveInfinity.</param>
            <summary>
            Gets the size request.
            </summary>
            <returns>The size request.</returns>
        </member>
        <member name="M:Forms9Patch.Label.OnMeasure(System.Double,System.Double)">
            <summary>
            Funny you asked!
            </summary>
            <param name="widthConstraint"></param>
            <param name="heightConstraint"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Label.OnSizeAllocated(System.Double,System.Double)">
            <summary>
            Called when the size of the label has been allocate by Xamarin layout system
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Forms9Patch.Label.OnSizeRequest(System.Double,System.Double)">
            <summary>
            Just how big is this going to be?
            </summary>
            <param name="widthConstraint"></param>
            <param name="heightConstraint"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Label.HardForceLayout">
            <summary>
            Because InvalidateMeasure doesn't always work
            </summary>
        </member>
        <member name="M:Forms9Patch.Label.IndexAtPoint(Xamarin.Forms.Point)">
            <summary>
            Gets unmarked string index at touch point.
            </summary>
            <returns>The at point.</returns>
            <param name="point">Point.</param>
        </member>
        <member name="T:Forms9Patch.ActionTagEventArgs">
            <summary>
            Action tag event arguments.
            </summary>
        </member>
        <member name="P:Forms9Patch.ActionTagEventArgs.Href">
            <summary>
            Gets the href.
            </summary>
            <value>The href.</value>
        </member>
        <member name="P:Forms9Patch.ActionTagEventArgs.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Forms9Patch.ActionTagEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ActionTagEventArgs"/> class.
            </summary>
            <param name="id">Identifier.</param>
            <param name="href">Href.</param>
        </member>
        <member name="T:Forms9Patch.BaseCellView">
            <summary>
            DO NOT USE: Used by Forms9Patch.ListView as a foundation for cells.
            </summary>
        </member>
        <member name="F:Forms9Patch.BaseCellView.ContentViewProperty">
            <summary>
            The content property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BaseCellView.ContentView">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="M:Forms9Patch.BaseCellView.#ctor">
            <summary>
            DO NOT USE: Initializes a new instance of the <see cref="T:Forms9Patch.BaseCellView"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.BaseCellView.OnBindingContextChanged">
            <summary>
            Triggered by a change in the binding context
            </summary>
        </member>
        <member name="T:Forms9Patch.BlankCellView">
            <summary>
            DO NOT USE: Used by Forms9Patch.ListView as a placeholder for a cell when being dragged
            </summary>
        </member>
        <member name="M:Forms9Patch.BlankCellView.#ctor">
            <summary>
            DO NOT USE: Initializes a new instance of the <see cref="T:Forms9Patch.BlankCellView"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.BlankCellView.OnPropertyChanged(System.String)">
            <summary>
            Triggered by a change in a property
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.GroupHeaderView">
            <summary>
            FormsDragNDropListView Group header view.
            </summary>
        </member>
        <member name="M:Forms9Patch.GroupHeaderView.OnBindingContextChanged">
            <summary>
            Triggered by a changing in the binding context.
            </summary>
        </member>
        <member name="T:Forms9Patch.NullItemCellView">
            <summary>
            Null cell view: DO NOT USE.  Used internally by Forms9Patch.ListView to display null items in a ListView
            </summary>
        </member>
        <member name="M:Forms9Patch.NullItemCellView.#ctor">
            <summary>
            DO NOT USE: Initializes a new instance of the <see cref="T:Forms9Patch.NullCellView"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.Cell`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.DataTemplateSelector.Cell`1"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.Cell`1.OnPropertyChanging(System.String)">
            <summary>
            Triggered before a property is changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:Forms9Patch.Cell`1.OnBindingContextChanged">
            <summary>
            Triggered by a change in the binding context.
            </summary>
        </member>
        <member name="T:Forms9Patch.EnhancedListView">
            <summary>
            Enable EmbeddedResource fonts to be used with Xamarin elements
            </summary>
        </member>
        <member name="P:Forms9Patch.EnhancedListView.IsScrollEnabled">
            <summary>
            Gets/Sets the IsScrollEnabled property
            </summary>
        </member>
        <member name="P:Forms9Patch.EnhancedListView.ScrollOffset">
            <summary>
            Gets/Sets the ScrollOffset property
            </summary>
        </member>
        <member name="M:Forms9Patch.EnhancedListView.#ctor">
            <summary>
            Constructor for Forms9Patch.EnhancedListView
            </summary>
        </member>
        <member name="M:Forms9Patch.EnhancedListView.#ctor(Xamarin.Forms.ListViewCachingStrategy)">
            <summary>
            Constructor for Forms9Patch.EnhancedListView
            </summary>
            <param name="cachingStrategy"></param>
        </member>
        <member name="T:Forms9Patch.AccessoryPosition">
            <summary>
            Accessory position.
            </summary>
        </member>
        <member name="F:Forms9Patch.AccessoryPosition.None">
            <summary>
            No accessories will be shown
            </summary>
        </member>
        <member name="F:Forms9Patch.AccessoryPosition.Start">
            <summary>
            Accessory will be on the starting (left) side if the AccessText != null
            </summary>
        </member>
        <member name="F:Forms9Patch.AccessoryPosition.End">
            <summary>
            Accessory will be on the ending (right) side if the AccessoryText != null
            </summary>
        </member>
        <member name="T:Forms9Patch.Proximity">
            <summary>
            The position of a cell being dragged relative to the cell it is hovering over
            </summary>
        </member>
        <member name="F:Forms9Patch.Proximity.None">
            <summary>
            None: Can't be calculated or the cell being dragged isn't hovering over.
            </summary>
        </member>
        <member name="F:Forms9Patch.Proximity.Before">
            <summary>
            Before: the cell being dragged over is biased towards the left/top of the cell it is hovering over.
            </summary>
        </member>
        <member name="F:Forms9Patch.Proximity.Aligned">
            <summary>
            Center: the cell being dragged over is centered over the cell it is hovering over.
            </summary>
        </member>
        <member name="F:Forms9Patch.Proximity.After">
            <summary>
            After: the cell being dragged over is biased towards the right/bottom of the cell it is hovering over.
            </summary>
        </member>
        <member name="T:Forms9Patch.CellEventArgs">
            <summary>
            DO NOT USE: Drag event arguments: used internally by Forms9Patch.ListView in the dragging of ListView cells.
            </summary>
        </member>
        <member name="P:Forms9Patch.CellEventArgs.DeepIndex">
            <summary>
            Gets or sets the deep index of the item being dragged.
            </summary>
            <value>The index of the deep.</value>
        </member>
        <member name="M:Forms9Patch.CellEventArgs.#ctor(Forms9Patch.ItemWrapper,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.CellProximityEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.CellEventArgs.#ctor(Forms9Patch.CellEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.CellProximityEventArgs"/> class.
            </summary>
            <param name="e">E.</param>
        </member>
        <member name="M:Forms9Patch.CellEventArgs.Clear">
            <summary>
            Clear this instance.
            </summary>
        </member>
        <member name="M:Forms9Patch.CellEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.CellProximityEventArgs"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.CellProximityEventArgs"/>.</returns>
        </member>
        <member name="M:Forms9Patch.CellEventArgs.Description">
            <summary>
            Description this instance.
            </summary>
        </member>
        <member name="T:Forms9Patch.CellProximityEventArgs">
            <summary>
            DO NOT USE: Drag event arguments: used internally by Forms9Patch.ListView in the dragging of ListView cells.
            </summary>
        </member>
        <member name="F:Forms9Patch.CellProximityEventArgs.Proximity">
            <summary>
            The alignment.
            </summary>
        </member>
        <member name="M:Forms9Patch.CellProximityEventArgs.#ctor(Forms9Patch.GroupWrapper,Forms9Patch.ItemWrapper,Forms9Patch.Proximity)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.CellProximityEventArgs"/> class.
            </summary>
            <param name="groupWrapper"></param>
            <param name="itemWrapper"></param>
            <param name="proximity"></param>
        </member>
        <member name="M:Forms9Patch.CellProximityEventArgs.#ctor(Forms9Patch.ItemWrapper,System.Int32[],Forms9Patch.Proximity)">
            <summary>
            Initialize instance of the <see cref="T:Forms9Patch.CellProximityEventArgs"/> class.
            </summary>
            <param name="itemWrapper"></param>
            <param name="deepIndex"></param>
            <param name="proximity"></param>
        </member>
        <member name="M:Forms9Patch.CellProximityEventArgs.#ctor(Forms9Patch.CellProximityEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.CellProximityEventArgs"/> class.
            </summary>
            <param name="e">E.</param>
        </member>
        <member name="M:Forms9Patch.CellProximityEventArgs.Clear">
            <summary>
            Clear this instance.
            </summary>
        </member>
        <member name="M:Forms9Patch.CellProximityEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.CellProximityEventArgs"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.CellProximityEventArgs"/>.</returns>
        </member>
        <member name="M:Forms9Patch.CellProximityEventArgs.Description">
            <summary>
            Description this instance.
            </summary>
        </member>
        <member name="T:Forms9Patch.ItemTappedEventArgs">
            <summary>
            Item tapped event arguments.
            </summary>
        </member>
        <member name="F:Forms9Patch.ItemTappedEventArgs.Handled">
            <summary>
            Set to true if you have handled this event and don't want other handlers to have a crack at it
            </summary>
        </member>
        <member name="P:Forms9Patch.ItemTappedEventArgs.CellView">
            <summary>
            Gets the cell view bound to the tapped item.
            </summary>
            <value>The cell view.</value>
        </member>
        <member name="P:Forms9Patch.ItemTappedEventArgs.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="T:Forms9Patch.SelectedItemChangedEventArgs">
            <summary>
            Selected item changed event arguments.
            </summary>
        </member>
        <member name="P:Forms9Patch.SelectedItemChangedEventArgs.Group">
            <summary>
            Gets the group.
            </summary>
            <value>The group.</value>
        </member>
        <member name="P:Forms9Patch.SelectedItemChangedEventArgs.CellView">
            <summary>
            Gets the CellView bound to the selected item
            </summary>
            <value>The cell view.</value>
        </member>
        <member name="T:Forms9Patch.SwipeMenuItemTappedArgs">
            <summary>
            Cell swipe menu item tapped arguments.
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItemTappedArgs.CellContentView">
            <summary>
            Gets the cell content view where the swipe happened.
            </summary>
            <value>The cell content view.</value>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItemTappedArgs.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItemTappedArgs.Group">
            <summary>
            Gets the group.
            </summary>
            <value>The group.</value>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItemTappedArgs.SwipeMenuItem">
            <summary>
            Gets the swipe menu item that was tapped.
            </summary>
            <value>The swipe menu item.</value>
        </member>
        <member name="M:Forms9Patch.SwipeMenuItemTappedArgs.#ctor(Forms9Patch.ICellSwipeMenus,Forms9Patch.ItemWrapper,Forms9Patch.SwipeMenuItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SwipeMenuItemTappedArgs"/> class.
            </summary>
            <param name="cellContentView">Cell content view.</param>
            <param name="itemWrapper">Item wrapper.</param>
            <param name="swipeMenuItem">Swipe menu item.</param>
        </member>
        <member name="T:Forms9Patch.ICellContentView">
            <summary>
            Interface to set the cell height for a cell that contains the content of a Forms9Patch ListView cell.
            </summary>
        </member>
        <member name="P:Forms9Patch.ICellContentView.CellHeight">
            <summary>
            Gets the height of the cell if the list HasUnevenRows=true.
            </summary>
            <value>The height of the cell.</value>
        </member>
        <member name="M:Forms9Patch.ICellContentView.OnAppearing">
            <summary>
            Called when cell is appearing
            </summary>
        </member>
        <member name="M:Forms9Patch.ICellContentView.OnDisappearing">
            <summary>
            Called when cell is disappearing
            </summary>
        </member>
        <member name="T:Forms9Patch.ICellSwipeMenus">
            <summary>
            Interface to implement Swipe Menus in content views for Forms9Patch ListView cells
            </summary>
        </member>
        <member name="P:Forms9Patch.ICellSwipeMenus.StartSwipeMenu">
            <summary>
            Gets the start swipe menu items.
            </summary>
            <value>The start swipe menu.</value>
        </member>
        <member name="P:Forms9Patch.ICellSwipeMenus.EndSwipeMenu">
            <summary>
            Gets the end swipe menu items.
            </summary>
            <value>The end swipe menu.</value>
        </member>
        <member name="M:Forms9Patch.ICellSwipeMenus.OnSwipeMenuItemButtonTapped(System.Object,Forms9Patch.SwipeMenuItemTappedArgs)">
            <summary>
            Ons the swipe menu item button tapped.
            </summary>
            <param name="sender">Sender.</param>
            <param name="args">Arguments.</param>
        </member>
        <member name="T:Forms9Patch.IIsSelectedAble">
            <summary>
            Assures a class has the IsSelected property.
            </summary>
        </member>
        <member name="P:Forms9Patch.IIsSelectedAble.IsSelected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.IIsSelectedAble"/> is selected.
            </summary>
            <value><c>true</c> if is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Forms9Patch.IItemWrapper">
            <summary>
            Interface used to queary current state of Forms9Patch.ListView cells and the ItemSource object bound to the cells view.
            </summary>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.ListView">
            <summary>
            The Forms9Patch.ListView hosting this cell
            </summary>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.IsLastItem">
            <summary>
            Gets a value indicating whether this <see cref="T:Forms9Patch.IItemWrapper"/> is last item in its parent group.
            </summary>
            <value><c>true</c> if is last item; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.SeparatorVisibility">
            <summary>
            Gets the separator visibilty.
            </summary>
            <value>The separator visibilty.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.SeparatorColor">
            <summary>
            Gets the color of this cell's separator.
            </summary>
            <value>The color of the separator.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.RequestedSeparatorHeight">
            <summary>
            Gets the height of this cell's separator.
            </summary>
            <value>The height of the separator.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.SeparatorLeftIndent">
            <summary>
            Gets the separator left indent for this cell.
            </summary>
            <value>The separator left indent.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.SeparatorRightIndent">
            <summary>
            Gets the separator right indent for this cell.
            </summary>
            <value>The separator right indent.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.CellBackgroundColor">
            <summary>
            Gets the unselected background color for this cell.
            </summary>
            <value>The color of the cell background.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.SelectedCellBackgroundColor">
            <summary>
            Gets the selected background color for this cell.
            </summary>
            <value>The color of the selected cell background.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.IsSelected">
            <summary>
            Gets a value indicating whether this cell is selected.
            </summary>
            <value><c>true</c> if is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.Source">
            <summary>
            Gets the ListView's ItemsSource object that is bound to this cell's View
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.Index">
            <summary>
            Gets the index (within the current group, if any) of this cell.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.CellView">
            <summary>
            Gets the cell view that is bound to the item.
            </summary>
            <value>The cell view.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.RequestedRowHeight">
            <summary>
            Gets the global height of the row.
            </summary>
            <value>The height of the row.</value>
        </member>
        <member name="P:Forms9Patch.IItemWrapper.RenderedRowHeight">
            <summary>
            Used to record what row height was actually used for cell's height request (takes into account BaseCellView.ContentView.CellHeight value)
            </summary>
        </member>
        <member name="F:Forms9Patch.GroupWrapper.RequestedGroupHeaderRowHeightProperty">
            <summary>
            backing store for GroupHeaderCellHeight property
            </summary>
        </member>
        <member name="P:Forms9Patch.GroupWrapper.RequestedGroupHeaderRowHeight">
            <summary>
            Gets/Sets the GroupHeaderCellHeight property
            </summary>
        </member>
        <member name="F:Forms9Patch.GroupWrapper.GroupHeaderBackgroundColorProperty">
            <summary>
            The group header background color property.
            </summary>
        </member>
        <member name="T:Forms9Patch.ItemWrapper">
            <summary>
            FormsDragNDropListView Item.
            </summary>
        </member>
        <member name="F:Forms9Patch.ItemWrapper.RenderedRowHeightProperty">
            <summary>
            backing store for RenderedRowHeight property
            </summary>
        </member>
        <member name="P:Forms9Patch.ItemWrapper.RenderedRowHeight">
            <summary>
            Gets/Sets the RenderedRowHeight property
            </summary>
        </member>
        <member name="F:Forms9Patch.ItemWrapper.SeparatorVisibilityProperty">
            <summary>
            The separator visibility property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ItemWrapper.SeparatorVisibility">
            <summary>
            Gets or sets the separator visibility.
            </summary>
            <value>The separator visibility.</value>
        </member>
        <member name="F:Forms9Patch.ItemWrapper.SeparatorColorProperty">
            <summary>
            The separator color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ItemWrapper.SeparatorColor">
            <summary>
            Gets or sets the color of the separator.
            </summary>
            <value>The color of the separator.</value>
        </member>
        <member name="F:Forms9Patch.ItemWrapper.RequestedSeparatorHeightProperty">
            <summary>
            The separator height property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ItemWrapper.RequestedSeparatorHeight">
            <summary>
            Gets or sets the height of the separator.
            </summary>
            <value>The height of the separator.</value>
        </member>
        <member name="F:Forms9Patch.ItemWrapper.SeparatorLeftIndentProperty">
            <summary>
            The separator left indent property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ItemWrapper.SeparatorLeftIndent">
            <summary>
            Gets or sets the separator left indent.
            </summary>
            <value>The separator left indent.</value>
        </member>
        <member name="F:Forms9Patch.ItemWrapper.SeparatorRightIndentProperty">
            <summary>
            The separator right indent property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ItemWrapper.SeparatorRightIndent">
            <summary>
            Gets or sets the separator right indent.
            </summary>
            <value>The separator right indent.</value>
        </member>
        <member name="T:Forms9Patch.ListView">
            <summary>
            FormsDragNDropListView List view.
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.ContentProperty">
            <summary>
            There is nothing to see here.  Move on.
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.Content">
            <summary>
            There is nothing to see here.  Move on.
            </summary>
            <value>The content.</value>
        </member>
        <member name="F:Forms9Patch.ListView.GroupHeaderRowHeightProperty">
            <summary>
            backing store for GroupHeaderRowHeight property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.GroupHeaderRowHeight">
            <summary>
            Gets/Sets the GroupHeaderRowHeight property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.SelectedCellBackgroundColorProperty">
            <summary>
            The selected cell background color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.SelectedCellBackgroundColor">
            <summary>
            Gets or sets the color of the selected cell background.
            </summary>
            <value>The color of the selected cell background.</value>
        </member>
        <member name="F:Forms9Patch.ListView.GroupHeaderBackgroundColorProperty">
            <summary>
            The group header background color property backing store
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.GroupHeaderBackgroundColor">
            <summary>
            Gets or sets the color of the group header background.
            </summary>
            <value>The color of the group header background.</value>
        </member>
        <member name="F:Forms9Patch.ListView.SeparatorVisibilityProperty">
            <summary>
            backing store for SeparatorVisibility property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.SeparatorVisibility">
            <summary>
            Gets/Sets the SeparatorVisibility property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.SeparatorColorProperty">
            <summary>
            backing store for SeparatorColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.SeparatorColor">
            <summary>
            Gets/Sets the SeparatorColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.SeparatorLeftIndentProperty">
            <summary>
            backing store for SeparatorLeftIndent property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.SeparatorLeftIndent">
            <summary>
            Gets/Sets the SeparatorLeftIndent property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.SeparatorRightIndentProperty">
            <summary>
            backing store for SeparatorRightIndent property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.SeparatorRightIndent">
            <summary>
            Gets/Sets the SeparatorRightIndent property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.SeparatorHeightProperty">
            <summary>
            backing store for SeparatorHeight property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.SeparatorHeight">
            <summary>
            Gets/Sets the SeparatorHeight property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.GroupToggleBehaviorProperty">
            <summary>
            The backing store for the ListViews's GroupToggleBehavior property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.GroupToggleBehavior">
            <summary>
            Gets or sets the ListViews's GroupToggle behavior.
            </summary>
            <value>The Toggle behavior (None, Radio, Multiselect).</value>
        </member>
        <member name="F:Forms9Patch.ListView.SelectedItemsPropertyKey">
            <summary>
            The selected items property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
            <value>The selected items.</value>
        </member>
        <member name="F:Forms9Patch.ListView.EditableProperty">
            <summary>
            The editable property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.Editable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.ListView"/> is editable - cells may be moved or deleted based upon the response from the CanDrag CanDrop CanDelete delegate methods.
            </summary>
            <value><c>true</c> if editable; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.ListView.HeaderProperty">
            <summary>
            backing store for Header property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.Header">
            <summary>
            Gets/Sets the Header property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.HeaderTemplateProperty">
            <summary>
            backing store for HeaderTemplate property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.HeaderTemplate">
            <summary>
            Gets or sets the header template.
            </summary>
            <value>The header template.</value>
        </member>
        <member name="F:Forms9Patch.ListView.FooterProperty">
            <summary>
            backing store for Footer property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.Footer">
            <summary>
            Gets/Sets the Footer property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.FooterTemplateProperty">
            <summary>
            backing store for FooterTemplate property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.FooterTemplate">
            <summary>
            Gets/Sets the FooterTemplate property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.SelectedItemProperty">
            <summary>
            backing store for SelectedItem property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.SelectedItem">
            <summary>
            Gets/Sets the SelectedItem property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.RowHeightProperty">
            <summary>
            backing store for RowHeight property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.RowHeight">
            <summary>
            Gets/Sets the RowHeight property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.GroupHeaderTemplateProperty">
            <summary>
            backing store for GroupHeaderTemplate property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.GroupHeaderTemplate">
            <summary>
            Gets/Sets the GroupHeaderTemplate property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.IsGroupingEnabledProperty">
            <summary>
            backing store for IsGroupingEnabled property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.IsGroupingEnabled">
            <summary>
            Gets/Sets the IsGroupingEnabled property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.ItemsSourceProperty">
            <summary>
            backing store for ItemsSource property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.ItemsSource">
            <summary>
            Gets/Sets the ItemsSource property
            </summary>
        </member>
        <member name="F:Forms9Patch.ListView.ItemTemplatesProperty">
            <summary>
            backing store for ItemTemplates property
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.ItemTemplates">
            <summary>
            Gets/Sets the ItemTemplates property
            </summary>
        </member>
        <member name="E:Forms9Patch.ListView.ItemSelected">
            <summary>
            Occurs when cell is selected.
            </summary>
        </member>
        <member name="E:Forms9Patch.ListView.ItemTapped">
            <summary>
            Occurs when cell is tapped.
            </summary>
        </member>
        <member name="E:Forms9Patch.ListView.ItemsSourceSet">
            <summary>
            Occurs when ItemsSource setting has completed.
            </summary>
        </member>
        <member name="E:Forms9Patch.ListView.Appeared">
            <summary>
            Occures when the ListView has appeared
            </summary>
        </member>
        <member name="E:Forms9Patch.ListView.ItemAppearing">
            <summary>
            Occurs when item is appearing.
            </summary>
        </member>
        <member name="E:Forms9Patch.ListView.ItemDisappearing">
            <summary>
            Occurs when item is disappearing.
            </summary>
        </member>
        <member name="E:Forms9Patch.ListView.Scrolling">
            <summary>
            Occurs when scroll is started and (depending on the platform) may continue until the scroll is completed.
            </summary>
        </member>
        <member name="E:Forms9Patch.ListView.Scrolled">
            <summary>
            Occurs when scroll is completed.
            </summary>
        </member>
        <member name="M:Forms9Patch.ListView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ListView"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.ListView.#ctor(Xamarin.Forms.ListViewCachingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ListView"/> class.
            </summary>
            <param name="cachingStrategy">Caching strategy.</param>
        </member>
        <member name="M:Forms9Patch.ListView.Dispose(System.Boolean)">
            <summary>
            Dispose this ListView and its children
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.ListView.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layouts the children.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:Forms9Patch.ListView.OnPropertyChanging(System.String)">
            <summary>
            Ons the property changing.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:Forms9Patch.ListView.OnPropertyChanged(System.String)">
            <summary>
            Trigged with a property has changed
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:Forms9Patch.ListView.TapItem(System.Object)">
            <summary>
            Taps the item.
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="M:Forms9Patch.ListView.TapItemAtPoint(Xamarin.Forms.Point)">
            <summary>
            Simulates a tap of the item at point in this ListView.
            </summary>
            <param name="p">P.</param>
        </member>
        <member name="P:Forms9Patch.ListView.VisibleIndexes">
            <summary>
            Gets a list of the ListView's visible indexes.
            </summary>
            <value>The visible indexes.</value>
        </member>
        <member name="P:Forms9Patch.ListView.VisibleItems">
            <summary>
            Gets a list of the ListView's visible items.
            </summary>
            <value>The visible items.</value>
        </member>
        <member name="E:Forms9Patch.ListView.SwipeMenuItemTapped">
            <summary>
            Occurs when a swipe menu item has been tapped.
            </summary>
        </member>
        <member name="M:Forms9Patch.ListView.OnSwipeMenuItemTapped(System.Object,Forms9Patch.SwipeMenuItemTappedArgs)">
            <summary>
            Called when a swipe menu items has been tapped
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="E:Forms9Patch.ListView.ItemPropertyChanging">
            <summary>
            Occurs when a property of a ListViewItem is about to change.
            </summary>
        </member>
        <member name="E:Forms9Patch.ListView.ItemPropertyChanged">
            <summary>
            Occurs when property of a ListViewItem has changed.
            </summary>
        </member>
        <member name="P:Forms9Patch.ListView.IsScrollEnabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.ListView"/> is scroll enabled.
            </summary>
            <value><c>true</c> if is scroll enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.ListView.IsScrolling">
            <summary>
            Gets a value indicating whether this <see cref="T:Forms9Patch.ListView"/> is actively scrolling.
            </summary>
            <value><c>true</c> if is actively scrolling; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.ListView.ScrollOffset">
            <summary>
            Gets the scroll offset (current position) of ListView.
            </summary>
            <value>The scroll offset.</value>
        </member>
        <member name="M:Forms9Patch.ListView.ScrollTo(System.Double,System.Boolean)">
            <summary>
            Scrolls ListView to a position (offset) in pixels from the start
            </summary>
            <returns><c>true</c>, if to was scrolled, <c>false</c> otherwise.</returns>
            <param name="offset">Offset (position) to scroll to.</param>
            <param name="animiated">If set to <c>true</c> animiated.</param>
        </member>
        <member name="M:Forms9Patch.ListView.ScrollBy(System.Double,System.Boolean)">
            <summary>
            Scrolls the ListView by delta pixels.
            </summary>
            <returns><c>true</c>, if by was scrolled, <c>false</c> otherwise.</returns>
            <param name="delta">Delta to move list relative to current position</param>
            <param name="animated">If set to <c>true</c> animated.</param>
        </member>
        <member name="M:Forms9Patch.ListView.ScrollTo(System.Object,System.Object,Xamarin.Forms.ScrollToPosition,System.Boolean)">
            <summary>
            Scrolls to item in group
            </summary>
            <param name="item">Item.</param>
            <param name="group">Group.</param>
            <param name="position">Position.</param>
            <param name="animated">If set to <c>true</c> animated.</param>
        </member>
        <member name="M:Forms9Patch.ListView.ScrollTo(System.Object,Xamarin.Forms.ScrollToPosition,System.Boolean)">
            <summary>
            Scrolls to item
            </summary>
            <param name="item">Item.</param>
            <param name="position">Position.</param>
            <param name="animated">If set to <c>true</c> animated.</param>
        </member>
        <member name="M:Forms9Patch.ListView.ScrollTo(System.Int32[],Xamarin.Forms.ScrollToPosition,System.Boolean)">
            <summary>
            Scrolls to item at index
            </summary>
            <param name="index"></param>
            <param name="position"></param>
            <param name="animated"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.SwipeMenuItem">
            <summary>
            Describes a Swipe action button that appears when a cell is swiped 
            </summary>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.KeyProperty">
            <summary>
            The key property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.Key">
            <summary>
            Gets or sets the key - used to identify a SwipeMenuEvent.  Will return Text if set to null.
            </summary>
            <value>The key.</value>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.IconImageProperty">
            <summary>
            backing store for IconImage property
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.IconImage">
            <summary>
            Gets/Sets the IconImage property
            </summary>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.IconTextProperty">
            <summary>
            The icon text property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.IconText">
            <summary>
            Gets or sets the icon text - an alternative to IconImageSource.
            </summary>
            <value>The icon text.</value>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.IconFontFamilyProperty">
            <summary>
            Backing store for SwipeMenuItem IconFontFamily property
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.IconFontFamily">
            <summary>
            controls value of .IconFontFamily property
            </summary>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.IconFontSizeProperty">
            <summary>
            Backing store for SwipeMenuItem IconFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.IconFontSize">
            <summary>
            controls value of .IconFontSize property
            </summary>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.TextProperty">
            <summary>
            The text property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.Text">
            <summary>
            Gets or sets the text (can be in HTML format.
            </summary>
            <value>The html text.</value>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.HtmlTextProperty">
            <summary>
            backing store for HtmlText property
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.HtmlText">
            <summary>
            Gets/Sets the HtmlText property
            </summary>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.TextColorProperty">
            <summary>
            The text color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.TextColor">
            <summary>
            Gets or sets the color of the text and icon (image).
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.IsTriggeredOnFullSwipeProperty">
            <summary>
            The swipe executable property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.IsTriggeredOnFullSwipe">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.SwipeAction"/> swipe executable.
            Only used if this SwipeAction is at the top of the stack of SwipeActions.
            </summary>
            <value><c>true</c> if swipe executable; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.SwipeMenuItem.BackgroundColorProperty">
            <summary>
            The background color property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.SwipeMenuItem.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="M:Forms9Patch.SwipeMenuItem.OnPropertyChanged(System.String)">
            <summary>
            BindableProperty has changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.DataTemplateSelector">
            <summary>
            The Forms9Patch Data template selector.
            </summary>
        </member>
        <member name="M:Forms9Patch.DataTemplateSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.DataTemplateSelector"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.DataTemplateSelector.Add(System.Type,System.Type)">
            <summary>
            Add the specified itemBaseType and viewType.
            </summary>
            <param name="itemBaseType">Item base type.</param>
            <param name="viewType">View type.</param>
        </member>
        <member name="T:Forms9Patch.GroupHeaderTemplate">
            <summary>
            Group header template.
            </summary>
        </member>
        <member name="M:Forms9Patch.GroupHeaderTemplate.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.GroupHeaderTemplate"/> class.
            </summary>
            <param name="groupHeaderViewType">Group header view type.</param>
        </member>
        <member name="T:Forms9Patch.TemplateSelectorBase">
            <summary>
            Data template selector: Used to match types of objects with the types of views that will be used to display them in a ListView.
            </summary>
        </member>
        <member name="F:Forms9Patch.TemplateSelectorBase._cellTemplates">
            <summary>
            The cell templates.
            </summary>
        </member>
        <member name="M:Forms9Patch.TemplateSelectorBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.DataTemplateSelector"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.TemplateSelectorBase.RemoveFactoryDefaults">
            <summary>
            Removes the factory defaults, to make more space for Andriod implementation.
            </summary>
        </member>
        <member name="M:Forms9Patch.TemplateSelectorBase.Clear">
            <summary>
            Clear all cell templates
            </summary>
        </member>
        <member name="M:Forms9Patch.TemplateSelectorBase.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.GroupTemplate"/> class.
            </summary>
            <param name="groupContentViewType">Group content view type.</param>
        </member>
        <member name="M:Forms9Patch.TemplateSelectorBase.Add(System.Type,System.Type)">
            <summary>
            Add to the DetaTemplateSelector a viewType that will be used to display any objects of itemBaseType.
            </summary>
            <param name="dataType">Item base type.</param>
            <param name="viewType">View type.</param>
        </member>
        <member name="M:Forms9Patch.TemplateSelectorBase.OnSelectTemplate(System.Object,Xamarin.Forms.BindableObject)">
            <summary>
            Triggered when a Forms9Patch.ListView needs to create a view template for an item.
            </summary>
            <returns>The select template.</returns>
            <param name="item">Item.</param>
            <param name="container">Container.</param>
        </member>
        <member name="T:Forms9Patch.RootPage">
            <summary>
            Forms9Patch.RootPage is no longer needed for display of Popups!
            </summary>
        </member>
        <member name="M:Forms9Patch.RootPage.#ctor">
            <summary>
            Forms9Patch.RootPage is no longer needed for display of Popups!
            </summary>
        </member>
        <member name="M:Forms9Patch.RootPage.Create(Xamarin.Forms.Page)">
            <summary>
            Forms9Patch.RootPage is no longer needed for display of Popups!
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.BasePicker">
            <summary>
            Base picker.
            </summary>
        </member>
        <member name="P:Forms9Patch.BasePicker.ItemTemplates">
            <summary>
            Gets the item templates.
            </summary>
            <value>The item templates.</value>
        </member>
        <member name="F:Forms9Patch.BasePicker.IndexProperty">
            <summary>
            The index property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BasePicker.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="F:Forms9Patch.BasePicker.RowHeightProperty">
            <summary>
            The row height property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BasePicker.RowHeight">
            <summary>
            Gets or sets the height of the row.
            </summary>
            <value>The height of the row.</value>
        </member>
        <member name="P:Forms9Patch.BasePicker.Instances">
            <summary>
            For debug purposes
            </summary>
        </member>
        <member name="P:Forms9Patch.BasePicker.Instance">
            <summary>
            For debug purposes
            </summary>
        </member>
        <member name="M:Forms9Patch.BasePicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.BasePicker"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.BasePicker.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:Forms9Patch.BasePicker.OnScrolled(Xamarin.Forms.ItemsViewScrolledEventArgs)">
            <summary>
            Used to determine when scrolling has stopped
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Forms9Patch.BasePickerDataTemplateSelector">
            <summary>
            Template Picker
            </summary>
        </member>
        <member name="M:Forms9Patch.BasePickerDataTemplateSelector.OnSelectTemplate(System.Object,Xamarin.Forms.BindableObject)">
            <summary>
            Selects a template for an item
            </summary>
            <param name="item"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.BasePickerDataTemplateSelector.Add(System.Type,System.Type)">
            <summary>
            Adds a new template
            </summary>
            <param name="itemType"></param>
            <param name="templateType"></param>
        </member>
        <member name="M:Forms9Patch.BasePickerDataTemplateSelector.Clear">
            <summary>
            Clears the templates
            </summary>
        </member>
        <member name="T:Forms9Patch.MultiComponentPicker">
            <summary>
            Multi component picker.
            </summary>
        </member>
        <member name="F:Forms9Patch.MultiComponentPicker.ComponentsProperty">
            <summary>
            The components property.
            </summary>
        </member>
        <member name="P:Forms9Patch.MultiComponentPicker.Components">
            <summary>
            Gets or sets the components.
            </summary>
            <value>The components.</value>
        </member>
        <member name="F:Forms9Patch.MultiComponentPicker.RowSizesProperty">
            <summary>
            The row sizes property.
            </summary>
        </member>
        <member name="P:Forms9Patch.MultiComponentPicker.RowSizes">
            <summary>
            Gets or sets the row sizes.
            </summary>
            <value>The row sizes.</value>
        </member>
        <member name="F:Forms9Patch.MultiComponentPicker.RowHeightProperty">
            <summary>
            The row height property.
            </summary>
        </member>
        <member name="P:Forms9Patch.MultiComponentPicker.RowHeight">
            <summary>
            Gets or sets the height of the row.
            </summary>
            <value>The height of the row.</value>
        </member>
        <member name="T:Forms9Patch.MultiComponentPicker.SelectionChangedEventArgs">
            <summary>
            Selection changed event arguments.
            </summary>
        </member>
        <member name="F:Forms9Patch.MultiComponentPicker.SelectionChangedEventArgs.Category">
            <summary>
            The category.
            </summary>
        </member>
        <member name="E:Forms9Patch.MultiComponentPicker.SelectionChanged">
            <summary>
            Occurs when selection changed.
            </summary>
        </member>
        <member name="M:Forms9Patch.MultiComponentPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.MultiComponentPicker"/> class.
            </summary>
        </member>
        <member name="T:Forms9Patch.MultiPicker">
            <summary>
            Multi picker.
            </summary>
        </member>
        <member name="P:Forms9Patch.MultiPicker.SelectedIndexes">
            <summary>
            The indexes currently selected
            </summary>
        </member>
        <member name="M:Forms9Patch.MultiPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.MultiPicker"/> class.
            </summary>
        </member>
        <member name="T:Forms9Patch.MultiPicker.MultiPickerHtmlCellContentView">
            <summary>
            MultiPicker HTML cell content view
            </summary>
        </member>
        <member name="M:Forms9Patch.MultiPicker.MultiPickerHtmlCellContentView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Forms9Patch.MultiPicker.MultiPickerHtmlCellContentView.OnBindingContextChanged">
            <summary>
            Same as it ever was
            </summary>
        </member>
        <member name="T:Forms9Patch.MultiPicker.MultiPickerCellContentView">
            <summary>
            MultiPicker cell content view
            </summary>
        </member>
        <member name="F:Forms9Patch.MultiPicker.MultiPickerCellContentView.checkLabel">
            <summary>
            Protected use
            </summary>
        </member>
        <member name="M:Forms9Patch.MultiPicker.MultiPickerCellContentView.#ctor">
            <summary>
            Constructor for MultiPicker Cell content view
            </summary>
        </member>
        <member name="M:Forms9Patch.MultiPicker.MultiPickerCellContentView.OnPropertyChanged(System.String)">
            <summary>
            Same as it ever was
            </summary>
        </member>
        <member name="T:Forms9Patch.SinglePicker">
            <summary>
            Single picker.
            </summary>
        </member>
        <member name="F:Forms9Patch.SinglePicker.IsHtmlTextProperty">
            <summary>
            Backing store for SinglePicker's IsHtmlText property
            </summary>
        </member>
        <member name="P:Forms9Patch.SinglePicker.IsHtmlText">
            <summary>
            controls value of .IsHtmlText property
            </summary>
        </member>
        <member name="F:Forms9Patch.SinglePicker.PlainTextCellType">
            <summary>
            Internal use
            </summary>
        </member>
        <member name="F:Forms9Patch.SinglePicker.HtmlTextCellType">
            <summary>
            Internal Use
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SinglePicker"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="M:Forms9Patch.SinglePicker.Reset">
            <summary>
            Reset this instance.
            </summary>
        </member>
        <member name="T:Forms9Patch.SinglePicker.SinglePickerHtmlCellContentView">
            <summary>
            Contents of a SinglePicker HTML cell
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.SinglePickerHtmlCellContentView.#ctor">
            <summary>
            Constructor for a SinglePicker HTML cell
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.SinglePickerHtmlCellContentView.OnBindingContextChanged">
            <summary>
            Same as it ever was
            </summary>
        </member>
        <member name="T:Forms9Patch.SinglePicker.SinglePickerCellContentView">
            <summary>
            Contents of a SinglePicker Cell
            </summary>
        </member>
        <member name="F:Forms9Patch.SinglePicker.SinglePickerCellContentView.IsSelectedProperty">
            <summary>
            Backing store key for IsSelected property
            </summary>
        </member>
        <member name="P:Forms9Patch.SinglePicker.SinglePickerCellContentView.IsSelected">
            <summary>
            Is this cell selected?
            </summary>
        </member>
        <member name="F:Forms9Patch.SinglePicker.SinglePickerCellContentView.itemLabel">
            <summary>
            For internal use
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.SinglePickerCellContentView.#ctor">
            <summary>
            Constructs a Forms9Patch.SinglePickerCellContentView
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.SinglePickerCellContentView.Dispose(System.Boolean)">
            <summary>
            Same as it ever was
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.SinglePickerCellContentView.Dispose">
            <summary>
            Same as it ever was
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.SinglePickerCellContentView.OnPropertyChanging(System.String)">
            <summary>
            Same as it ever was
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.SinglePickerCellContentView.OnBindingContextChanged">
            <summary>
            Same as it ever was
            </summary>
        </member>
        <member name="M:Forms9Patch.SinglePicker.SinglePickerCellContentView.OnPropertyChanged(System.String)">
            <summary>
            Same as it ever was
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:Forms9Patch.ActivityIndicatorPopup">
            <summary>
            Activity indicator full page overlay.
            </summary>
        </member>
        <member name="F:Forms9Patch.ActivityIndicatorPopup.ColorProperty">
            <summary>
            The color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ActivityIndicatorPopup.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="M:Forms9Patch.ActivityIndicatorPopup.Create(System.TimeSpan)">
            <summary>
            Presents an Activity Indicator Page Overlay
            </summary>
            <param name="popAfter"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ActivityIndicatorPopup.Create(Xamarin.Forms.Color,System.TimeSpan)">
            <summary>
            Presents an Activity Indicator Page Overlay
            </summary>
            <param name="color"></param>
            <param name="popAfter"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ActivityIndicatorPopup.#ctor(Xamarin.Forms.Color,System.TimeSpan)">
            <summary>
            Constructs an ActivityIndicator Popup
            </summary>
            <param name="color"></param>
            <param name="popAfter"></param>
        </member>
        <member name="M:Forms9Patch.ActivityIndicatorPopup.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ActivityIndicatorPopup"/> class.
            </summary>
            <param name="popAfter"></param>
        </member>
        <member name="M:Forms9Patch.ActivityIndicatorPopup.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.Alert">
            <summary>
            Permission popup.
            </summary>
        </member>
        <member name="M:Forms9Patch.Alert.Create(System.String,System.String,System.String,Xamarin.Forms.Color,Xamarin.Forms.Color)">
            <summary>
            Create the specified title, text, okText, cancelText, okButtonColor, cancelButtonColor, okTextColor and cancelTextColor.
            </summary>
            <param name="title">Title.</param>
            <param name="text">Text.</param>
            <param name="okText">Ok text.</param>
            <param name="okButtonColor">Ok button color.</param>
            <param name="okTextColor">Ok text color.</param>
        </member>
        <member name="M:Forms9Patch.Alert.Create(Xamarin.Forms.VisualElement,System.String,System.String,System.String,Xamarin.Forms.Color,Xamarin.Forms.Color)">
            <summary>
            Create the specified target, title, text, okText, cancelText, okButtonColor, cancelButtonColor, okTextColor and cancelTextColor.
            </summary>
            <returns>The create.</returns>
            <param name="target">Target.</param>
            <param name="title">Title.</param>
            <param name="text">Text.</param>
            <param name="okText">Ok text.</param>
            <param name="okButtonColor">Ok button color.</param>
            <param name="okTextColor">Ok text color.</param>
        </member>
        <member name="F:Forms9Patch.Alert.TitleProperty">
            <summary>
            The title property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.Alert.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Forms9Patch.Alert.TextProperty">
            <summary>
            The text property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.Alert.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="F:Forms9Patch.Alert.OkTextProperty">
            <summary>
            The ok text property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Alert.OkText">
            <summary>
            Gets or sets the ok text.
            </summary>
            <value>The ok text.</value>
        </member>
        <member name="F:Forms9Patch.Alert.OkButtonColorProperty">
            <summary>
            The ok button color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Alert.OkButtonColor">
            <summary>
            Gets or sets the color of the ok button.
            </summary>
            <value>The color of the ok button.</value>
        </member>
        <member name="F:Forms9Patch.Alert.OkTextColorProperty">
            <summary>
            The ok text color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Alert.OkTextColor">
            <summary>
            Gets or sets the color of the ok text.
            </summary>
            <value>The color of the ok text.</value>
        </member>
        <member name="F:Forms9Patch.Alert.PermissionStateProperty">
            <summary>
            PermissionState Bindable Property
            </summary>
        </member>
        <member name="P:Forms9Patch.Alert.PermissionState">
            <summary>
            The current permission process state of the Permision Popup
            </summary>
        </member>
        <member name="E:Forms9Patch.Alert.OkTapped">
            <summary>
            Occurs when ok button is tapped.
            </summary>
        </member>
        <member name="F:Forms9Patch.Alert._okButton">
            <summary>
            OK Button 
            </summary>
        </member>
        <member name="M:Forms9Patch.Alert.#ctor(Xamarin.Forms.VisualElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.Alert"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.Alert.Dispose(System.Boolean)">
            <summary>
            Dispose instance
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.Alert.CancelAsync(System.Object)">
            <summary>
            Cancel the Alert
            </summary>
            <param name="trigger"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Alert.OnAppearing">
            <summary>
            Called when appearing
            </summary>
        </member>
        <member name="M:Forms9Patch.Alert.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.BubblePopup">
            <summary>
            Forms9Patch Bubble pop-up.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubblePopup.Content">
            <summary>
            Gets or sets the content of the FormsPopup.Modal.
            </summary>
            <value>The content.</value>
        </member>
        <member name="F:Forms9Patch.BubblePopup.TargetBiasProperty">
            <summary>
            The target bias property backing Store.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubblePopup.TargetBias">
            <summary>
            Gets or sets the bias (0.0 is start; 0.5 is center;  1.0 is end; greater than 1.0 is pixels from start; less than 0.0 is pixels from end)of the pointer relative to the chosen face on the target.
            </summary>
            <value>The target bias.</value>
        </member>
        <member name="F:Forms9Patch.BubblePopup.PointerLengthProperty">
            <summary>
            Backing store for pointer length property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubblePopup.PointerLength">
            <summary>
            Gets or sets the length of the bubble layout's pointer.
            </summary>
            <value>The length of the pointer.</value>
        </member>
        <member name="F:Forms9Patch.BubblePopup.PointerTipRadiusProperty">
            <summary>
            Backing store for pointer tip radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubblePopup.PointerTipRadius">
            <summary>
            Gets or sets the radius of the bubble's pointer tip.
            </summary>
            <value>The pointer tip radius.</value>
        </member>
        <member name="F:Forms9Patch.BubblePopup.PointerDirectionProperty">
            <summary>
            Backing store for pointer direction property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubblePopup.PointerDirection">
            <summary>
            Gets or sets the direction in which the pointer pointing.
            </summary>
            <value>The pointer direction.</value>
        </member>
        <member name="F:Forms9Patch.BubblePopup.PreferredPointerDirectionProperty">
            <summary>
            backing store for PreferredPointerDirection property
            </summary>
        </member>
        <member name="P:Forms9Patch.BubblePopup.PreferredPointerDirection">
            <summary>
            Gets/Sets the PreferredPointerDirection property
            </summary>
        </member>
        <member name="F:Forms9Patch.BubblePopup.PointerCornerRadiusProperty">
            <summary>
            The pointer corner radius property.  Defaults to OutlineCornerRadius if not set.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubblePopup.PointerCornerRadius">
            <summary>
            Gets or sets the pointer corner radius.
            </summary>
            <value>The pointer corner radius.</value>
        </member>
        <member name="F:Forms9Patch.BubblePopup.PointProperty">
            <summary>
            backing store for Point property
            </summary>
        </member>
        <member name="P:Forms9Patch.BubblePopup.Point">
            <summary>
            Gets/Sets the Point property
            </summary>
        </member>
        <member name="M:Forms9Patch.BubblePopup.#ctor(Xamarin.Forms.VisualElement,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.BubblePopup"/> class.
            </summary>
            <param name="target">Target.</param>
            <param name="popAfter">Pop after TimeSpan.</param>
        </member>
        <member name="M:Forms9Patch.BubblePopup.#ctor(Xamarin.Forms.VisualElement,Xamarin.Forms.Point,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.BubblePopup"/> class.
            </summary>
            <param name="target">Target.</param>
            <param name="point">Point.</param>
            <param name="popAfter">Pop after TimeSpan.</param>
        </member>
        <member name="M:Forms9Patch.BubblePopup.#ctor(Forms9Patch.Segment,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.BubblePopup"/> class.
            </summary>
            <param name="segment"></param>
            <param name="popAfter"></param>
        </member>
        <member name="M:Forms9Patch.BubblePopup.OnPropertyChanged(System.String)">
            <param name="propertyName">The name of the property that changed.</param>
            <summary>
            Call this method from a child class to notify that a change happened on a property.
            </summary>
        </member>
        <member name="M:Forms9Patch.BubblePopup.OnAppearingAnimationBegin">
            <summary>
            Called when popup is starting to appear
            </summary>
        </member>
        <member name="P:Forms9Patch.BubblePopup.UsePoint">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.BubblePopup"/> will target Point (a point in the target) vs. the border of the target.
            </summary>
            <value><c>true</c> if use point; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Forms9Patch.BubblePopup.Available(System.Double,System.Double,Xamarin.Forms.Rectangle)">
            <summary>
            How much space is available for a popup of width and height?
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="targetBounds"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.BubblePopup.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <param name="x">A value representing the x coordinate of the child region bounding box.</param>
            <param name="y">A value representing the y coordinate of the child region bounding box.</param>
            <param name="width">A value representing the width of the child region bounding box.</param>
            <param name="height">A value representing the height of the child region bounding box.</param>
            <summary>
            Positions and sizes the children of a Layout.
            </summary>
            <remarks>Implementors wishing to change the default behavior of a Layout should override this method. It is suggested to
            still call the base method and modify its calculated results.</remarks>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.AllPagesPoppedEventArgs">
            <summary>
            Event arguments when all popups are popped
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.AllPagesPoppedEventArgs.PoppedPages">
            <summary>
            Popped popups
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.AllPagesPoppedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Xamarin.Forms.Page})">
            <summary>
            Constructor
            </summary>
            <param name="poppedPages"></param>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation">
            <summary>
            Base class of Popup Animations
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.DurationIn">
            <summary>
            Duration of appearing animation
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.DurationOut">
            <summary>
            Duration of disappearing animation
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.EasingIn">
            <summary>
            Motion profile for appearing animation
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.EasingOut">
            <summary>
            Motion profile for disappearing animation
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.Preparing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called before Popup appears 
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.Disposing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called after the Popup disappears
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.Appearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's appearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.Disappearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's disappearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.GetTopOffset(Xamarin.Forms.View,Xamarin.Forms.Page)">
            <summary>
            Called when calculating the top edge of the popup
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.GetLeftOffset(Xamarin.Forms.View,Xamarin.Forms.Page)">
            <summary>
            Called when calculating the left edge of the popup
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.HidePage(Xamarin.Forms.Page)">
            <summary>
            Use this method for avoiding the problem with blinking animation on iOS
            See https://github.com/rotorgames/Rg.Plugins.Popup/issues/404
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.BaseAnimation.ShowPage(Xamarin.Forms.Page)">
            <summary>
            Use this method for avoiding the problem with blinking animation on iOS
            See https://github.com/rotorgames/Rg.Plugins.Popup/issues/404
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.Animations.Base.FadeBackgroundAnimation">
            <summary>
            Animation to fade popup's background
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.Base.FadeBackgroundAnimation.HasBackgroundAnimation">
            <summary>
            Huh?
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.FadeBackgroundAnimation.Preparing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called before Popup appears 
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.FadeBackgroundAnimation.Disposing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called after the Popup disappears
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.FadeBackgroundAnimation.Appearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's appearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.Base.FadeBackgroundAnimation.Disappearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's disappearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.Animations.FadeAnimation">
            <summary>
            Popup fade animation
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.FadeAnimation.HasBackgroundAnimation">
            <summary>
            Huh?
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.FadeAnimation.Preparing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called before Popup appears 
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.FadeAnimation.Disposing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called after the Popup disappears
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.FadeAnimation.Appearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's appearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.FadeAnimation.Disappearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's disappearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation">
            <summary>
            Used for sweep animation of popups
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.PositionIn">
            <summary>
            Start position for appearing
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.PositionOut">
            <summary>
            End position for disappearing
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.#ctor">
            <summary>
            The move animation for popups
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.#ctor(Forms9Patch.Elements.Popups.Core.MoveAnimationOptions,Forms9Patch.Elements.Popups.Core.MoveAnimationOptions)">
            <summary>
            The move animation for popups
            </summary>
            <param name="positionIn"></param>
            <param name="positionOut"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.Preparing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called before Popup appears 
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.Disposing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called after the Popup disappears
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.Appearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's appearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.MoveAnimation.Disappearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's disappearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation">
            <summary>
            Popup scale animation
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.ScaleIn">
            <summary>
            Scale at beginning of appearing 
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.ScaleOut">
            <summary>
            Scale at end of disappearing 
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.PositionIn">
            <summary>
            Position at beginning of appearing 
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.PositionOut">
            <summary>
            Position at end of disappearing
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.#ctor">
            <summary>
            Popup scale animation
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.#ctor(Forms9Patch.Elements.Popups.Core.MoveAnimationOptions,Forms9Patch.Elements.Popups.Core.MoveAnimationOptions)">
            <summary>
            Popup scale animation
            </summary>
            <param name="positionIn"></param>
            <param name="positionOut"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.Preparing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called before Popup appears 
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.Disposing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called after the Popup disappears
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.Appearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's appearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Animations.ScaleAnimation.Disappearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's disappearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.EasingTypeConverter">
            <summary>
            Popup type converter
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.EasingTypeConverter.ConvertFromInvariantString(System.String)">
            <summary>
            String to Easing Type
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.UintTypeConverter">
            <summary>
            Popup unit type converter
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.Converters.TypeConverters.UintTypeConverter.ConvertFromInvariantString(System.String)">
            <summary>
            String to unit type converter
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.IPopupAnimation">
            <summary>
            Popup animation interface
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.IPopupAnimation.Preparing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called before Popup appears 
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.IPopupAnimation.Disposing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called after the Popup disappears
            </summary>
            <param name="content"></param>
            <param name="page"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.IPopupAnimation.Appearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's appearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.IPopupAnimation.Disappearing(Xamarin.Forms.View,Forms9Patch.Elements.Popups.Core.PopupPage)">
            <summary>
            Called when animating the popup's disappearance
            </summary>
            <param name="content"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.IPopupNavigation">
            <summary>
            Popup navigation interface
            </summary>
        </member>
        <member name="E:Forms9Patch.Elements.Popups.Core.IPopupNavigation.Pushed">
            <summary>
            Triggered when a popup is pushed
            </summary>
        </member>
        <member name="E:Forms9Patch.Elements.Popups.Core.IPopupNavigation.Popped">
            <summary>
            Triggered when a popup is popped
            </summary>
        </member>
        <member name="E:Forms9Patch.Elements.Popups.Core.IPopupNavigation.PoppedAll">
            <summary>
            Triggered when all popups are popped
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.IPopupNavigation.PopupStack">
            <summary>
            The stack of popups
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.IPopupNavigation.PushAsync(Forms9Patch.Elements.Popups.Core.PopupPage,System.Boolean)">
            <summary>
            Add popup to stack
            </summary>
            <param name="page"></param>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.IPopupNavigation.PopAsync(System.Boolean)">
            <summary>
            Remove popup from stack
            </summary>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.IPopupNavigation.PopAllAsync(System.Boolean)">
            <summary>
            Clear all popups
            </summary>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.IPopupNavigation.RemovePageAsync(Forms9Patch.Elements.Popups.Core.PopupPage,System.Boolean)">
            <summary>
            Remove a particular page from stack
            </summary>
            <param name="page"></param>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.MoveAnimationOptions">
            <summary>
            Options for move animations
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.MoveAnimationOptions.Center">
            <summary>
            Animate Center
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.MoveAnimationOptions.Left">
            <summary>
            Animate Left
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.MoveAnimationOptions.Right">
            <summary>
            Animate Right
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.MoveAnimationOptions.Top">
            <summary>
            Animate Top
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.MoveAnimationOptions.Bottom">
            <summary>
            Animate Bottom
            </summary>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.NavigationExtension">
            <summary>
            Navigation extensions
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.NavigationExtension.PushPopupAsync(Xamarin.Forms.INavigation,Forms9Patch.Elements.Popups.Core.PopupPage,System.Boolean)">
            <summary>
            Display popup
            </summary>
            <param name="sender"></param>
            <param name="page"></param>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.NavigationExtension.PopPopupAsync(Xamarin.Forms.INavigation,System.Boolean)">
            <summary>
            Remove popup
            </summary>
            <param name="sender"></param>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.NavigationExtension.PopAllPopupAsync(Xamarin.Forms.INavigation,System.Boolean)">
            <summary>
            Remove all popups
            </summary>
            <param name="sender"></param>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.NavigationExtension.RemovePopupPageAsync(Xamarin.Forms.INavigation,Forms9Patch.Elements.Popups.Core.PopupPage,System.Boolean)">
            <summary>
            Remove a particular popup
            </summary>
            <param name="sender"></param>
            <param name="page"></param>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.PaddingSide">
            <summary>
            Determines side of popup to which padding applies
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PaddingSide.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PaddingSide.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PaddingSide.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PaddingSide.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PaddingSide.Horizontal">
            <summary>
            Horizontal
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PaddingSide.Vertical">
            <summary>
            Vertical
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PaddingSide.All">
            <summary>
            All sides
            </summary>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.PopupNavigation">
            <summary>
            Popup navigation manager
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupNavigation.SetInstance(Forms9Patch.Elements.Popups.Core.IPopupNavigation)">
            <summary>
            Sets the instance
            </summary>
            <param name="instance"></param>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupNavigation.Instance">
            <summary>
            Singleton
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupNavigation.PopupStack">
            <summary>
            The stack
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupNavigation.PushAsync(Forms9Patch.Elements.Popups.Core.PopupPage,System.Boolean)">
            <summary>
            Display a popup 
            </summary>
            <param name="page"></param>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupNavigation.PopAsync(System.Boolean)">
            <summary>
            Remove a popup
            </summary>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupNavigation.PopAllAsync(System.Boolean)">
            <summary>
            Remove all popups
            </summary>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupNavigation.RemovePageAsync(Forms9Patch.Elements.Popups.Core.PopupPage,System.Boolean)">
            <summary>
            Remove a particular popup
            </summary>
            <param name="page"></param>
            <param name="animate"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Elements.Popups.Core.PopupPage">
            <summary>
            Foundation for Popups
            </summary>
        </member>
        <member name="E:Forms9Patch.Elements.Popups.Core.PopupPage.BackgroundClicked">
            <summary>
            Triggered when popup's background is clicked
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PopupPage.IsAnimationEnabledProperty">
            <summary>
            BindableProperty for IsAnmiationEnabled property
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupPage.IsAnimationEnabled">
            <summary>
            Enables animation
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PopupPage.HasSystemPaddingProperty">
            <summary>
            BindableProperty for HasSystemPadding property
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupPage.HasSystemPadding">
            <summary>
            Enables use of system padding
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PopupPage.AnimationProperty">
            <summary>
            BindableProperty for Animation property
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupPage.Animation">
            <summary>
            Sets the animation
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PopupPage.SystemPaddingProperty">
            <summary>
            BindableProperty for SystemPadding property
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupPage.SystemPadding">
            <summary>
            Sets the system padding
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PopupPage.SystemPaddingSidesProperty">
            <summary>
            BindableProperty for SystemPaddingSides property
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupPage.SystemPaddingSides">
            <summary>
            Sets the sides for the system padding
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PopupPage.CloseWhenBackgroundIsClickedProperty">
            <summary>
            BindableProperty for CloseWhen BackgroundIsClicked property
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupPage.CloseWhenBackgroundIsClicked">
            <summary>
            Closes popup when background is clicked
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PopupPage.BackgroundInputTransparentProperty">
            <summary>
            BindableProperty for BackgroundInputTransparent property
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupPage.BackgroundInputTransparent">
            <summary>
            Passes gestures to page below background
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PopupPage.HasKeyboardOffsetProperty">
            <summary>
            BindableProperty for HasKeyboardOffset property
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupPage.HasKeyboardOffset">
            <summary>
            enables automated keyboard offset
            </summary>
        </member>
        <member name="F:Forms9Patch.Elements.Popups.Core.PopupPage.KeyboardOffsetProperty">
            <summary>
            BindableProperty for KeyboardOffset property
            </summary>
        </member>
        <member name="P:Forms9Patch.Elements.Popups.Core.PopupPage.KeyboardOffset">
            <summary>
            Gets the current keyboard offset
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnPropertyChanged(System.String)">
            <summary>
            Invoked when property has changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnBackButtonPressed">
            <summary>
            Invoked when back button has been pressed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Invoked upon layout
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnAppearingAnimationBegin">
            <summary>
            Invoked at beginning of appearing animation
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnAppearingAnimationEnd">
            <summary>
            Invoked at end of appearing animation
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnDisappearingAnimationBegin">
            <summary>
            Invoked at start of disappearing animation
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnDisappearingAnimationEnd">
            <summary>
            Invoked at end of disappearing animation
            </summary>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnAppearingAnimationBeginAsync">
            <summary>
            Invoked at start on appearing animation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnAppearingAnimationEndAsync">
            <summary>
            Invoked at end of appearing animation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnDisappearingAnimationBeginAsync">
            <summary>
            Invoked at start of disappearing animation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnDisappearingAnimationEndAsync">
            <summary>
            Invoked at end of disappearing animation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.Elements.Popups.Core.PopupPage.OnBackgroundClicked">
            <summary>
            Invoked when background is clicked
            </summary>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.FlyoutPopup">
            <summary>
            A popup that enters from the side of the screen and stops at the same side.  Great for notificaitons or menus.
            </summary>
        </member>
        <member name="F:Forms9Patch.FlyoutPopup.OrientationProperty">
            <summary>
            Backing store for the orientation property.
            </summary>
        </member>
        <member name="P:Forms9Patch.FlyoutPopup.Orientation">
            <summary>
            Gets or sets the orientation of the flyout (along which axis does the fly out action occur?).
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="F:Forms9Patch.FlyoutPopup.AlignmentProperty">
            <summary>
            Backing store for the alignment property.
            </summary>
        </member>
        <member name="P:Forms9Patch.FlyoutPopup.Alignment">
            <summary>
            Gets or sets the alignment of the flyout along the Orientation axis
            </summary>
            <value>The alignment.</value>
        </member>
        <member name="P:Forms9Patch.FlyoutPopup.Content">
            <summary>
            Gets or sets the content of the FormsPopup.Modal.
            </summary>
            <value>The content.</value>
        </member>
        <member name="M:Forms9Patch.FlyoutPopup.#ctor(System.TimeSpan)">
            <summary>
            Construct new FlyoutPopup
            </summary>
            <param name="popAfter">Flyout will dissappear after popAfter</param>
        </member>
        <member name="M:Forms9Patch.FlyoutPopup.Dispose(System.Boolean)">
            <summary>
            Dispose FlyoutPopup
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Forms9Patch.ModalPopup">
            <summary>
            Forms9Patch Modal popup.
            </summary>
        </member>
        <member name="P:Forms9Patch.ModalPopup.Content">
            <summary>
            Gets or sets the content of the FormsPopup.Modal.
            </summary>
            <value>The content.</value>
        </member>
        <member name="F:Forms9Patch.ModalPopup.LocationProperty">
            <summary>
            The location property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.ModalPopup.Location">
            <summary>
            Gets or sets the Modal Popup's location.
            </summary>
            <value>The location (default centers it in Host Page).</value>
        </member>
        <member name="F:Forms9Patch.ModalPopup.ScaleProperty">
            <summary>
            BindableProperty for Scale property
            </summary>
        </member>
        <member name="P:Forms9Patch.ModalPopup.Scale">
            <summary>
            the scale of the content of the popup
            </summary>
        </member>
        <member name="M:Forms9Patch.ModalPopup.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ModalPopup"/> class.
            </summary>
            <param name="popAfter">Pop after TimeSpan.</param>
        </member>
        <member name="M:Forms9Patch.ModalPopup.OnPropertyChanged(System.String)">
            <summary>
            Responds to a change in a PopupBase property.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:Forms9Patch.ModalPopup.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <param name="x">A value representing the x coordinate of the child region bounding box.</param>
            <param name="y">A value representing the y coordinate of the child region bounding box.</param>
            <param name="width">A value representing the width of the child region bounding box.</param>
            <param name="height">A value representing the height of the child region bounding box.</param>
            <summary>
            Positions and sizes the children of a Layout.
            </summary>
            <remarks>Implementors wishing to change the default behavior of a Layout should override this method. It is suggested to
            still call the base method and modify its calculated results.</remarks>
        </member>
        <member name="T:Forms9Patch.PermissionPopup">
            <summary>
            Permission popup.
            </summary>
        </member>
        <member name="M:Forms9Patch.PermissionPopup.Create(System.String,System.String,System.String,System.String,Xamarin.Forms.Color,Xamarin.Forms.Color,Xamarin.Forms.Color,Xamarin.Forms.Color)">
            <summary>
            Create the specified title, text, okText, cancelText, okButtonColor, cancelButtonColor, okTextColor and cancelTextColor.
            </summary>
            <param name="title">Title.</param>
            <param name="text">Text.</param>
            <param name="okText">Ok text.</param>
            <param name="cancelText">Cancel text.</param>
            <param name="okButtonColor">Ok button color.</param>
            <param name="cancelButtonColor">Cancel button color.</param>
            <param name="okTextColor">Ok text color.</param>
            <param name="cancelTextColor">Cancel text color.</param>
        </member>
        <member name="M:Forms9Patch.PermissionPopup.Create(Xamarin.Forms.VisualElement,System.String,System.String,System.String,System.String,Xamarin.Forms.Color,Xamarin.Forms.Color,Xamarin.Forms.Color,Xamarin.Forms.Color)">
            <summary>
            Create the specified target, title, text, okText, cancelText, okButtonColor, cancelButtonColor, okTextColor and cancelTextColor.
            </summary>
            <returns>The create.</returns>
            <param name="target">Target.</param>
            <param name="title">Title.</param>
            <param name="text">Text.</param>
            <param name="okText">Ok text.</param>
            <param name="cancelText">Cancel text.</param>
            <param name="okButtonColor">Ok button color.</param>
            <param name="cancelButtonColor">Cancel button color.</param>
            <param name="okTextColor">Ok text color.</param>
            <param name="cancelTextColor">Cancel text color.</param>
        </member>
        <member name="F:Forms9Patch.PermissionPopup.CancelTextProperty">
            <summary>
            The cancel text property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PermissionPopup.CancelText">
            <summary>
            Gets or sets the cancel text.
            </summary>
            <value>The cancel text.</value>
        </member>
        <member name="F:Forms9Patch.PermissionPopup.CancelButtonColorProperty">
            <summary>
            The cancel button color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PermissionPopup.CancelButtonColor">
            <summary>
            Gets or sets the color of the cancel button.
            </summary>
            <value>The color of the cancel button.</value>
        </member>
        <member name="F:Forms9Patch.PermissionPopup.CancelTextColorProperty">
            <summary>
            The cancel text color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PermissionPopup.CancelTextColor">
            <summary>
            Gets or sets the color of the cancel text.
            </summary>
            <value>The color of the cancel text.</value>
        </member>
        <member name="M:Forms9Patch.PermissionPopup.#ctor(Xamarin.Forms.VisualElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.PermissionPopup"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.PermissionPopup.Dispose(System.Boolean)">
            <summary>
            Dispose instance
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.PermissionPopup.CancelAsync(System.Object)">
            <summary>
            Cancel the PermissionPopup
            </summary>
            <param name="trigger"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PermissionPopup.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.PopupBase">
            <summary>
            Forms9Patch Popup base.
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase.IsAnimationEnabledProperty">
            <summary>
            backing store for IsAnimationEnabled property
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.IsAnimationEnabled">
            <summary>
            Determines if popup Pop and Push events are animated
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase.PaddingProperty">
            <summary>
            override Xamarin.Forms.Layout.Padding property backing store in order to correctly compute and store shadow padding
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.Padding">
            <summary>
            Gets or sets the inner padding of the Layout.
            </summary>
            <value>The Thickness values for the layout. The default value is a Thickness with all values set to 0.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.IsVisibleProperty">
            <summary>
            The is visible property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.IsVisible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.PopupBase"/> is visible.
            </summary>
            <value><c>true</c> if is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.MarginProperty">
            <summary>
            The margin property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.Margin">
            <summary>
            Gets or sets the margin.
            </summary>
            <value>The margin.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.HorizontalOptionsProperty">
            <summary>
            The horizontal options property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.HorizontalOptions">
            <summary>
            Gets or sets the horizontal options.
            </summary>
            <value>The horizontal options.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.VerticalOptionsProperty">
            <summary>
            The vertical options property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.VerticalOptions">
            <summary>
            Gets or sets the vertical options.
            </summary>
            <value>The vertical options.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.TargetProperty">
            <summary>
            The target property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.Target">
            <summary>
            Gets or sets the popup target (could be a Page or a VisualElement on a Page).
            </summary>
            <value>The target.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.PageOverlayColorProperty">
            <summary>
            Identifies the PageOverlayColor bindable property.
            </summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:Forms9Patch.PopupBase.PageOverlayColor">
            <summary>
            Gets or sets the color of the page overlay.
            </summary>
            <value>The color of the page overlay.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.CancelOnPageOverlayTouchProperty">
            <summary>
            Cancel the Popup when the PageOverlay is touched
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.CancelOnPageOverlayTouch">
            <summary>
            Gets or sets a value indicating whether Popup <see cref="T:Forms9Patch.PopupBase"/> will cancel on page overlay touch.
            </summary>
            <value><c>true</c> if cancel on page overlay touch; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.CancelOnBackButtonClickProperty">
            <summary>
            Cancel the Popup when the back button is touched
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.CancelOnBackButtonClick">
            <summary>
            Gets or sets a value indicating whether Popup <see cref="T:Forms9Patch.PopupBase"/> will cancel on the back button touch.
            </summary>
            <value><c>true</c> if cancel on back button touch; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.PopAfterProperty">
            <summary>
            BindableProperty key for PopAfter property
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.PopAfter">
            <summary>
            Duration of popup appearance before it is automatically cancelled
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase.ParameterProperty">
            <summary>
            BindableProperty key for Parameter property
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.Parameter">
            <summary>
            Object that can be set prior to appearance of Popup for the purpose of application to processing after the popup is disappeared;
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase.BackgroundImageProperty">
            <summary>
            Backing store for the BackgroundImage bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.BackgroundColorProperty">
            <summary>
            backing store for BackgroundColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.BackgroundColor">
            <summary>
            Gets/Sets the BackgroundColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase.HasShadowProperty">
            <summary>
            HasShadow property backing store
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.HasShadow">
            <summary>
            Gets/Sets the HasShadow property
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase.ShadowInvertedProperty">
            <summary>
            Backing store for the ShadowInverted bindable property.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Forms9Patch.PopupBase.ShadowInverted">
            <summary>
            Gets or sets a flag indicating if the layout's shadow is inverted. This is a bindable property.
            </summary>
            <value><c>true</c> if this instance's shadow is inverted; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.OutlineColorProperty">
            <summary>
            backing store for OutlineColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.OutlineColor">
            <summary>
            Gets/Sets the OutlineColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase.BorderColorProperty">
            <summary>
            The boarder color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.BorderColor">
            <summary>
            Gets or sets the color of the boarder.
            </summary>
            <value>The color of the boarder.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.OutlineRadiusProperty">
            <summary>
            Backing store for the outline radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.OutlineRadius">
            <summary>
            Gets or sets the outline radius.
            </summary>
            <value>The outline radius.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.BorderRadiusProperty">
            <summary>
            The boarder radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.BorderRadius">
            <summary>
            Gets or sets the boarder radius.
            </summary>
            <value>The boarder radius.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.OutlineWidthProperty">
            <summary>
            Backing store for the outline width property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.OutlineWidth">
            <summary>
            Gets or sets the width of the outline.
            </summary>
            <value>The width of the outline.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.BorderWidthProperty">
            <summary>
            The boarder width property.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.BorderWidth">
            <summary>
            Gets or sets the width of the boarder.
            </summary>
            <value>The width of the boarder.</value>
        </member>
        <member name="F:Forms9Patch.PopupBase.ElementShapeProperty">
            <summary>
            Backing store for the ElementShape property
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.ElementShape">
            <summary>
            Gets/sets the geometry of the element
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.InstanceId">
            <summary>
            The Instance Id (for debugging purposes)
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupBase.DecorativeContainerView">
            <summary>
            What is the decorative container view for the popup (BubbleLayout, Frame)?
            </summary>
        </member>
        <member name="E:Forms9Patch.PopupBase.Cancelled">
            <summary>
            Occurs when popup has been cancelled.
            </summary>
        </member>
        <member name="E:Forms9Patch.PopupBase.Popped">
            <summary>
            Occurs when popup has popped;
            </summary>
        </member>
        <member name="E:Forms9Patch.PopupBase.AppearingAnimationBegin">
            <summary>
            Occurs when popup appearing animation has started
            </summary>
        </member>
        <member name="E:Forms9Patch.PopupBase.AppearingAnimationEnd">
            <summary>
            Occurs when popup appearing animation has ended
            </summary>
        </member>
        <member name="E:Forms9Patch.PopupBase.DisappearingAnimationBegin">
            <summary>
            occurs when popup disappearing animation has started
            </summary>
        </member>
        <member name="E:Forms9Patch.PopupBase.DisappearingAnimationEnd">
            <summary>
            Occurs when popup disappearing animation has ended
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase._id">
            <summary>
            Incremental identifier;
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase._lastLayout">
            <summary>
            Say, when was the last time I ...
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupBase.#ctor(Forms9Patch.Segment,System.TimeSpan)">
            <summary>
            Initializes new instance of the PopupBase class.
            </summary>
            <param name="segment"></param>
            <param name="popAfter"></param>
        </member>
        <member name="M:Forms9Patch.PopupBase.#ctor(Xamarin.Forms.VisualElement,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.PopupBase"/> class.
            </summary>
            <param name="target">Target.</param>
            <param name="popAfter">Pop after TimeSpan.</param>
        </member>
        <member name="M:Forms9Patch.PopupBase.Dispose(System.Boolean)">
            <summary>
            Clean up unmanaged objects
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:Forms9Patch.PopupBase.Dispose">
            <summary>
            Releases all resource used by the <see cref="T:Forms9Patch.PopupBase"/> object.
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupBase.WaitForPoppedAsync">
            <summary>
            Delay until the popup is popped.
            </summary>
            <returns>Why the popup was popped and, if appropriate, what triggered it.</returns>
        </member>
        <member name="M:Forms9Patch.PopupBase.OnBackButtonPressed">
            <summary>
            Called when back button is pressed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PopupBase.OnBackgroundClicked">
            <summary>
            Called when background is clicked;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PopupBase.CancelAsync(System.Object)">
            <summary>
            Cancels the async.
            </summary>
            <returns>Task</returns>
            <param name="trigger">Optional, object or PopupEventCause that triggered cancelation.</param>
        </member>
        <member name="M:Forms9Patch.PopupBase.Cancel(System.Object)">
            <summary>
            Cancels the popup
            </summary>
            <param name="trigger"></param>
        </member>
        <member name="F:Forms9Patch.PopupBase._isPushing">
            <summary>
            Is true when the popup is being pushed
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase._isPushed">
            <summary>
            Is true when the popup has been pushed
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase._isPopping">
            <summary>
            Is true when the popup is being popped
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase._isPopped">
            <summary>
            true if Popup is popped;
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupBase._popAnimationComplete">
            <summary>
            true if pop animation is complete
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupBase.OnAppearingAnimationBegin">
            <summary>
            Called when the popup is starting to appear
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupBase.OnAppearingAnimationEnd">
            <summary>
            Called when the popup has appeared
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupBase.OnDisappearingAnimationBegin">
            <summary>
            Called when the popup is starting to disappear
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupBase.OnDisappearingAnimationEnd">
            <summary>
            Called when the popup has disappeared
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupBase.Push">
            <summary>
            Obsolete.  Use PushAsync instead
            </summary>
            <returns>The push.</returns>
        </member>
        <member name="M:Forms9Patch.PopupBase.PushAsync">
            <summary>
            Push the popup asynchronously
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PopupBase.Pop(System.Object)">
            <summary>
            Pops the popup
            </summary>
            <param name="trigger"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PopupBase.PopAsync(System.Object,System.String,System.Action)">
            <summary>
            Called to Pop a popup
            </summary>
            <param name="trigger"></param>
            <param name="callerName"></param>
            <param name="lastAction"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PopupBase.OnPropertyChanged(System.String)">
            <param name="propertyName">The name of the property that changed.</param>
            <summary>
            Call this method from a child class to notify that a change happened on a property.
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupBase.Update">
            <summary>
            For internal use only!
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupBase.HardForceLayout">
            <summary>
            I really mean it this time!
            </summary>
        </member>
        <member name="T:Forms9Patch.TargetedMenu">
            <summary>
            Forms9Patch.TargetedMenu class 
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.SelectedSegmentProperty">
            <summary>
            SelectedSegment BindableProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.SelectedSegment">
            <summary>
            Returns the currently selected segment
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.Segments">
            <summary>
            The container for the Segmented Control's buttons.
            </summary>
            <value>The buttons.</value>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.OrientationProperty">
            <summary>
            Key for Orientaton of menu
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.Orientation">
            <summary>
            Orienation of menu
            </summary>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.FontSizeProperty">
            <summary>
            backing store for FontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.FontSize">
            <summary>
            Gets/Sets the FontSize property
            </summary>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.TextColorProperty">
            <summary>
            backing store for FontColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.TextColor">
            <summary>
            Gets/Sets the FontColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.SeparatorColorProperty">
            <summary>
            backing store for SeparatorColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.SeparatorColor">
            <summary>
            Gets/Sets the SeparatorColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.SeparatorThicknessProperty">
            <summary>
            backing store for SeparatorWidth property
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.SeparatorThickness">
            <summary>
            Gets/Sets the SeparatorWidth property
            </summary>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.HapticEffectProperty">
            <summary>
            backing store for HapticEffect property
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.HapticEffect">
            <summary>
            Gets/Sets the HapticEffect property
            </summary>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.HapticEffectModeProperty">
            <summary>
            backing store for HapticEffectMode property
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.HapticEffectMode">
            <summary>
            Gets/Sets the HapticEffectMode property
            </summary>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.SoundEffectProperty">
            <summary>
            The backing store for the sound effect property.
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.SoundEffect">
            <summary>
            Gets or sets the sound effect played when a menu item is tapped.
            </summary>
            <value>The sound effect.</value>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.SoundEffectModeProperty">
            <summary>
            The backing store for the sound effect mode property.
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.SoundEffectMode">
            <summary>
            Gets or sets if the sound effect is played when a menu item is tapped
            </summary>
            <value>The sound effect mode.</value>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.IconFontFamilyProperty">
            <summary>
            Key for Icon Font Family property
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.IconFontFamily">
            <summary>
            Icon Font Familiy property
            </summary>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.IconFontSizeProperty">
            <summary>
            Backing store for TargetedMenu IconFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.IconFontSize">
            <summary>
            controls value of .IconFontSize property
            </summary>
        </member>
        <member name="F:Forms9Patch.TargetedMenu.FontFamilyProperty">
            <summary>
            Key for FontFamily property
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedMenu.FontFamily">
            <summary>
            Font Family property
            </summary>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.Create(Xamarin.Forms.VisualElement,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates, populates and presents a TargetedMenu
            </summary>
            <param name="target">VisualElement to target</param>
            <param name="htmlTexts">List of text for menu items (with optional HTML markup)</param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.Create(Xamarin.Forms.VisualElement,Xamarin.Forms.Point,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates, populates and presents a TargetedMenu at a Point
            </summary>
            <param name="target"></param>
            <param name="point"></param>
            <param name="htmlTexts"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.CreateVertical(Xamarin.Forms.VisualElement,System.Collections.Generic.List{System.String})">
            <summary>
            Creates a vertical Targeted Menu.
            </summary>
            <returns>The vertical.</returns>
            <param name="target">Target.</param>
            <param name="htmlTexts">Html texts.</param>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.CreateVertical(Xamarin.Forms.VisualElement,Xamarin.Forms.Point,System.Collections.Generic.List{System.String})">
            <summary>
            Create the specified target menu, at a point.
            </summary>
            <returns>The create.</returns>
            <param name="target">Target.</param>
            <param name="point">Point.</param>
            <param name="htmlTexts">Html texts.</param>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.#ctor(Xamarin.Forms.VisualElement)">
            <summary>
            Constructor for TargetedMenu
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.#ctor(Xamarin.Forms.VisualElement,Xamarin.Forms.Point)">
            <summary>
            Constructor for TargetedMenu at a Point
            </summary>
            <param name="target"></param>
            <param name="point"></param>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.Dispose(System.Boolean)">
            <summary>
            Instance is being disposed
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.OnPropertyChanging(System.String)">
            <summary>
            Invoked when property will be changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.OnPropertyChanged(System.String)">
            <summary>
            A property changed.  Let's deal with it.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="E:Forms9Patch.TargetedMenu.SegmentTapped">
            <summary>
            Event fired with a menu item (segment) has been tapped
            </summary>
        </member>
        <member name="M:Forms9Patch.TargetedMenu.OnAppearingAnimationEnd">
            <summary>
            Called when appearing animation has ended
            </summary>
        </member>
        <member name="T:Forms9Patch.TargetedToast">
            <summary>
            A simple toast that points to an element
            </summary>
        </member>
        <member name="M:Forms9Patch.TargetedToast.Create(Xamarin.Forms.VisualElement,System.String,System.String,System.TimeSpan)">
            <summary>
            Create a toast, pointing at the specified target, with title, text, and optional timeout (popAfter)
            </summary>
            <param name="target"></param>
            <param name="title"></param>
            <param name="text"></param>
            <param name="popAfter"></param>
            <returns></returns>
        </member>
        <member name="F:Forms9Patch.TargetedToast.TitleProperty">
            <summary>
            The title property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedToast.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Forms9Patch.TargetedToast.TextProperty">
            <summary>
            The text property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedToast.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="F:Forms9Patch.TargetedToast.TextColorProperty">
            <summary>
            The text color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedToast.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="F:Forms9Patch.TargetedToast.OkTextProperty">
            <summary>
            The ok text property.
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedToast.OkText">
            <summary>
            Gets or sets the ok text.
            </summary>
            <value>The ok text.</value>
        </member>
        <member name="F:Forms9Patch.TargetedToast.OkButtonColorProperty">
            <summary>
            The ok button color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedToast.OkButtonColor">
            <summary>
            Gets or sets the color of the ok button.
            </summary>
            <value>The color of the ok button.</value>
        </member>
        <member name="F:Forms9Patch.TargetedToast.OkTextColorProperty">
            <summary>
            The ok text color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.TargetedToast.OkTextColor">
            <summary>
            Gets or sets the color of the ok text.
            </summary>
            <value>The color of the ok text.</value>
        </member>
        <member name="M:Forms9Patch.TargetedToast.#ctor(Xamarin.Forms.VisualElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.TargetedToast"/> class.
            </summary>
            <param name="target">Target.</param>
        </member>
        <member name="M:Forms9Patch.TargetedToast.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.TargetedToast.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.Toast">
            <summary>
            Toast Popup: Plain and simple
            </summary>
        </member>
        <member name="M:Forms9Patch.Toast.Create(System.String,System.String,System.TimeSpan)">
            <summary>
            Create the specified title and text.
            </summary>
            <param name="title"></param>
            <param name="text"></param>
            <param name="popAfter">Will dissappear after popAfter TimeSpan</param>
            <returns></returns>
        </member>
        <member name="F:Forms9Patch.Toast.TitleProperty">
            <summary>
            The title property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.Toast.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="F:Forms9Patch.Toast.TextProperty">
            <summary>
            The text property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.Toast.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="F:Forms9Patch.Toast.TextColorProperty">
            <summary>
            The text color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Toast.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="E:Forms9Patch.Toast.ActionTagTapped">
            <summary>
            Occurs when HtmlText wrapped with an action (&lt;a&gt;) tag is tapped.
            </summary>
        </member>
        <member name="M:Forms9Patch.Toast.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.Toast"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.Toast.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.Toast.OnPropertyChanged(System.String)">
            <summary>
            Ons the property changed.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.LabelFit">
            <summary>
            OBSOLETE: USE AutoFit
            </summary>
        </member>
        <member name="T:Forms9Patch.AutoFit">
            <summary>
            Label fit options.
            </summary>
        </member>
        <member name="F:Forms9Patch.AutoFit.None">
            <summary>
            Perform no auto fit
            </summary>
        </member>
        <member name="F:Forms9Patch.AutoFit.Width">
            <summary>
            Shrink font from FontSize until MinFontSize to what is required to make the text fit within Lines
            </summary>
        </member>
        <member name="F:Forms9Patch.AutoFit.Lines">
            <summary>
            Scale font until Lines of text will fill imposed height (either by RequestHeight or parent view) of label.
            </summary>
        </member>
        <member name="T:Forms9Patch.EffectMode">
            <summary>
            Will a sound effect play?
            </summary>
        </member>
        <member name="F:Forms9Patch.EffectMode.Off">
            <summary>
            Will not play
            </summary>
        </member>
        <member name="F:Forms9Patch.EffectMode.Default">
            <summary>
            Will play depending on the Forms9Patch setting
            </summary>
        </member>
        <member name="F:Forms9Patch.EffectMode.On">
            <summary>
            Will play
            </summary>
        </member>
        <member name="T:Forms9Patch.ElementShape">
            <summary>
            Shape of Forms9Patch Image, Button, or Layout element
            </summary>
        </member>
        <member name="F:Forms9Patch.ElementShape.Rectangle">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:Forms9Patch.ElementShape.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:Forms9Patch.ElementShape.Circle">
            <summary>
            Circle
            </summary>
        </member>
        <member name="F:Forms9Patch.ElementShape.Elliptical">
            <summary>
            Ellipse
            </summary>
        </member>
        <member name="F:Forms9Patch.ElementShape.Obround">
            <summary>
            Obround (rectangle with circular ends)
            </summary>
        </member>
        <member name="T:Forms9Patch.ExtendedElementShape">
            <summary>
            For Forms9Patch internal use.  Good luck!
            </summary>
        </member>
        <member name="T:Forms9Patch.Fill">
            <summary>
            Forms9Patch Aspect mode for Image
            </summary>
        </member>
        <member name="F:Forms9Patch.Fill.AspectFit">
            <summary>
            Scale the image to fit the view. Some parts may be left empty (letter boxing).
            </summary>
        </member>
        <member name="F:Forms9Patch.Fill.AspectFill">
            <summary>
            Scale the image to fill the view. Some parts may be clipped in order to fill the view.
            </summary>
        </member>
        <member name="F:Forms9Patch.Fill.Fill">
            <summary>
            	Scale the image so it exactly fill the view. Scaling may not be uniform in X and Y.
            </summary>
        </member>
        <member name="F:Forms9Patch.Fill.Tile">
            <summary>
            Tile the unscaled image within the view's boundaries.  
            </summary>
        </member>
        <member name="T:Forms9Patch.FlyoutAlignment">
            <summary>
            Determines where a FlyoutPopup will appear relative to the axis of its Orientation
            </summary>
        </member>
        <member name="F:Forms9Patch.FlyoutAlignment.Start">
            <summary>
            FlyoutPopup will appear at the Start of its axis of Orientation
            </summary>
        </member>
        <member name="F:Forms9Patch.FlyoutAlignment.End">
            <summary>
            FlyoutPopup will appear at the End of its axis of Orientation
            </summary>
        </member>
        <member name="T:Forms9Patch.GroupToggleBehavior">
            <summary>
            What happens when a segment is selected
            </summary>
        </member>
        <member name="F:Forms9Patch.GroupToggleBehavior.None">
            <summary>
            No buttons are Toggle
            </summary>
        </member>
        <member name="F:Forms9Patch.GroupToggleBehavior.Radio">
            <summary>
            Only one button can be in the selected state
            </summary>
        </member>
        <member name="F:Forms9Patch.GroupToggleBehavior.Multiselect">
            <summary>
            None, any or all the buttons can be in the selected state
            </summary>
        </member>
        <member name="T:Forms9Patch.GroupToggleBehaviorExtensions">
            <summary>
            Extensions to Forms9Patch.GroupToggleBehavior
            </summary>
        </member>
        <member name="M:Forms9Patch.GroupToggleBehaviorExtensions.ToXfSelectionMode(Forms9Patch.GroupToggleBehavior)">
            <summary>
            Converts a Forms9Patch.GroupToggleBehavior to a Xamarin.Forms.SelectionMode
            </summary>
            <param name="behavior"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.HapticEffect">
            <summary>
            Haptic effect used if haptics is enabled
            </summary>
        </member>
        <member name="F:Forms9Patch.HapticEffect.Selection">
            <summary>
            Use this feedback generator for a selection actively changing such as picking an item from a list.
            </summary>
        </member>
        <member name="F:Forms9Patch.HapticEffect.LightImpact">
            <summary>
            A collision between small, light user interface elements.
            </summary>
        </member>
        <member name="F:Forms9Patch.HapticEffect.MediumImpact">
            <summary>
            A collision between moderately sized user interface elements.
            </summary>
        </member>
        <member name="F:Forms9Patch.HapticEffect.HeavyImpact">
            <summary>
            A collision between big, heavy user interface elements.
            </summary>
        </member>
        <member name="F:Forms9Patch.HapticEffect.SuccessNotification">
            <summary>
            A notification feedback type, indicating that a task has completed successfully.
            </summary>
        </member>
        <member name="F:Forms9Patch.HapticEffect.WarningNotification">
            <summary>
            A notification feedback type, indicating that a task has produced a warning.
            </summary>
        </member>
        <member name="F:Forms9Patch.HapticEffect.ErrorNotification">
            <summary>
            A notification feedback type, indicating that a task has failed.
            </summary>
        </member>
        <member name="F:Forms9Patch.HapticEffect.None">
            <summary>
            I'll just sit here quietly.
            </summary>
        </member>
        <member name="T:Forms9Patch.KeyClicks">
            <summary>
            The different haptic modes
            </summary>
        </member>
        <member name="F:Forms9Patch.KeyClicks.Off">
            <summary>
            No haptic response
            </summary>
        </member>
        <member name="F:Forms9Patch.KeyClicks.Default">
            <summary>
            The system default haptic, if detectable (which it is not on iOS)
            </summary>
        </member>
        <member name="F:Forms9Patch.KeyClicks.Audio">
            <summary>
            GIVE ME TOUCH SOUNDS!
            </summary>
        </member>
        <member name="F:Forms9Patch.KeyClicks.Haptic">
            <summary>
            GIVE ME TOUCH Haptic Feedback!
            </summary>
        </member>
        <member name="F:Forms9Patch.KeyClicks.AudioHaptic">
            <summary>
            Both audio and haptic
            </summary>
        </member>
        <member name="T:Forms9Patch.PermissionState">
            <summary>
            State of permission popup permission process
            </summary>
        </member>
        <member name="F:Forms9Patch.PermissionState.Pending">
            <summary>
            Waiting for interaction with permission popup
            </summary>
        </member>
        <member name="F:Forms9Patch.PermissionState.Ok">
            <summary>
            Permission was granted
            </summary>
        </member>
        <member name="F:Forms9Patch.PermissionState.Cancelled">
            <summary>
            Permission popup was cancelled
            </summary>
        </member>
        <member name="F:Forms9Patch.PermissionState.Rejected">
            <summary>
            Permission was rejected
            </summary>
        </member>
        <member name="T:Forms9Patch.PointerDirection">
            <summary>
            BubblePopup Pointer direction.
            </summary>
        </member>
        <member name="F:Forms9Patch.PointerDirection.None">
            <summary>
            No pointer
            </summary>
        </member>
        <member name="F:Forms9Patch.PointerDirection.Left">
            <summary>
            BubblePopup pointer points up
            </summary>
        </member>
        <member name="F:Forms9Patch.PointerDirection.Up">
            <summary>
            BubblePopup pointer points down.
            </summary>
        </member>
        <member name="F:Forms9Patch.PointerDirection.Right">
            <summary>
            BubblePopup pointer points left.
            </summary>
        </member>
        <member name="F:Forms9Patch.PointerDirection.Down">
            <summary>
            BubblePopup pointer points right.
            </summary>
        </member>
        <member name="F:Forms9Patch.PointerDirection.Any">
            <summary>
            BubblePopup pointer points in what ever direction allow for it to have the most space.
            </summary>
        </member>
        <member name="F:Forms9Patch.PointerDirection.Horizontal">
            <summary>
            BubblePopup pointer points either right or left, depending on which affords the most space.
            </summary>
        </member>
        <member name="F:Forms9Patch.PointerDirection.Vertical">
            <summary>
            BubblePopup pointer points either up or down, depending on which affords the most space.
            </summary>
        </member>
        <member name="T:Forms9Patch.PopupPoppedCause">
            <summary>
            Causes for Forms9Patch popup being popped
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupPoppedCause.BackgroundTouch">
            <summary>
            popup's background was touched
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupPoppedCause.HardwareBackButtonPressed">
            <summary>
            Devices [back] button was pressed
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupPoppedCause.IsVisiblePropertySet">
            <summary>
            popups IsVisible property was set to false
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupPoppedCause.MethodCalled">
            <summary>
            A method (passed via trigger property) was called that popped the popup
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupPoppedCause.Timeout">
            <summary>
            The popup timed out
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupPoppedCause.ButtonTapped">
            <summary>
            One of the popup's pre-packaged buttons was tapped
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupPoppedCause.SegmentTapped">
            <summary>
            One of the popup's pre-packaged segments was tapped
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupPoppedCause.Custom">
            <summary>
            User supplied trigger was given to the popup's CancelAsync method
            </summary>
        </member>
        <member name="F:Forms9Patch.PopupPoppedCause.Disposed">
            <summary>
            The popup was disposed
            </summary>
        </member>
        <member name="T:Forms9Patch.SoundEffect">
            <summary>
            System Sound Effects
            </summary>
        </member>
        <member name="F:Forms9Patch.SoundEffect.KeyClick">
            <summary>
            Give the system keyclick response
            </summary>
        </member>
        <member name="F:Forms9Patch.SoundEffect.Return">
            <summary>
            Give the system return key response
            </summary>
        </member>
        <member name="F:Forms9Patch.SoundEffect.Delete">
            <summary>
            Give the system delete key response
            </summary>
        </member>
        <member name="F:Forms9Patch.SoundEffect.None">
            <summary>
            I'll just sit here quietly.
            </summary>
        </member>
        <member name="T:Forms9Patch.PopupPoppedEventArgs">
            <summary>
            Event arguments passed by Popped event and DelayUntilPoppedAsyc() method in Forms9Patch popups.
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupPoppedEventArgs.Cause">
            <summary>
            What was the cause of the Popup being popped?
            </summary>
        </member>
        <member name="P:Forms9Patch.PopupPoppedEventArgs.Trigger">
            <summary>
            What object triggered the popup being popped
            </summary>
        </member>
        <member name="M:Forms9Patch.PopupPoppedEventArgs.#ctor(Forms9Patch.PopupPoppedCause,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="cause"></param>
            <param name="trigger"></param>
        </member>
        <member name="T:Forms9Patch.SegmentedControlEventArgs">
            <summary>
            Segment tapped event arguments.
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControlEventArgs.Index">
            <summary>
            The index of the tapped segment.
            </summary>
        </member>
        <member name="F:Forms9Patch.SegmentedControlEventArgs.Segment">
            <summary>
            The segment that was tapped
            </summary>
        </member>
        <member name="M:Forms9Patch.SegmentedControlEventArgs.#ctor(System.Int32,Forms9Patch.Segment)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SegmentedControlEventArgs"/> class.
            </summary>
            <param name="index">Index.</param>
            <param name="segment">Segment.</param>
        </member>
        <member name="T:Forms9Patch.SegmentedControlEventHandler">
            <summary>
            Segment tapped event handler.
            </summary>
        </member>
        <member name="T:Forms9Patch.ApplicationExtensions">
            <summary>
            Application extensions.
            </summary>
        </member>
        <member name="M:Forms9Patch.ApplicationExtensions.GetXamarinFormsApplicationAssembly">
            <summary>
            Gets the xamarin forms application assembly.
            </summary>
            <returns>The xamarin forms application assembly.</returns>
        </member>
        <member name="T:Forms9Patch.AspectExtension">
            <summary>
            Forms9Patch Aspect extension.
            </summary>
        </member>
        <member name="M:Forms9Patch.AspectExtension.ToF9pFill(Xamarin.Forms.Aspect)">
            <summary>
            Converts Xamarin.Forms.Aspect to Forms9Patch.Fill
            </summary>
            <returns>The Forms9Patch fill.</returns>
            <param name="aspect">Xamarin.Forms.Aspect</param>
        </member>
        <member name="T:Forms9Patch.ColorExtension">
            <summary>
            Color extension.
            </summary>
        </member>
        <member name="M:Forms9Patch.ColorExtension.RgbHybridBlend(Xamarin.Forms.Color,Xamarin.Forms.Color,System.Double)">
            <summary>
            Interpolates between two colors - keeping the Alpha of the first (unless it's transparent ... then its white with alpha 0);
            </summary>
            <returns>The blend.</returns>
            <param name="c">C.</param>
            <param name="c2">C2.</param>
            <param name="percent">Percent.</param>
        </member>
        <member name="M:Forms9Patch.ColorExtension.RgbaBlend(Xamarin.Forms.Color,Xamarin.Forms.Color,System.Double)">
            <summary>
            Interpolates between two colors
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <param name="percent"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ColorExtension.WithAlpha(Xamarin.Forms.Color,System.Double)">
            <summary>
            Withs the alpha.
            </summary>
            <returns>The alpha.</returns>
            <param name="c">C.</param>
            <param name="alpha">Alpha.</param>
        </member>
        <member name="M:Forms9Patch.ColorExtension.IsDefault(Xamarin.Forms.Color)">
            <summary>
            Tests if the color is one of the default values
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ColorExtension.IsDefaultOrTransparent(Xamarin.Forms.Color)">
            <summary>
            Tests if the color is a default or is transparent
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ByteR(Xamarin.Forms.Color)">
            <summary>
            Returns a Xamarin.Forms.Color's red value in byte form
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ByteG(Xamarin.Forms.Color)">
            <summary>
            Returns a Xamarin.Forms.Color's green value in byte form
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ByteB(Xamarin.Forms.Color)">
            <summary>
            Returns a Xamarin.Forms.Color's blue value in byte form
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ByteA(Xamarin.Forms.Color)">
            <summary>
            Returns a Xamarin.Forms.Color's alpha (opacity) value in byte form
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ToIntRgbColorString(Xamarin.Forms.Color)">
            <summary>
            Returns a string with comma separated, 0-255, integer values for color's RGB
            </summary>
            <returns>The int rgb color string.</returns>
            <param name="color">Color.</param>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ToIntRgbaColorString(Xamarin.Forms.Color)">
            <summary>
            Returns a sring with comma separated, 0-255, integer values for color's RGBA
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ToRgbaColorString(Xamarin.Forms.Color)">
            <summary>
            Returns a string with comma separated, 0-255, integer values for color's RGBA
            </summary>
            <returns>The int rgb color string.</returns>
            <param name="color">Color.</param>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ToHexRgbColorString(Xamarin.Forms.Color)">
            <summary>
            Returns a 3 character hexadecimal string of a color's RGB value
            </summary>
            <returns>The hex rgb color string.</returns>
            <param name="color">Color.</param>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ToHexArgbColorString(Xamarin.Forms.Color)">
            <summary>
            Returns a 4 character hexadecimal string of a color's ARGB value
            </summary>
            <returns>The hex rgb color string.</returns>
            <param name="color">Color.</param>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ToHexRrggbbColorString(Xamarin.Forms.Color)">
            <summary>
            Returns a 6 character hexadecimal string of a color's RRGGBB value
            </summary>
            <returns>The hex rgb color string.</returns>
            <param name="color">Color.</param>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ToHextAarrggbbColorString(Xamarin.Forms.Color)">
            <summary>
            Returns a 8 character hexadecimal string of a color's AARRGGBB value
            </summary>
            <returns>The hex rgb color string.</returns>
            <param name="color">Color.</param>
        </member>
        <member name="M:Forms9Patch.ColorExtension.ToColor(System.String)">
            <summary>
            Takes a color string, typical of an HTML tag's color attribute, and coverts it to a Xamarin.Forms color.
            </summary>
            <returns>The color.</returns>
            <param name="s">the color string</param>
        </member>
        <member name="T:Forms9Patch.ElementExtensions">
            <summary>
            Visual element extensions.
            </summary>
        </member>
        <member name="M:Forms9Patch.ElementExtensions.AncestorOfBaseType``1(Xamarin.Forms.Element)">
            <summary>
            Fine an ancestor of this element of a type that is inherited from T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ElementExtensions.Ancestor``1(Xamarin.Forms.Element)">
            <summary>
            Finds Ancestor element of the given type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ElementExtensions.GetRenderer(Xamarin.Forms.VisualElement)">
            <summary>
            Returns platform renderer for VisualElement (or null)
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ElementExtensions.HasRenderer(Xamarin.Forms.VisualElement)">
            <summary>
            Tests if VisualElement has a Xamarin.Forms platform renderer attached
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.EmbeddedResourceExtensions">
            <summary>
            Embedded Resource extension methods
            </summary>
        </member>
        <member name="M:Forms9Patch.EmbeddedResourceExtensions.FindAssemblyForResource(System.String,System.Reflection.Assembly)">
            <summary>
            Finds the assembly that contains an embedded resource matching the resourceId
            </summary>
            <param name="resourceId"></param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.EmbeddedResourceExtensions.FindAssemblyForMultiResource(System.String,System.Reflection.Assembly)">
            <summary>
            Finds a Forms9Patch 
            </summary>
            <param name="resourceId"></param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.FontExtensions">
            <summary>
            Font extensions.
            </summary>
        </member>
        <member name="M:Forms9Patch.FontExtensions.InMathAlphanumericBlock(System.Int32)">
            <summary>
            Is Int32 char in the Unicode math alphanumeric block.
            </summary>
            <returns><c>true</c>, if math alphanumeric block was ined, <c>false</c> otherwise.</returns>
            <param name="utf32Char">Utf32 char.</param>
        </member>
        <member name="M:Forms9Patch.FontExtensions.LoadedFontFamilies">
            <summary>
            Provides a list of the currently loaded font families (included embedded resources) that are available.
            </summary>
            <returns>The font families.</returns>
        </member>
        <member name="M:Forms9Patch.FontExtensions.LineHeight(Forms9Patch.IFontElement)">
            <summary>
            Height of a line of text for the given font.
            </summary>
            <returns>The height.</returns>
            <param name="element">Element.</param>
        </member>
        <member name="M:Forms9Patch.FontExtensions.LineHeight(Xamarin.Forms.Font)">
            <summary>
            Height of a line of text for the given font.
            </summary>
            <returns>The height.</returns>
            <param name="font">Font.</param>
        </member>
        <member name="M:Forms9Patch.FontExtensions.LineHeight(System.String,System.Double,Xamarin.Forms.FontAttributes)">
            <summary>
            Height of a line of text for the given font.
            </summary>
            <returns>The height.</returns>
            <param name="fontFamily">Font family.</param>
            <param name="fontSize">Font size.</param>
            <param name="fontAttributes">Font attributes.</param>
        </member>
        <member name="M:Forms9Patch.FontExtensions.LineSpace(Forms9Patch.IFontElement)">
            <summary>
            Lines the space.
            </summary>
            <returns>The space.</returns>
            <param name="element">Element.</param>
        </member>
        <member name="M:Forms9Patch.FontExtensions.LineSpace(Xamarin.Forms.Font)">
            <summary>
            Lines the space.
            </summary>
            <returns>The space.</returns>
            <param name="font">Font.</param>
        </member>
        <member name="M:Forms9Patch.FontExtensions.LineSpace(System.String,System.Double,Xamarin.Forms.FontAttributes)">
            <summary>
            Lines the space.
            </summary>
            <returns>The space.</returns>
            <param name="fontFamily">Font family.</param>
            <param name="fontSize">Font size.</param>
            <param name="fontAttributes">Font attributes.</param>
        </member>
        <member name="T:Forms9Patch.ImageSourceExtensions">
            <summary>
            ImageSource extension methods
            </summary>
        </member>
        <member name="M:Forms9Patch.ImageSourceExtensions.SameAs(Xamarin.Forms.ImageSource,Xamarin.Forms.ImageSource)">
            <summary>
            Determins if two ImageSources are the same
            </summary>
            <param name="thisSource"></param>
            <param name="otherSource"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.InternalStringExtensions">
            <summary>
            String extensions.
            </summary>
        </member>
        <member name="T:Forms9Patch.LayoutOptionsExtensions">
            <summary>
            Layout options extensions.
            </summary>
        </member>
        <member name="M:Forms9Patch.LayoutOptionsExtensions.ToTextAlignment(Xamarin.Forms.LayoutOptions)">
            <summary>
            Tos the text alignment.
            </summary>
            <returns>The text alignment.</returns>
            <param name="options">Options.</param>
        </member>
        <member name="M:Forms9Patch.LayoutOptionsExtensions.IsEqualTo(Xamarin.Forms.LayoutOptions,Xamarin.Forms.LayoutOptions)">
            <summary>
            Determines if two LayoutOptinos are the same
            </summary>
            <param name="o1"></param>
            <param name="o2"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.LayoutOptionsExtensions.ToString(Xamarin.Forms.LayoutOptions)">
            <summary>
            Because this should have been done by Xamarin
            </summary>
            <param name="layoutOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.PointerDirectionExtensions">
            <summary>
            Pointer direction extensions.
            </summary>
        </member>
        <member name="M:Forms9Patch.PointerDirectionExtensions.IsVertical(Forms9Patch.PointerDirection)">
            <summary>
            Determines if pointer direction is vertical.
            </summary>
            <returns><c>true</c> if is vertical the specified dir; otherwise, <c>false</c>.</returns>
            <param name="dir">Dir.</param>
        </member>
        <member name="M:Forms9Patch.PointerDirectionExtensions.IsHorizontal(Forms9Patch.PointerDirection)">
            <summary>
            Determines if pointer direction is horizontal.
            </summary>
            <returns><c>true</c> if is horizontal the specified dir; otherwise, <c>false</c>.</returns>
            <param name="dir">Dir.</param>
        </member>
        <member name="M:Forms9Patch.PointerDirectionExtensions.LeftAllowed(Forms9Patch.PointerDirection)">
            <summary>
            Determines if a pointer is allowed to point left.
            </summary>
            <returns><c>true</c>, if allowed was lefted, <c>false</c> otherwise.</returns>
            <param name="dir">Dir.</param>
        </member>
        <member name="M:Forms9Patch.PointerDirectionExtensions.RightAllowed(Forms9Patch.PointerDirection)">
            <summary>
            Determines if a pointer is allowed to point right.
            </summary>
            <returns><c>true</c>, if allowed was righted, <c>false</c> otherwise.</returns>
            <param name="dir">Dir.</param>
        </member>
        <member name="M:Forms9Patch.PointerDirectionExtensions.UpAllowed(Forms9Patch.PointerDirection)">
            <summary>
            Determines if a pointer is allowed to point up.
            </summary>
            <returns><c>true</c>, if allowed was uped, <c>false</c> otherwise.</returns>
            <param name="dir">Dir.</param>
        </member>
        <member name="M:Forms9Patch.PointerDirectionExtensions.DownAllowed(Forms9Patch.PointerDirection)">
            <summary>
            Determines if a pointer is allowed to down.
            </summary>
            <returns><c>true</c>, if allowed was downed, <c>false</c> otherwise.</returns>
            <param name="dir">Dir.</param>
        </member>
        <member name="M:Forms9Patch.PointExtensions.Add(Xamarin.Forms.Point,Xamarin.Forms.Point)">
            <summary>
            Add the specified first and second point.
            </summary>
            <param name="first">First.</param>
            <param name="second">Second.</param>
        </member>
        <member name="M:Forms9Patch.PointExtensions.Subtract(Xamarin.Forms.Point,Xamarin.Forms.Point)">
            <summary>
            Subtract the specified first and second point.
            </summary>
            <param name="first">First.</param>
            <param name="second">Second.</param>
        </member>
        <member name="T:Forms9Patch.RectangleExtensions">
            <summary>
            Rectangle extensions.
            </summary>
        </member>
        <member name="M:Forms9Patch.RectangleExtensions.ToString(Xamarin.Forms.Rectangle)">
            <summary>
            Tos the string.
            </summary>
            <returns>The string.</returns>
            <param name="rect">Rect.</param>
        </member>
        <member name="T:Forms9Patch.ScrollViewExtensions">
            <summary>
            Scroll helper extensions
            </summary>
        </member>
        <member name="M:Forms9Patch.ScrollViewExtensions.ScrollToBottomAync(Xamarin.Forms.ScrollView,System.Boolean)">
            <summary>
            Scroll to bottom edge
            </summary>
            <param name="scrollView"></param>
            <param name="animated"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ScrollViewExtensions.ScrollToRightAsync(Xamarin.Forms.ScrollView,System.Boolean)">
            <summary>
            Scroll to right edge
            </summary>
            <param name="scrollView"></param>
            <param name="animated"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ScrollViewExtensions.ScrollToTopAsync(Xamarin.Forms.ScrollView,System.Boolean)">
            <summary>
            Scroll to top edge
            </summary>
            <param name="scrollView"></param>
            <param name="animated"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ScrollViewExtensions.ScrollToLeftAsync(Xamarin.Forms.ScrollView,System.Boolean)">
            <summary>
            Scroll to left edge
            </summary>
            <param name="scrollView"></param>
            <param name="animated"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ScrollViewExtensions.ScrollToEndAsync(Xamarin.Forms.ScrollView,System.Boolean)">
            <summary>
            Scroll to bottom right corner
            </summary>
            <param name="scrollView"></param>
            <param name="animated"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ScrollViewExtensions.ScrollToStartAsync(Xamarin.Forms.ScrollView,System.Boolean)">
            <summary>
            Scroll to top left corner
            </summary>
            <param name="scrollView"></param>
            <param name="animated"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.SkiaColorExtensions">
            <summary>
            Making using Skia just a little easier
            </summary>
        </member>
        <member name="M:Forms9Patch.SkiaColorExtensions.ToSKColor(Xamarin.Forms.Color)">
            <summary>
            Convert Xamarin.Forms.Color to Skai SKColor
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.SKRectExtensions">
            <summary>
            Making using Skia just a little easier
            </summary>
        </member>
        <member name="M:Forms9Patch.SKRectExtensions.X(SkiaSharp.SKRect)">
            <summary>
            Returns X origin (left) or SKRect
            </summary>
            <param name="skRect"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.SKRectExtensions.Y(SkiaSharp.SKRect)">
            <summary>
            Returns Y origin (top) of SKRect
            </summary>
            <param name="skRect"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.SKRectExtensions.MoveTo(SkiaSharp.SKPath,System.Double,System.Double)">
            <summary>
            Enables use of doubles with Skia
            </summary>
            <param name="path"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Forms9Patch.SKRectExtensions.LineTo(SkiaSharp.SKPath,System.Double,System.Double)">
            <summary>
            Enables use of doubles with Skia
            </summary>
            <param name="path"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:Forms9Patch.StringExtensions">
            <summary>
            Forms9Patch String extensions.
            </summary>
        </member>
        <member name="M:Forms9Patch.StringExtensions.IsValidEmail(System.String)">
            <summary>
            Tests if string is a valid email address
            </summary>
            <returns><c>true</c>, if valid email, <c>false</c> otherwise.</returns>
            <param name="strIn">String in.</param>
        </member>
        <member name="M:Forms9Patch.StringExtensions.CompareVersionStrings(System.String,System.String)">
            <summary>
            Determines if two version strings are the same
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.ThicknessExtension">
            <summary>
            Forms9Patch Thickness extension.
            </summary>
        </member>
        <member name="M:Forms9Patch.ThicknessExtension.Description(Xamarin.Forms.Thickness)">
            <summary>
            Description the specified thickness.
            </summary>
            <param name="thickness">Thickness.</param>
        </member>
        <member name="M:Forms9Patch.ThicknessExtension.IsEmpty(Xamarin.Forms.Thickness)">
            <summary>
            Is the Thickness empty?
            </summary>
            <param name="thickness"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.XamarinEssentialsExtensions">
            <summary>
            Extension methods to make using Xamarin.Essentials just a tiny bit easier to use.
            </summary>
        </member>
        <member name="M:Forms9Patch.XamarinEssentialsExtensions.ConfirmOrRequest``1">
            <summary>
            Combine CheckStatusAsync with RequestAsync 
            </summary>
            <typeparam name="TPermission">Xamarin.Essensials.Permissions</typeparam>
            <returns>true if permission granted, otherwise false</returns>
        </member>
        <member name="T:Forms9Patch.FocusMonitor">
            <summary>
            Focus monitor: Helps you keep up with what VisualElement currently has focus
            </summary>
        </member>
        <member name="P:Forms9Patch.FocusMonitor.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.FocusMonitor"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.FocusMonitor.FocusedElement">
            <summary>
            Gets or sets the focused element.
            </summary>
            <value>The focused element.</value>
        </member>
        <member name="E:Forms9Patch.FocusMonitor.FocusedElementChanged">
            <summary>
            Occurs when focused element changed.
            </summary>
        </member>
        <member name="M:Forms9Patch.FocusMonitor.Start(Xamarin.Forms.VisualElement)">
            <summary>
            Starts monitoring a VisualElement and all of its decendants
            </summary>
            <returns>The start.</returns>
            <param name="element">Element.</param>
        </member>
        <member name="M:Forms9Patch.FocusMonitor.Stop(Xamarin.Forms.VisualElement)">
            <summary>
            Stops monitoring a VisualElement and all of its decendants
            </summary>
            <returns>The stop.</returns>
            <param name="element">Element.</param>
        </member>
        <member name="T:Forms9Patch.HardwareKey">
            <summary>
            Hardware key: Defines a key stroke for which to be listened
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.KeyInputProperty">
            <summary>
            Backing store for the KeyInput property 
            </summary>
        </member>
        <member name="P:Forms9Patch.HardwareKey.KeyInput">
            <summary>
            A case sensitive string representing the key pressed.  
            </summary>
            <value>The input.</value>
        </member>
        <member name="F:Forms9Patch.HardwareKey.ModifierKeysProperty">
            <summary>
            Backing store for the ModifierKeys property
            </summary>
        </member>
        <member name="P:Forms9Patch.HardwareKey.ModifierKeys">
            <summary>
            Flags representing which (if any) modifier keys occompany the pressed key
            </summary>
            <value>The modifier keys.</value>
        </member>
        <member name="F:Forms9Patch.HardwareKey.DiscoverableTitleProperty">
            <summary>
            Backing store for the DiscoverableTitle property
            </summary>
        </member>
        <member name="P:Forms9Patch.HardwareKey.DiscoverableTitle">
            <summary>
            The text shown, during a modifier key long press, indicating that this key is one that is available with this key press
            </summary>
            <value>The discoverable title.</value>
        </member>
        <member name="M:Forms9Patch.HardwareKey.#ctor(System.String,Forms9Patch.HardwareKeyModifierKeys,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.HardwareKey"/> class.
            </summary>
            <param name="keyInput">KeyInput.</param>
            <param name="modifierKeys">Modifier keys.</param>
            <param name="discoverableTitle">Discoverable title.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKey.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.HardwareKey"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.HardwareKey"/>.</returns>
        </member>
        <member name="F:Forms9Patch.HardwareKey.UpArrowKeyInput">
            <summary>
            Up arrow key HardwareKey.KeyInput
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.DownArrowKeyInput">
            <summary>
            Down arrow key HardwareKey.KeyInput
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.LeftArrowKeyInput">
            <summary>
            Left arrow key HardwareKey.KeyInput
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.RightArrowKeyInput">
            <summary>
            Right arrow key HardwareKey.KeyInput
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.EscapeKeyInput">
            <summary>
            Escape key HardwareKey.KeyInput
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.BackspaceDeleteKeyInput">
            <summary>
            The backspace delete key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.ForwardDeleteKeyInput">
            <summary>
            The forward delete key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.ClearKeyInput">
            <summary>
            The clear key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.InsertKeyInput">
            <summary>
            The insert key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.TabKeyInput">
            <summary>
            The tab key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.EnterReturnKeyInput">
            <summary>
            The enter return key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.PageUpKeyInput">
            <summary>
            The page up key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.PageDownKeyInput">
            <summary>
            The page down key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.HomeKeyInput">
            <summary>
            The home key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.EndKeyInput">
            <summary>
            The end key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F1KeyInput">
            <summary>
            The f1 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F2KeyInput">
            <summary>
            The f2 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F3KeyInput">
            <summary>
            The f3 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F4KeyInput">
            <summary>
            The f4 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F5KeyInput">
            <summary>
            The f5 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F6KeyInput">
            <summary>
            The f6 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F7KeyInput">
            <summary>
            The f7 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F8KeyInput">
            <summary>
            The f8 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F9KeyInput">
            <summary>
            The f9 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F10KeyInput">
            <summary>
            The f10 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F11KeyInput">
            <summary>
            The f11 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKey.F12KeyInput">
            <summary>
            The f12 key HardwareKey.KeyInput.
            </summary>
        </member>
        <member name="M:Forms9Patch.HardwareKey.op_Equality(Forms9Patch.HardwareKey,Forms9Patch.HardwareKey)">
            <summary>
            Determines whether a specified instance of <see cref="T:Forms9Patch.HardwareKey"/> is equal to another
            specified <see cref="T:Forms9Patch.HardwareKey"/>.
            </summary>
            <param name="a">The first <see cref="T:Forms9Patch.HardwareKey"/> to compare.</param>
            <param name="b">The second <see cref="T:Forms9Patch.HardwareKey"/> to compare.</param>
            <returns><c>true</c> if <c>a</c> and <c>b</c> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Forms9Patch.HardwareKey.op_Inequality(Forms9Patch.HardwareKey,Forms9Patch.HardwareKey)">
            <summary>
            Determines whether a specified instance of <see cref="T:Forms9Patch.HardwareKey"/> is not equal to another
            specified <see cref="T:Forms9Patch.HardwareKey"/>.
            </summary>
            <param name="a">The first <see cref="T:Forms9Patch.HardwareKey"/> to compare.</param>
            <param name="b">The second <see cref="T:Forms9Patch.HardwareKey"/> to compare.</param>
            <returns><c>true</c> if <c>a</c> and <c>b</c> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Forms9Patch.HardwareKey.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Forms9Patch.HardwareKey"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Forms9Patch.HardwareKey"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current
            <see cref="T:Forms9Patch.HardwareKey"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Forms9Patch.HardwareKey.Equals(Forms9Patch.HardwareKey)">
            <summary>
            Determines whether the specified <see cref="T:Forms9Patch.HardwareKey"/> is equal to the current <see cref="T:Forms9Patch.HardwareKey"/>.
            </summary>
            <param name="other">The <see cref="T:Forms9Patch.HardwareKey"/> to compare with the current <see cref="T:Forms9Patch.HardwareKey"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:Forms9Patch.HardwareKey"/> is equal to the current
            <see cref="T:Forms9Patch.HardwareKey"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Forms9Patch.HardwareKey.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:Forms9Patch.HardwareKey"/> object.
            </summary>
            <returns>A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a
            hash table.</returns>
        </member>
        <member name="T:Forms9Patch.HardwareKeyEventArgs">
            <summary>
            Hardware key event arguments.
            </summary>
        </member>
        <member name="P:Forms9Patch.HardwareKeyEventArgs.HardwareKey">
            <summary>
            Gets the hardware key that was pressed
            </summary>
            <value>The hardware key.</value>
        </member>
        <member name="P:Forms9Patch.HardwareKeyEventArgs.VisualElement">
            <summary>
            Gets the visual element that is listening for this hardware key press event
            </summary>
            <value>The visual element.</value>
        </member>
        <member name="M:Forms9Patch.HardwareKeyEventArgs.#ctor(Forms9Patch.HardwareKey,Xamarin.Forms.VisualElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.HardwareKeyEventArgs"/> class.
            </summary>
            <param name="hardwareKey">Hardware key.</param>
            <param name="visualElement">Visual element.</param>
        </member>
        <member name="T:Forms9Patch.HardwareKeyListener">
            <summary>
            Hardware key listener: Configures what key stroke to listen for and what to do when it's heard.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyListener.HardwareKeyProperty">
            <summary>
            Backing store for the HardwareKey property.
            </summary>
        </member>
        <member name="P:Forms9Patch.HardwareKeyListener.HardwareKey">
            <summary>
            Gets or sets the hardware key for which to be listened.
            </summary>
            <value>The hardware key.</value>
        </member>
        <member name="F:Forms9Patch.HardwareKeyListener.CommandProperty">
            <summary>
            Backing store for the Command property
            </summary>
        </member>
        <member name="P:Forms9Patch.HardwareKeyListener.Command">
            <summary>
            Gets or sets the command to be invoked when the HardwareKey is pressed
            </summary>
            <value>The command.</value>
        </member>
        <member name="F:Forms9Patch.HardwareKeyListener.CommandParameterProperty">
            <summary>
            The CommandParameter backing store
            </summary>
        </member>
        <member name="P:Forms9Patch.HardwareKeyListener.CommandParameter">
            <summary>
            Gets or sets the command parameter  sent with the command that is invoked when the key is pressed.
            </summary>
            <value>The command parameter.</value>
        </member>
        <member name="F:Forms9Patch.HardwareKeyListener.Pressed">
            <summary>
            The event that is triggered when this hardware key is pressed.
            </summary>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListener.#ctor(Forms9Patch.HardwareKey,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.HardwareKeyListener"/> class.
            </summary>
            <param name="hardwareKey">Hardware key.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListener.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.HardwareKeyListener"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.HardwareKeyListener"/>.</returns>
        </member>
        <member name="T:Forms9Patch.HardwareKeyListenerEffect">
            <summary>
            Enabled StepSize control of Xamarin.Forms.Slider element
            </summary>
        </member>
        <member name="T:Forms9Patch.HardwareKeyListenerExtensions">
            <summary>
            Making it easier to manage HardwareKeyListeners
            </summary>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.GetHardwareKeyListeners(Xamarin.Forms.View)">
            <summary>
            Gets the collection of hardware key listeners for this Xamarin.Forms.View
            </summary>
            <returns>The hardware key listeners.</returns>
            <param name="view">Xamarin.Forms.View.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.GetHardwareKeyListeners(Forms9Patch.HardwareKeyPage)">
            <summary>
            Gets the collection of hardware key listeners for this ContentPage
            </summary>
            <returns>The hardware key listeners.</returns>
            <param name="page">Forms9Patch.HardwareKeyPage.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.GetHardwareKeyListeners(Forms9Patch.PopupBase)">
            <summary>
            Gets the collection of hardware key listeners for this ContentPage
            </summary>
            <returns>The hardware key listeners.</returns>
            <param name="page">Forms9Patch.HardwareKeyPage.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.ClearHardwareKeyListeners(Xamarin.Forms.VisualElement)">
            <summary>
            Clears the hardware key listeners for this visualElemnt.
            </summary>
            <param name="visualElement">Visual element.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.ClearHardwareKeyListeners(Xamarin.Forms.View)">
            <summary>
            Clears the hardware key listeners for this View.
            </summary>
            <param name="view">View.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.ClearHardwareKeyListeners(Forms9Patch.HardwareKeyPage)">
            <summary>
            Clears the hardware key listeners for this HardwareKeyPage.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.ClearHardwareKeyListeners(Forms9Patch.PopupBase)">
            <summary>
            Clears the hardware key listeners for this HardwareKeyPage.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Xamarin.Forms.View,System.String,Forms9Patch.HardwareKeyModifierKeys,System.String,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Adds the hardware key listener to a View.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="view">View.</param>
            <param name="keyInput">Key input.</param>
            <param name="hardwareKeyModifierKeys">Hardware key modifier keys.</param>
            <param name="discoverableTitle">Discoverable title.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Xamarin.Forms.View,System.String,Forms9Patch.HardwareKeyModifierKeys,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Adds the hardware key listener to a View.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="view">View.</param>
            <param name="keyInput">Key input.</param>
            <param name="hardwareKeyModifierKeys">Hardware key modifier keys.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Xamarin.Forms.View,System.String,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Adds the hardware key listener to a View.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="view">View.</param>
            <param name="keyInput">Key input.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Xamarin.Forms.View,System.String)">
            <summary>
            Adds the hardware key listener to a View.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="view">View.</param>
            <param name="keyInput">Key input.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.HardwareKeyPage,System.String,Forms9Patch.HardwareKeyModifierKeys,System.String,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Adds a hardware key listener to a HardwareKeyPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Page.</param>
            <param name="keyInput">Key input.</param>
            <param name="hardwareKeyModifierKeys">Hardware key modifier keys.</param>
            <param name="discoverableTitle">Discoverable title.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.HardwareKeyPage,System.String,Forms9Patch.HardwareKeyModifierKeys,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Adds a hardware key listener to a HardwareKeyPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Page.</param>
            <param name="keyInput">Key input.</param>
            <param name="hardwareKeyModifierKeys">Hardware key modifier keys.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.HardwareKeyPage,System.String,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Adds a hardware key listener to a HardwareKeyPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Page.</param>
            <param name="keyInput">Key input.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.HardwareKeyPage,System.String)">
            <summary>
            Adds a hardware key listener to HardwareKeyPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Page.</param>
            <param name="keyInput">Key input.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.PopupBase,System.String,Forms9Patch.HardwareKeyModifierKeys,System.String,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Adds a hardware key listener to a HardwareKeyPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Page.</param>
            <param name="keyInput">Key input.</param>
            <param name="hardwareKeyModifierKeys">Hardware key modifier keys.</param>
            <param name="discoverableTitle">Discoverable title.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.PopupBase,System.String,Forms9Patch.HardwareKeyModifierKeys,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Adds a hardware key listener to a HardwareKeyPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Page.</param>
            <param name="keyInput">Key input.</param>
            <param name="hardwareKeyModifierKeys">Hardware key modifier keys.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.PopupBase,System.String,System.EventHandler{Forms9Patch.HardwareKeyEventArgs})">
            <summary>
            Adds a hardware key listener to a HardwareKeyPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Page.</param>
            <param name="keyInput">Key input.</param>
            <param name="onPressed">On pressed.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.PopupBase,System.String)">
            <summary>
            Adds a hardware key listener to HardwareKeyPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Page.</param>
            <param name="keyInput">Key input.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Xamarin.Forms.View,Forms9Patch.HardwareKeyListener)">
            <summary>
            Adds a hardware key listener to this Xamarin.Forms.View.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="view">Xamarin.Forms.View.</param>
            <param name="hardwareKeyListener">Hardware key listener.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.HardwareKeyPage,Forms9Patch.HardwareKeyListener)">
            <summary>
            Adds a hardware key listener to this ContentPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Forms9Patch.HardwareKeyPage.</param>
            <param name="hardwareKeyListener">Hardware key listener.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.AddHardwareKeyListener(Forms9Patch.PopupBase,Forms9Patch.HardwareKeyListener)">
            <summary>
            Adds a hardware key listener to this ContentPage.
            </summary>
            <returns>The hardware key listener.</returns>
            <param name="page">Forms9Patch.HardwareKeyPage.</param>
            <param name="hardwareKeyListener">Hardware key listener.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.RemoveHardwareKeyListener(Xamarin.Forms.View,System.String,Forms9Patch.HardwareKeyModifierKeys)">
            <summary>
            Matches a hardware key listener and, if found, removes it from this Xamarin.Forms.View.
            </summary>
            <param name="view">Xamarin.Forms.View.</param>
            <param name="keyInput">Key Label.</param>
            <param name="hardwareKeyModifierKeys">Hardware key modifier keys.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.RemoveHardwareKeyListener(Forms9Patch.HardwareKeyPage,System.String,Forms9Patch.HardwareKeyModifierKeys)">
            <summary>
            Matches a hardware key listener and, if found, removes it from this ContentPage.
            </summary>
            <param name="page">Forms9Patch.HardwareKeyPage.</param>
            <param name="keyInput">Key Label.</param>
            <param name="hardwareKeyModifierKeys">Hardware key modifier keys.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.RemoveHardwareKeyListener(Forms9Patch.PopupBase,System.String,Forms9Patch.HardwareKeyModifierKeys)">
            <summary>
            Matches a hardware key listener and, if found, removes it from this ContentPage.
            </summary>
            <param name="page">Forms9Patch.HardwareKeyPage.</param>
            <param name="keyInput">Key Label.</param>
            <param name="hardwareKeyModifierKeys">Hardware key modifier keys.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.RemoveHardwareKeyListener(Xamarin.Forms.View,Forms9Patch.HardwareKeyListener)">
            <summary>
            Removes a hardware key listener from this ContentPage.
            </summary>
            <param name="view">View.</param>
            <param name="listener">Listener.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.RemoveHardwareKeyListener(Forms9Patch.HardwareKeyPage,Forms9Patch.HardwareKeyListener)">
            <summary>
            Removes a hardware key listener from this Xamarin.Forms.View.
            </summary>
            <param name="page">Forms9Patch.HardwareKeyPage.</param>
            <param name="listener">Listener.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.RemoveHardwareKeyListener(Forms9Patch.PopupBase,Forms9Patch.HardwareKeyListener)">
            <summary>
            Removes a hardware key listener from this Xamarin.Forms.View.
            </summary>
            <param name="page">Forms9Patch.HardwareKeyPage.</param>
            <param name="listener">Listener.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.HardwareKeyFocus(Xamarin.Forms.View)">
            <summary>
            Sets the HardwareKeyFocus to this view.
            </summary>
            <param name="view">View.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.HardwareKeyFocus(Forms9Patch.HardwareKeyPage)">
            <summary>
            Sets the HardwareKeyFocus to this page.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.HardwareKeyFocus(Forms9Patch.PopupBase)">
            <summary>
            Sets the HardwareKeyFocus to this page.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="M:Forms9Patch.HardwareKeyListenerExtensions.HardwareKeyUnfocus(Xamarin.Forms.VisualElement)">
            <summary>
            Removes the hardware key focus from this VisualElement
            </summary>
            <param name="visualElement">Visual element.</param>
        </member>
        <member name="T:Forms9Patch.HardwareKeyModifierKeys">
            <summary>
            Hardware key modifier keys.
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyModifierKeys.None">
            <summary>
            No modifier keys (default)
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyModifierKeys.CapsLock">
            <summary>
            The caps lock [Caps] is on when the hardware key was pressed
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyModifierKeys.Shift">
            <summary>
            The shift key was pressed at the same time the hardware key was pressed
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyModifierKeys.Control">
            <summary>
            The control [Ctrl] key was pressed at the same time the hardware key was pressed
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyModifierKeys.Alternate">
            <summary>
            The alternate (traditional [Alt] or Apple [option]) key was pressed at the same time the hardware key was pressed
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyModifierKeys.PlatformKey">
            <summary>
            The platform key (Windows menu [⊞] or Apple [⌘ command])
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyModifierKeys.NumericPadKey">
            <summary>
            Did the key press come from a key on the numberic key pad?
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyModifierKeys.FunctionKey">
            <summary>
            Was the key press occompanied by the function [fn] key?
            </summary>
        </member>
        <member name="F:Forms9Patch.HardwareKeyModifierKeys.Any">
            <summary>
            Match any modifier key combination
            </summary>
        </member>
        <member name="T:Forms9Patch.HardwareKeyPage">
            <summary>
            Required to enable Hardware Key Listening capability
            </summary>
        </member>
        <member name="P:Forms9Patch.HardwareKeyPage.FocusedElement">
            <summary>
            Gets or sets the currently focused element - the element who'sHardwareKeyListeners are currently active
            </summary>
            <value>The focused element.</value>
        </member>
        <member name="P:Forms9Patch.HardwareKeyPage.DefaultFocusedElement">
            <summary>
            Gets or sets the default focused element - the element who's HardwareKeyListeners are active if no element has focus 
            </summary>
            <value>The default focused element.</value>
        </member>
        <member name="E:Forms9Patch.HardwareKeyPage.FocusedElementChanged">
            <summary>
            Event called when the HardwareKay.FocusedElement has changed
            </summary>
        </member>
        <member name="M:Forms9Patch.HardwareKeyPage.OnAppearing">
            <summary>
            Called when the HardwareKeyPage appears
            </summary>
        </member>
        <member name="M:Forms9Patch.HardwareKeyPage.OnDisappearing">
            <summary>
            Called when the HardwareKeyPage disappers
            </summary>
        </member>
        <member name="T:Forms9Patch.Analytics">
            <summary>
            Interface to allow Forms9Patch events to be shared with an analytics provider used by the host application
            </summary>
        </member>
        <member name="T:Forms9Patch.Analytics.TrackEventDelegate">
            <summary>
            Delegate definition for publishing a Forms9Patch analytics event to an application's analytics provider
            </summary>
            <param name="eventName"></param>
            <param name="properties"></param>
        </member>
        <member name="T:Forms9Patch.Analytics.TrackExceptionDelegate">
            <summary>
            Delegate definition for publishing a Forms9Patch exception to an application's analytics provider
            </summary>
            <param name="e"></param>
            <param name="properties"></param>
        </member>
        <member name="P:Forms9Patch.Analytics.TrackEvent">
            <summary>
            Property for the TrackEvent delegate.  Used for publishing a Forms9Patch analytics event to an application's analytics provider
            </summary>
        </member>
        <member name="P:Forms9Patch.Analytics.TrackException">
            <summary>
            Property for the TrackException delegate.  Used for publishing a Forms9Patch exception to an application's analytics provider
            </summary>
        </member>
        <member name="T:Forms9Patch.IApplicationInfoService">
            <summary>
            Application info service.
            </summary>
        </member>
        <member name="P:Forms9Patch.IApplicationInfoService.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Forms9Patch.IApplicationInfoService.Build">
            <summary>
            Gets the build.
            </summary>
            <value>The build.</value>
        </member>
        <member name="P:Forms9Patch.IApplicationInfoService.Identifier">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Forms9Patch.IApplicationInfoService.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Forms9Patch.IApplicationInfoService.Fingerprint">
            <summary>
            Gets the fingerprint.
            </summary>
            <value>The fingerprint.</value>
        </member>
        <member name="T:Forms9Patch.Interfaces.IAudioService">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:Forms9Patch.Interfaces.IAudioService.PlaySoundEffect(Forms9Patch.SoundEffect,Forms9Patch.EffectMode)">
            <summary>
            Internal use only
            </summary>
            <param name="sound"></param>
            <param name="mode"></param>
        </member>
        <member name="T:Forms9Patch.Interfaces.IHapticsService">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:Forms9Patch.Interfaces.IHapticsService.Feedback(Forms9Patch.HapticEffect,Forms9Patch.EffectMode)">
            <summary>
            Internal use only
            </summary>
            <param name="effect"></param>
            <param name="mode"></param>
        </member>
        <member name="T:Forms9Patch.IBackground">
            <summary>
            Interface for Forms9Patch elements with background features
            </summary>
        </member>
        <member name="P:Forms9Patch.IBackground.BackgroundImage">
            <summary>
            Gets or Sets the Background Image
            </summary>
        </member>
        <member name="T:Forms9Patch.IButton">
            <summary>
            Interface for Forms9Patch button elements
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.SelectedTextColor">
            <summary>
            Gets/Sets color of text when button is selected
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.SelectedBackgroundColor">
            <summary>
            Gets/Sets background color used when button is selected
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.Command">
            <summary>
            Gets/Sets ICommand invoked when button is clicked
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.CommandParameter">
            <summary>
            Gets/Sets command parameter used when Command is invoked
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.ToggleBehavior">
            <summary>
            Gets/Sets if button stays in selected or unselected state with one click and requires a second click to return
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.IsEnabled">
            <summary>
            Gets/Sets if the button is enabled
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.IsSelected">
            <summary>
            Gets/Sets if the button is selected
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.HapticEffect">
            <summary>
            Get/Sets the haptic effect to be performed when button is clicked
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.HapticEffectMode">
            <summary>
            Gets/Sets the haptic mode used to determine if a HapticEffect will occur when button is clicked
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.SoundEffect">
            <summary>
            Get/Sets the sound effect to be performed when button is clicked
            </summary>
        </member>
        <member name="P:Forms9Patch.IButton.SoundEffectMode">
            <summary>
            Gets/Sets the sound mode used to determine if a SoundEffect  will occur when button is clicked
            </summary>
        </member>
        <member name="T:Forms9Patch.IButtonState">
            <summary>
            Interface for the state of a button
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.IconImage">
            <summary>
            gets/sets Forms9Patch.Image used for the button's icon
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.IconText">
            <summary>
            gets/sets HtmlText used to create the button's icon
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.TrailingIcon">
            <summary>
            controls if the button's icon is before or after the button's text
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.TintIcon">
            <summary>
            controls if the button's icon is tinted to match the button's TextColor
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.IconColor">
            <summary>
            Overrides the icon color as provided by the Button's TextColor (if TintIcon=true), the default TextColor (if IconText != null), or the IconImage colors
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.IconFontFamily">
            <summary>
            Gets or sets the font family for the IconText
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.IconFontSize">
            <summary>
            Overrides the default icon font size (the button's FontSize).
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.HasTightSpacing">
            <summary>
            controls if the button's icon will be justified to the edge of the button (false) or to be next to the button's text (true)
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.Spacing">
            <summary>
            controls the pixels between the button's icon and text (if HasTightSpacing is true)
            </summary>
        </member>
        <member name="P:Forms9Patch.IButtonState.Orientation">
            <summary>
            controls if the button's text and icon are arranged horizontally or vertically
            </summary>
        </member>
        <member name="T:Forms9Patch.IElement">
            <summary>
            The foundation of Forms9Patch visual elements
            </summary>
        </member>
        <member name="P:Forms9Patch.IElement.InstanceId">
            <summary>
            Incremental instance id (starting at zero, increasing by one for each new instance)
            </summary>
        </member>
        <member name="T:Forms9Patch.IExtendedShape">
            <summary>
            INTERNAL USE ONLY
            </summary>
        </member>
        <member name="P:Forms9Patch.IExtendedShape.ExtendedElementShape">
            <summary>
            For internal use only.  Goes beyond ElementShape to allow setting of segment shapes
            </summary>
        </member>
        <member name="P:Forms9Patch.IExtendedShape.ExtendedElementShapeOrientation">
            <summary>
            Gets or sets the orientation of the elments outline shape.
            </summary>
            <value>The shape orientation.</value>
        </member>
        <member name="P:Forms9Patch.IExtendedShape.ExtendedElementSeparatorWidth">
            <summary>
            INTERNAL USE ONLY
            </summary>
        </member>
        <member name="T:Forms9Patch.IFontElement">
            <summary>
            Interface for Forms9Patch elements with Fonts.
            </summary>
        </member>
        <member name="P:Forms9Patch.IFontElement.FontAttributes">
            <summary>
            Gets the font attributes.
            </summary>
            <value>The font attributes.</value>
        </member>
        <member name="P:Forms9Patch.IFontElement.FontFamily">
            <summary>
            Gets the font family.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="P:Forms9Patch.IFontElement.FontSize">
            <summary>
            Gets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="T:Forms9Patch.IFontFamilies">
            <summary>
            Font families interface used for backing service.
            </summary>
        </member>
        <member name="M:Forms9Patch.IFontFamilies.FontFamilies">
            <summary>
            primary method in FontFamilies interface.
            </summary>
            <returns>The families.</returns>
        </member>
        <member name="T:Forms9Patch.IFontService">
            <summary>
            Font service.
            </summary>
        </member>
        <member name="M:Forms9Patch.IFontService.LineHeight(System.String,System.Double,Xamarin.Forms.FontAttributes)">
            <summary>
            Lines the height.
            </summary>
            <returns>The height.</returns>
            <param name="fontFamily">Font family.</param>
            <param name="fontSize">Font size.</param>
            <param name="fontAttributes">Font attributes.</param>
        </member>
        <member name="M:Forms9Patch.IFontService.LineSpace(System.String,System.Double,Xamarin.Forms.FontAttributes)">
            <summary>
            Lines the space.
            </summary>
            <returns>The space.</returns>
            <param name="fontFamily">Font family.</param>
            <param name="fontSize">Font size.</param>
            <param name="fontAttributes">Font attributes.</param>
        </member>
        <member name="P:Forms9Patch.IImage.Source">
            <summary>
            
            </summary>
        </member>
        <member name="T:Forms9Patch.IKeyboardService">
            <summary>
            Keyboard service.
            </summary>
        </member>
        <member name="M:Forms9Patch.IKeyboardService.Hide">
            <summary>
            Forces the device's on screen keyboard to be hidden.
            </summary>
        </member>
        <member name="P:Forms9Patch.IKeyboardService.IsHardwareKeyboardActive">
            <summary>
            Gets a value indicating whether the hardware keyboard active.
            </summary>
            <value><c>true</c> if is hardware keyboard active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.IKeyboardService.LanguageRegion">
            <summary>
            Gets the language region.
            </summary>
            <value>The language region.</value>
        </member>
        <member name="P:Forms9Patch.IKeyboardService.Height">
            <summary>
            Gets the current height of the on-screen keyboard
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:Forms9Patch.ILabel">
            <summary>
            Interface for Forms9Patch elements that have labels
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabel.Text">
            <summary>
            Plain text
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabel.HtmlText">
            <summary>
            Alternative Markup text
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabel.FittedFontSize">
            <summary>
            gets the size of the rendered font IF it was changed per AutoFit (-1 if it was not changed)
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabel.SynchronizedFontSize">
            <summary>
            Allows manual override of FontSize and FittedFontSize to allow manual control of rendered font size
            </summary>
        </member>
        <member name="T:Forms9Patch.ILabelStyle">
            <summary>
            Interface for Forms9Patch Label styling
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabelStyle.TextColor">
            <summary>
            Color of label's text
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabelStyle.HorizontalTextAlignment">
            <summary>
            Label's horizontal alignment
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabelStyle.VerticalTextAlignment">
            <summary>
            Labe's vertical alignment
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabelStyle.LineBreakMode">
            <summary>
            Label's line break mode
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabelStyle.AutoFit">
            <summary>
            Label's AutoFit algorithm
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabelStyle.Lines">
            <summary>
            Manual override for number of lines to AutoFit or truncate
            </summary>
        </member>
        <member name="P:Forms9Patch.ILabelStyle.MinFontSize">
            <summary>
            Lower limit of AutoFit font size
            </summary>
        </member>
        <member name="T:Forms9Patch.ILayout">
            <summary>
            Interface for Forms9Patch layout elements
            </summary>
        </member>
        <member name="P:Forms9Patch.ILayout.Padding">
            <summary>
            Padding
            </summary>
        </member>
        <member name="P:Forms9Patch.ILayout.IgnoreChildren">
            <summary>
            Don't relayout layout if child's layout/size changes
            </summary>
        </member>
        <member name="T:Forms9Patch.IMenuItem">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="P:Forms9Patch.IMenuItem.IconImage">
            <summary>
            Image for segment's icon (alternative to IconText)
            </summary>
        </member>
        <member name="P:Forms9Patch.IMenuItem.IconText">
            <summary>
            HtmlText for segment's icon (alternative to IconImage)
            </summary>
        </member>
        <member name="P:Forms9Patch.IMenuItem.Text">
            <summary>
            Segment's text
            </summary>
        </member>
        <member name="P:Forms9Patch.IMenuItem.HtmlText">
            <summary>
            Segment's text with Html markup
            </summary>
        </member>
        <member name="P:Forms9Patch.IMenuItem.IconFontFamily">
            <summary>
            Gets or sets the font family for the IconText
            </summary>
        </member>
        <member name="P:Forms9Patch.IMenuItem.IconFontSize">
            <summary>
            Gets for set the font size for the IconText
            </summary>
        </member>
        <member name="T:Forms9Patch.IPopup">
            <summary>
            Forms9Patch Popup Interface.
            </summary>
        </member>
        <member name="P:Forms9Patch.IPopup.Padding">
            <summary>
            Padding between popup frame and its content
            </summary>
        </member>
        <member name="P:Forms9Patch.IPopup.IsVisible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.IPopup"/> is visible.
            </summary>
            <value><c>true</c> if is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.IPopup.Margin">
            <summary>
            Gets or sets the margin.
            </summary>
            <value>The margin.</value>
        </member>
        <member name="P:Forms9Patch.IPopup.HorizontalOptions">
            <summary>
            Gets or sets the horizontal layout options.
            </summary>
            <value>The horizontal options.</value>
        </member>
        <member name="P:Forms9Patch.IPopup.VerticalOptions">
            <summary>
            Gets or sets the vertical layout options.
            </summary>
            <value>The vertical options.</value>
        </member>
        <member name="P:Forms9Patch.IPopup.Target">
            <summary>
            Gets or sets the target of the popup pointer (if applicable).
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Forms9Patch.IPopup.PageOverlayColor">
            <summary>
            Gets or sets the color of the background page overlay.
            </summary>
            <value>The color of the page overlay.</value>
        </member>
        <member name="P:Forms9Patch.IPopup.CancelOnPageOverlayTouch">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.IPopup"/> will cancel on page overlay touch.
            </summary>
            <value><c>true</c> if cancel on page overlay touch; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.IPopup.CancelOnBackButtonClick">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.IPopup"/> will cancel on a back button touch.
            </summary>
        </member>
        <member name="P:Forms9Patch.IPopup.PopAfter">
            <summary>
            Gets or sets the TimeSpan before 
            </summary>
            <value>The fade at.</value>
        </member>
        <member name="P:Forms9Patch.IPopup.Parameter">
            <summary>
            Object you can set for processing, typically after popup has been acted upon.
            </summary>
        </member>
        <member name="T:Forms9Patch.ISegment">
            <summary>
            Interface for Forms9Patch.Segment elements
            </summary>
        </member>
        <member name="P:Forms9Patch.ISegment.TextColor">
            <summary>
            TextColor
            </summary>
        </member>
        <member name="P:Forms9Patch.ISegment.FontAttributes">
            <summary>
            Segment's label's font attributes
            </summary>
        </member>
        <member name="P:Forms9Patch.ISegment.IsEnabled">
            <summary>
            Is segment enabled?
            </summary>
        </member>
        <member name="P:Forms9Patch.ISegment.IsSelected">
            <summary>
            Is segment selected
            </summary>
        </member>
        <member name="P:Forms9Patch.ISegment.Orientation">
            <summary>
            Orientation of Segemnt's icon to its text
            </summary>
        </member>
        <member name="P:Forms9Patch.ISegment.Command">
            <summary>
            Command to be invoked upon segment being clicked
            </summary>
        </member>
        <member name="P:Forms9Patch.ISegment.CommandParameter">
            <summary>
            Parameter passed with command that is invoked when segment is clicked
            </summary>
        </member>
        <member name="P:Forms9Patch.ISegment.VisualElement">
            <summary>
            Gets the VisualElement used for the Segment
            </summary>
        </member>
        <member name="T:Forms9Patch.ISettings">
            <summary>
            Interface for platform settings
            </summary>
        </member>
        <member name="P:Forms9Patch.ISettings.IncludedAssemblies">
            <summary>
            Needed by UWP implemenation to assure Xamarin.Forms works AND EmbeddedResource loading works
            </summary>
        </member>
        <member name="M:Forms9Patch.ISettings.LazyInit">
            <summary>
            Lazy initializes the Forms9Patch native code for use by Xamarin Previewer
            </summary>
        </member>
        <member name="T:Forms9Patch.IShape">
            <summary>
            Forms9Patch RoundedBox interface
            </summary>
        </member>
        <member name="P:Forms9Patch.IShape.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Forms9Patch.IShape.HasShadow">
            <summary>
            Gets or sets a value indicating whether this instance has shadow.
            </summary>
            <value><c>true</c> if this instance has shadow; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.IShape.ShadowInverted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.IShape"/> shadow is inverted.
            </summary>
            <value><c>true</c> if shadow inverted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.IShape.OutlineColor">
            <summary>
            Gets or sets the color of the outline.
            </summary>
            <value>The color of the outline.</value>
        </member>
        <member name="P:Forms9Patch.IShape.OutlineRadius">
            <summary>
            Gets or sets the outline radius.
            </summary>
            <value>The outline radius.</value>
        </member>
        <member name="P:Forms9Patch.IShape.OutlineWidth">
            <summary>
            Gets or sets the width of the outline.
            </summary>
            <value>The width of the outline.</value>
        </member>
        <member name="P:Forms9Patch.IShape.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Forms9Patch.IShape.BorderRadius">
            <summary>
            Gets or sets the boarder radius.
            </summary>
            <value>The boarder radius.</value>
        </member>
        <member name="P:Forms9Patch.IShape.BorderWidth">
            <summary>
            Gets or sets the width of the boarder.
            </summary>
            <value>The width of the boarder.</value>
        </member>
        <member name="P:Forms9Patch.IShape.ElementShape">
            <summary>
            Gets or sets the geometry of the shape
            </summary>
        </member>
        <member name="T:Forms9Patch.IStatusBarService">
            <summary>
            Status bar service.
            </summary>
        </member>
        <member name="P:Forms9Patch.IStatusBarService.Height">
            <summary>
            Gets the height of the status bar.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Forms9Patch.IStatusBarService.IsVisible">
            <summary>
            Gets a value indicating whether this <see cref="T:Forms9Patch.IStatusBarService"/> is visible.
            </summary>
            <value><c>true</c> if is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Forms9Patch.IText">
            <summary>
            Internal Use ONLY
            </summary>
        </member>
        <member name="P:Forms9Patch.IText.Text">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Forms9Patch.IToPdfService">
            <summary>
            Html to pdf service.
            </summary>
        </member>
        <member name="M:Forms9Patch.IToPdfService.ToPdfAsync(System.String,System.String,Forms9Patch.PageSize,Forms9Patch.PageMargin)">
            <summary>
            Html to PNG interface
            </summary>
            <param name="html">Html text (source)</param>
            <param name="fileName">name of PDF file (without suffix) to be stored in local storage</param>
            <param name="pageSize">Forms9Patch.PageSize for media size of PDF pages.</param>
            <param name="margin">Forms9Patch.PageMargin for margins of PDF pages.</param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.IToPdfService.ToPdfAsync(Xamarin.Forms.WebView,System.String,Forms9Patch.PageSize,Forms9Patch.PageMargin)">
            <summary>
            WebView to PNG interface
            </summary>
            <param name="webView">Xamarin.Forms.WebView (source)</param>
            <param name="fileName">name of PDF file (without suffix) to be stored in local storage</param>
            <param name="pageSize">Forms9Patch.PageSize for media size of PDF pages.</param>
            <param name="margin">Forms9Patch.PageMargin for margins of PDF pages.</param>
            <returns></returns>
        </member>
        <member name="P:Forms9Patch.IToPdfService.IsAvailable">
            <summary>
            Determines if PDF printing is available on this platform;
            </summary>
        </member>
        <member name="T:Forms9Patch.IToPngService">
            <summary>
            Html to pdf service.
            </summary>
        </member>
        <member name="M:Forms9Patch.IToPngService.ToPngAsync(System.String,System.String,System.Int32)">
            <summary>
            Html to PNG interface
            </summary>
            <param name="html">Html text (source)</param>
            <param name="fileName">Name of file (without suffix) for local file storage.</param>
            <param name="width">Width (in pixels) of PNG.  Default is PageSize.Default * 72 * 4;</param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.IToPngService.ToPngAsync(Xamarin.Forms.WebView,System.String,System.Int32)">
            <summary>
            WebView to PNG interface
            </summary>
            <param name="webView">Xamarin.Forms.WebView (source)</param>
            <param name="fileName">Name of file (without suffix) for local file storage.</param>
            <param name="width">Width (in pixels) of PNG.  Default is PageSize.Default * 72 * 4;</param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.IPrintService">
            <summary>
            Print service.
            </summary>
        </member>
        <member name="M:Forms9Patch.IPrintService.PrintAsync(Xamarin.Forms.WebView,System.String)">
            <summary>
            Print the specified webView and jobName.
            </summary>
            <param name="webView">Web view.</param>
            <param name="jobName">Job name.</param>
        </member>
        <member name="M:Forms9Patch.IPrintService.PrintAsync(System.String,System.String)">
            <summary>
            Print the specified HTML with jobName
            </summary>
            <param name="html"></param>
            <param name="jobName"></param>
        </member>
        <member name="M:Forms9Patch.IPrintService.CanPrint">
            <summary>
            Cans the print.
            </summary>
            <returns><c>true</c>, if print was caned, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Forms9Patch.AbsoluteLayout">
            <summary>
            Forms9Patch.AbsoluteLayout
            </summary>
        </member>
        <member name="P:Forms9Patch.AbsoluteLayout.Children">
            <summary>
            Children of AbsoluteLayout
            </summary>
        </member>
        <member name="M:Forms9Patch.AbsoluteLayout.GetLayoutBounds(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the layout bounds of element in AbsoluteLayout
            </summary>
            <returns>The layout bounds.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.AbsoluteLayout.GetLayoutFlags(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the layout flags of element in AbsoluteLayout
            </summary>
            <returns>The layout flags.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.AbsoluteLayout.SetLayoutBounds(Xamarin.Forms.BindableObject,Xamarin.Forms.Rectangle)">
            <summary>
            Sets the layout bounds of element in AbsoluteLayout
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="bounds">Bounds.</param>
        </member>
        <member name="M:Forms9Patch.AbsoluteLayout.SetLayoutFlags(Xamarin.Forms.BindableObject,Xamarin.Forms.AbsoluteLayoutFlags)">
            <summary>
            Sets the layout flags of element in AbsoluteLayout
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="flags">Flags.</param>
        </member>
        <member name="M:Forms9Patch.AbsoluteLayout.On``1">
            <summary>
            Marker interface for returning platform-specific configuration elements.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.BubbleLayout">
            <summary>
            Bubble layout.
            </summary>
        </member>
        <member name="F:Forms9Patch.BubbleLayout.PointerLengthProperty">
            <summary>
            Backing store for pointer length property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubbleLayout.PointerLength">
            <summary>
            Gets or sets the length of the bubble layout's pointer.
            </summary>
            <value>The length of the pointer.</value>
        </member>
        <member name="F:Forms9Patch.BubbleLayout.PointerTipRadiusProperty">
            <summary>
            Backing store for pointer tip radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubbleLayout.PointerTipRadius">
            <summary>
            Gets or sets the radius of the bubble's pointer tip.
            </summary>
            <value>The pointer tip radius.</value>
        </member>
        <member name="F:Forms9Patch.BubbleLayout.PointerAxialPositionProperty">
            <summary>
            Backing store for pointer axial position property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubbleLayout.PointerAxialPosition">
            <summary>
            Gets or sets the position of the bubble's pointer along the face it's on.
            </summary>
            <value>The pointer axial position (left/top is zero).</value>
        </member>
        <member name="F:Forms9Patch.BubbleLayout.PointerDirectionProperty">
            <summary>
            Backing store for pointer direction property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubbleLayout.PointerDirection">
            <summary>
            Gets or sets the direction in which the pointer pointing.
            </summary>
            <value>The pointer direction.</value>
        </member>
        <member name="F:Forms9Patch.BubbleLayout.PointerCornerRadiusProperty">
            <summary>
            The pointer corner radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.BubbleLayout.PointerCornerRadius">
            <summary>
            Gets or sets the pointer corner radius.
            </summary>
            <value>The pointer corner radius.</value>
        </member>
        <member name="M:Forms9Patch.BubbleLayout.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.BubbleLayout"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.BubbleLayout.OnPropertyChanged(System.String)">
            <param name="propertyName">The name of the property that changed.</param>
            <summary>
            Call this method from a child class to notify that a change happened on a property.
            </summary>
        </member>
        <member name="M:Forms9Patch.BubbleLayout.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Shoulds the invalidate on child added.
            </summary>
            <returns><c>true</c>, if invalidate on child added was shoulded, <c>false</c> otherwise.</returns>
            <param name="child">Child.</param>
        </member>
        <member name="M:Forms9Patch.BubbleLayout.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Shoulds the invalidate on child removed.
            </summary>
            <returns><c>true</c>, if invalidate on child removed was shoulded, <c>false</c> otherwise.</returns>
            <param name="child">Child.</param>
        </member>
        <member name="M:Forms9Patch.BubbleLayout.OnChildMeasureInvalidated">
            <summary>
            Ons the child measure invalidated.
            </summary>
        </member>
        <member name="M:Forms9Patch.BubbleLayout.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <param name="x">A value representing the x coordinate of the child region bounding box.</param>
            <param name="y">A value representing the y coordinate of the child region bounding box.</param>
            <param name="width">A value representing the width of the child region bounding box.</param>
            <param name="height">A value representing the height of the child region bounding box.</param>
            <summary>
            Positions and sizes the children of a Layout.
            </summary>
            <remarks>Implementors wishing to change the default behavior of a Layout should override this method. It is suggested to
            still call the base method and modify its calculated results.</remarks>
        </member>
        <member name="T:Forms9Patch.ContentView">
            <summary>
            Forms9Patch ContentView.  
            </summary>
        </member>
        <member name="F:Forms9Patch.ContentView.ContentProperty">
            <summary>
            Backing store key for Content
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.Content">
            <summary>
            Content of Layout
            </summary>
        </member>
        <member name="F:Forms9Patch.ContentView.IgnoreChildrenProperty">
            <summary>
            Backing store for the ignore children property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.IgnoreChildren">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.ContentView"/> ignore children.
            </summary>
            <value><c>true</c> if ignore children; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.BackgroundImageProperty">
            <summary>
            Backing store for the background image property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.LimitMinSizeToBackgroundImageSizeProperty">
            <summary>
            Backing store for the limit minimum size to background image size property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.LimitMinSizeToBackgroundImageSize">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.ContentView"/> will limit its minimum size to
            background image size.
            </summary>
            <value><c>true</c> if limit minimum size to background image size; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.BackgroundColorProperty">
            <summary>
            Backing store for the background color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.HasShadowProperty">
            <summary>
            Backing store for the has shadow property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.HasShadow">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.ContentView"/> has a shadow.
            </summary>
            <value><c>true</c> if has shadow; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.ShadowInvertedProperty">
            <summary>
            Backing store for the shadow inverted property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.ShadowInverted">
            <summary>
            Gets or sets a value indicating whether the shadow is inverted for this <see cref="T:Forms9Patch.ContentView"/>.
            </summary>
            <value><c>true</c> if shadow inverted; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.OutlineColorProperty">
            <summary>
            Backing store for the outline color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.OutlineColor">
            <summary>
            Gets or sets the color of the outline.
            </summary>
            <value>The color of the outline.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.BorderColorProperty">
            <summary>
            The boarder color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.BorderColor">
            <summary>
            Gets or sets the color of the boarder.
            </summary>
            <value>The color of the boarder.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.OutlineRadiusProperty">
            <summary>
            Backing store for the outline radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.OutlineRadius">
            <summary>
            Gets or sets the outline radius.
            </summary>
            <value>The outline radius.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.BorderRadiusProperty">
            <summary>
            The boarder radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.BorderRadius">
            <summary>
            Gets or sets the boarder radius.
            </summary>
            <value>The boarder radius.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.OutlineWidthProperty">
            <summary>
            Backing store for the outline width property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.OutlineWidth">
            <summary>
            Gets or sets the width of the outline.
            </summary>
            <value>The width of the outline.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.BorderWidthProperty">
            <summary>
            The boarder width property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.BorderWidth">
            <summary>
            Gets or sets the width of the boarder.
            </summary>
            <value>The width of the boarder.</value>
        </member>
        <member name="F:Forms9Patch.ContentView.ElementShapeProperty">
            <summary>
            Backing store for the element shape property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.ElementShape">
            <summary>
            Gets or sets the element shape.
            </summary>
            <value>The element shape.</value>
        </member>
        <member name="P:Forms9Patch.ContentView.InstanceId">
            <summary>
            INTERNAL USE ONLY
            </summary>
        </member>
        <member name="F:Forms9Patch.ContentView._f9pId">
            <summary>
            INTERNAL USE ONLY
            </summary>
        </member>
        <member name="F:Forms9Patch.ContentView._fallbackBackgroundImage">
            <summary>
            INTERNAL USE ONLY
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.CurrentBackgroundImage">
            <summary>
            INTERNAL USE ONLY
            </summary>
        </member>
        <member name="P:Forms9Patch.ContentView.BaseInternalChildren">
            <summary>
            INTERNAL USE ONLY
            </summary>
        </member>
        <member name="M:Forms9Patch.ContentView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ContentView"/> class.  Forms9Patch.ContentView is same as Forms9Patch.Frame - but with different default values.
            </summary>
        </member>
        <member name="M:Forms9Patch.ContentView.Dispose(System.Boolean)">
            <summary>
            Dispose the layout and its contents
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.ContentView.Dispose">
            <summary>
            Disposed the layout and its contents
            </summary>
        </member>
        <member name="M:Forms9Patch.ContentView.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Forms9Patch.ContentView.Description">
            <summary>
            Returns a <see cref="T:System.String"/> that describes the current <see cref="T:Forms9Patch.Frame"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that describes the current <see cref="T:Forms9Patch.Frame"/>.</returns>
        </member>
        <member name="M:Forms9Patch.ContentView.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that describes the current <see cref="T:Forms9Patch.Frame"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ContentView.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Shoulds the invalidate on child added.
            </summary>
            <returns><c>true</c>, if invalidate on child added was shoulded, <c>false</c> otherwise.</returns>
            <param name="child">Child.</param>
        </member>
        <member name="M:Forms9Patch.ContentView.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Shoulds the invalidate on child removed.
            </summary>
            <returns><c>true</c>, if invalidate on child removed was shoulded, <c>false</c> otherwise.</returns>
            <param name="child">Child.</param>
        </member>
        <member name="M:Forms9Patch.ContentView.OnChildMeasureInvalidated">
            <summary>
            Ons the child measure invalidated.
            </summary>
        </member>
        <member name="M:Forms9Patch.ContentView.OnSizeRequest(System.Double,System.Double)">
            <summary>
            Called when Xamarin.Forms requests size of this element
            </summary>
            <param name="widthConstraint"></param>
            <param name="heightConstraint"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ContentView.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layout out children of this element
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:Forms9Patch.Frame">
            <summary>
            Forms9Patch Frame layout.
            </summary>
        </member>
        <member name="M:Forms9Patch.Frame.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Forms9Patch.Frame"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.Frame.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:Forms9Patch.Grid">
            <summary>
            Forms9Patch Grid layout.
            </summary>
        </member>
        <member name="F:Forms9Patch.Grid.RowSpacingProperty">
            <summary>
            Backing store for the row spacing property.
            </summary>
        </member>
        <member name="F:Forms9Patch.Grid.ColumnSpacingProperty">
            <summary>
            Backing store for the column spacing property.
            </summary>
        </member>
        <member name="F:Forms9Patch.Grid.ColumnDefinitionsProperty">
            <summary>
            Backing store for the column definitions property.
            </summary>
        </member>
        <member name="F:Forms9Patch.Grid.RowDefinitionsProperty">
            <summary>
            Backing store for the row definitions property.
            </summary>
        </member>
        <member name="P:Forms9Patch.Grid.Children">
            <summary>
            Children of Grid
            </summary>
        </member>
        <member name="P:Forms9Patch.Grid.ColumnDefinitions">
            <summary>
            Gets or sets the column definitions.
            </summary>
            <value>The column definitions.</value>
        </member>
        <member name="P:Forms9Patch.Grid.ColumnSpacing">
            <summary>
            Gets or sets the column spacing.
            </summary>
            <value>The column spacing.</value>
        </member>
        <member name="P:Forms9Patch.Grid.RowDefinitions">
            <summary>
            Gets or sets the row definitions.
            </summary>
            <value>The row definitions.</value>
        </member>
        <member name="P:Forms9Patch.Grid.RowSpacing">
            <summary>
            Gets or sets the row spacing.
            </summary>
            <value>The row spacing.</value>
        </member>
        <member name="M:Forms9Patch.Grid.GetColumn(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the column of element in Grid
            </summary>
            <returns>The column.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.Grid.GetColumnSpan(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the column span of element in Grid
            </summary>
            <returns>The column span.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.Grid.GetRow(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the row of element in Grid
            </summary>
            <returns>The row.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.Grid.GetRowSpan(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the row span of element in Grid
            </summary>
            <returns>The row span.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.Grid.SetColumn(Xamarin.Forms.BindableObject,System.Int32)">
            <summary>
            Sets the column of element in Grid
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.Grid.SetColumnSpan(Xamarin.Forms.BindableObject,System.Int32)">
            <summary>
            Sets the column span of element in Grid
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.Grid.SetRow(Xamarin.Forms.BindableObject,System.Int32)">
            <summary>
            Sets the row of element in Grid
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.Grid.SetRowSpan(Xamarin.Forms.BindableObject,System.Int32)">
            <summary>
            Sets the row span of element in Grid
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.Grid.InvalidateMeasureInernalNonVirtual(Xamarin.Forms.Internals.InvalidationTrigger)">
            <summary>
            Invalidates the measure inernal non virtual.
            </summary>
            <param name="trigger">Trigger.</param>
        </member>
        <member name="M:Forms9Patch.Grid.On``1">
            <summary>
            Marker interface for returning platform-specific configuration elements.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Layout`1">
            <summary>
            Forms9Patch.Layout
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Forms9Patch.Layout`1.OnAdded(`0)">
            <summary>
            Called when added
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:Forms9Patch.Layout`1.OnChildAdded(Xamarin.Forms.Element)">
            <summary>
            Called when child is added
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:Forms9Patch.Layout`1.OnChildRemoved(Xamarin.Forms.Element)">
            <summary>
            Called when child is removed
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:Forms9Patch.Layout`1.OnRemoved(`0)">
            <summary>
            Called when element is removed
            </summary>
            <param name="view"></param>
        </member>
        <member name="T:Forms9Patch.BaseLayout`1">
            <summary>
            Forms9Patch.BaseLayout
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Forms9Patch.BaseLayout`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Forms9Patch.BaseLayout`1._disposed">
            <summary>
            Disposer
            </summary>
        </member>
        <member name="M:Forms9Patch.BaseLayout`1.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Forms9Patch.BaseLayout`1.Children">
            <summary>
            Children of Forms9Patch.BaseLayout
            </summary>
        </member>
        <member name="E:Forms9Patch.BaseLayout`1.LayoutChanged">
            <summary>
            Triggered when layout has changed
            </summary>
        </member>
        <member name="M:Forms9Patch.BaseLayout`1.LowerChild(Xamarin.Forms.View)">
            <summary>
            lowers child in visual stack
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:Forms9Patch.BaseLayout`1.RaiseChild(Xamarin.Forms.View)">
            <summary>
            Raises child in visual stack
            </summary>
            <param name="view"></param>
        </member>
        <member name="T:Forms9Patch.View`1">
            <summary>
            Forms9Patch.View
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Forms9Patch.VisualElement`1">
            <summary>
            Forms9Patch.VisualElement
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Forms9Patch.VisualElement`1.#ctor">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:Forms9Patch.VisualElement`1.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="E:Forms9Patch.VisualElement`1.ChildrenReordered">
            <summary>
            Triggered when children are reordered
            </summary>
        </member>
        <member name="M:Forms9Patch.VisualElement`1.Focus">
            <summary>
            Sets focus upon element
            </summary>
        </member>
        <member name="E:Forms9Patch.VisualElement`1.Focused">
            <summary>
            Triggered when element receives focus
            </summary>
        </member>
        <member name="M:Forms9Patch.VisualElement`1.Unfocus">
            <summary>
            Forces visual element to be unfocused
            </summary>
        </member>
        <member name="E:Forms9Patch.VisualElement`1.Unfocused">
            <summary>
            Triggered when Unfocused
            </summary>
        </member>
        <member name="T:Forms9Patch.Element`1">
            <summary>
            Forms9Patch.Element object
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Forms9Patch.Element`1.Content">
            <summary>
            Obsolete Content Property
            </summary>
        </member>
        <member name="M:Forms9Patch.Element`1.#ctor">
            <summary>
            Forms9Patch.Element
            </summary>
        </member>
        <member name="M:Forms9Patch.Element`1.Dispose(System.Boolean)">
            <summary>
            Disposed the layout and its children
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="E:Forms9Patch.Element`1.ChildAdded">
            <summary>
            Triggered when child is added
            </summary>
        </member>
        <member name="E:Forms9Patch.Element`1.ChildRemoved">
            <summary>
            Triggered when Child is removed
            </summary>
        </member>
        <member name="E:Forms9Patch.Element`1.DescendantAdded">
            <summary>
            Triggered when Descendent is added
            </summary>
        </member>
        <member name="E:Forms9Patch.Element`1.DescendantRemoved">
            <summary>
            Triggered when Descendant is Removed
            </summary>
        </member>
        <member name="M:Forms9Patch.Element`1.Descendants">
            <summary>
            Descendants of layout
            </summary>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.BindableObject`1">
            <summary>
            Forms9Patch.BindableObject
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Forms9Patch.BindableObject`1._xfLayout">
            <summary>
            Base layout
            </summary>
        </member>
        <member name="M:Forms9Patch.BindableObject`1.#ctor">
            <summary>
            Forms9Patch BindableObject
            </summary>
        </member>
        <member name="M:Forms9Patch.BindableObject`1.OnPropertyChanging(System.String)">
            <summary>
            called when property is about to be changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Forms9Patch.BindableObject`1.OnPropertyChanged(System.String)">
            <summary>
            Called when property has changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:Forms9Patch.ManualLayout">
            <summary>
            Manual layout.
            </summary>
        </member>
        <member name="F:Forms9Patch.ManualLayout.IgnoreChildrenProperty">
            <summary>
            The ignore children property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.IgnoreChildren">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forms9Patch.ContentView"/> ignore children.
            </summary>
            <value><c>true</c> if ignore children; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.ManualLayout.BackgroundImageProperty">
            <summary>
            BackgroundImage backing store
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="F:Forms9Patch.ManualLayout.BackgroundColorProperty">
            <summary>
            backing store for BackgroundColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.BackgroundColor">
            <summary>
            Gets/Sets the BackgroundColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.ManualLayout.HasShadowProperty">
            <summary>
            HasShadow property backing store
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.HasShadow">
            <summary>
            Gets/Sets the HasShadow property
            </summary>
        </member>
        <member name="F:Forms9Patch.ManualLayout.ShadowInvertedProperty">
            <summary>
            Backing store for the ShadowInverted bindable property.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Forms9Patch.ManualLayout.ShadowInverted">
            <summary>
            Gets or sets a flag indicating if the layout's shadow is inverted. This is a bindable property.
            </summary>
            <value><c>true</c> if this instance's shadow is inverted; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.ManualLayout.OutlineColorProperty">
            <summary>
            Backing store for the outline color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.OutlineColor">
            <summary>
            Gets or sets the color of the outline.
            </summary>
            <value>The color of the outline.</value>
        </member>
        <member name="F:Forms9Patch.ManualLayout.BorderColorProperty">
            <summary>
            The boarder color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.BorderColor">
            <summary>
            Gets or sets the color of the boarder.
            </summary>
            <value>The color of the boarder.</value>
        </member>
        <member name="F:Forms9Patch.ManualLayout.OutlineRadiusProperty">
            <summary>
            Backing store for the outline radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.OutlineRadius">
            <summary>
            Gets or sets the outline radius.
            </summary>
            <value>The outline radius.</value>
        </member>
        <member name="F:Forms9Patch.ManualLayout.BorderRadiusProperty">
            <summary>
            The boarder radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.BorderRadius">
            <summary>
            Gets or sets the boarder radius.
            </summary>
            <value>The boarder radius.</value>
        </member>
        <member name="F:Forms9Patch.ManualLayout.OutlineWidthProperty">
            <summary>
            Backing store for the outline width property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.OutlineWidth">
            <summary>
            Gets or sets the width of the outline.
            </summary>
            <value>The width of the outline.</value>
        </member>
        <member name="F:Forms9Patch.ManualLayout.BorderWidthProperty">
            <summary>
            The boarder width property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.BorderWidth">
            <summary>
            Gets or sets the width of the boarder.
            </summary>
            <value>The width of the boarder.</value>
        </member>
        <member name="F:Forms9Patch.ManualLayout.ElementShapeProperty">
            <summary>
            Backing store for the ElementShape property
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.ElementShape">
            <summary>
            Gets/sets the geometry of the element
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayout.InstanceId">
            <summary>
            The Instance Id (for debugging purposes)
            </summary>
        </member>
        <member name="M:Forms9Patch.ManualLayout.#ctor">
            <summary>
            Constructor for ManualLayout
            </summary>
        </member>
        <member name="M:Forms9Patch.ManualLayout.Description">
            <summary>
            Returns a <see cref="T:System.String"/> that describes the current <see cref="T:Forms9Patch.ManualLayout"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that describes the current <see cref="T:Forms9Patch.ManualLayout"/>.</returns>
        </member>
        <member name="M:Forms9Patch.ManualLayout.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that describes the current <see cref="T:Forms9Patch.ManualLayout"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Forms9Patch.ManualLayout.LayoutChildrenEvent">
            <summary>
            Occurs when layout children event is triggered.
            </summary>
        </member>
        <member name="M:Forms9Patch.ManualLayout.OnMeasure(System.Double,System.Double)">
            <summary>
            processes measurement of layout
            </summary>
            <param name="widthConstraint"></param>
            <param name="heightConstraint"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ManualLayout.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            processes child layouts
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Forms9Patch.ManualLayout.OnPropertyChanged(System.String)">
            <param name="propertyName">The name of the property that changed.</param>
            <summary>
            Call this method from a child class to notify that a change happened on a property.
            </summary>
        </member>
        <member name="M:Forms9Patch.ManualLayout.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Shoulds the invalidate on child added.
            </summary>
            <returns><c>true</c>, if invalidate on child added was shoulded, <c>false</c> otherwise.</returns>
            <param name="child">Child.</param>
        </member>
        <member name="M:Forms9Patch.ManualLayout.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Shoulds the invalidate on child removed.
            </summary>
            <returns><c>true</c>, if invalidate on child removed was shoulded, <c>false</c> otherwise.</returns>
            <param name="child">Child.</param>
        </member>
        <member name="M:Forms9Patch.ManualLayout.OnChildMeasureInvalidated">
            <summary>
            Ons the child measure invalidated.
            </summary>
        </member>
        <member name="T:Forms9Patch.ManualLayoutEventArgs">
            <summary>
            Manual layout event arguments.
            </summary>
        </member>
        <member name="P:Forms9Patch.ManualLayoutEventArgs.X">
            <summary>
            Gets the x.
            </summary>
            <value>The x.</value>
        </member>
        <member name="P:Forms9Patch.ManualLayoutEventArgs.Y">
            <summary>
            Gets the y.
            </summary>
            <value>The y.</value>
        </member>
        <member name="P:Forms9Patch.ManualLayoutEventArgs.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Forms9Patch.ManualLayoutEventArgs.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="M:Forms9Patch.ManualLayoutEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ManualLayoutEventArgs"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:Forms9Patch.ManualLayoutEventArgs.ToString">
            <summary>
            Formats content for display
            </summary>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.RelativeLayout">
            <summary>
            Forms9Patch RelativeLayout.
            </summary>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.RelativeLayout"/> class.
            </summary>
        </member>
        <member name="P:Forms9Patch.RelativeLayout.Children">
            <summary>
            List of Views that are children of this RelativeLayout.
            </summary>
            <value>The children.</value>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.GetBoundsConstraint(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the bounds constraint of element in RelativeLayout
            </summary>
            <returns>The bounds constraint.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.GetHeightConstraint(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the height constraint of element in RelativeLayout
            </summary>
            <returns>The height constraint.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.GetWidthConstraint(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the width constraint of element in RelativeLayout
            </summary>
            <returns>The width constraint.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.GetXConstraint(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the X constraint of element in RelativeLayout
            </summary>
            <returns>The XC onstraint.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.GetYConstraint(Xamarin.Forms.BindableObject)">
            <summary>
            Gets the Y constraint of element in RelativeLayout
            </summary>
            <returns>The YC onstraint.</returns>
            <param name="bindable">Bindable.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.SetBoundsConstraint(Xamarin.Forms.BindableObject,Xamarin.Forms.BoundsConstraint)">
            <summary>
            Sets the bounds constraint of element in RelativeLayout
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.SetHeightConstraint(Xamarin.Forms.BindableObject,Xamarin.Forms.Constraint)">
            <summary>
            Sets  the height constraint of element in RelativeLayout
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.SetWidthConstraint(Xamarin.Forms.BindableObject,Xamarin.Forms.Constraint)">
            <summary>
            Sets the width constraint of element in RelativeLayout
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.SetXConstraint(Xamarin.Forms.BindableObject,Xamarin.Forms.Constraint)">
            <summary>
            Sets the X constraint of element in RelativeLayout
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.SetYConstraint(Xamarin.Forms.BindableObject,Xamarin.Forms.Constraint)">
            <summary>
            Sets the Y constraint of element in RelativeLayout
            </summary>
            <param name="bindable">Bindable.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Forms9Patch.RelativeLayout.On``1">
            <summary>
            Marker interface for returning platform-specific configuration elements.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.ShapeBase">
            <summary>
            Rounded box base.
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.BackgroundImageProperty">
            <summary>
            Backing store for the BackgroundImage property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.BackgroundColorProperty">
            <summary>
            backing store for BackgroundColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.HasShadowProperty">
            <summary>
            backing store for HasShadow property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.ShadowInvertedProperty">
            <summary>
            backing store for ShadowInverted property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.OutlineColorProperty">
            <summary>
            backing store for OutlineColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.BorderColorProperty">
            <summary>
            Backing store for the BorderColor property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.OutlineRadiusProperty">
            <summary>
            backing store for OutlineRadius property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.BorderRadiusProperty">
            <summary>
            Backing store for the BorderRadius property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.OutlineWidthProperty">
            <summary>
            backing store for OutlineWidth property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.BorderWidthProperty">
            <summary>
            Backing store for the BorderWidth property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.ElementShapeProperty">
            <summary>
            backing store for ExtendedElementShape property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.ExtendedElementShapeOrientationProperty">
            <summary>
            Backing store for ExtendedElementShapeOrientaiton property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.ExtendedElementSeparatorWidthProperty">
            <summary>
            Backind store for the extended element separator width property.
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.ExtendedElementShapeProperty">
            <summary>
            backing store for ExtendedElementShape property
            </summary>
        </member>
        <member name="F:Forms9Patch.ShapeBase.ParentSegmentsOrientationProperty">
            <summary>
            Backing store for the SegmentOrientation of the ExtendedShape's Parent
            </summary>
        </member>
        <member name="T:Forms9Patch.StackLayout">
            <summary>
            Forms9Patch StackLayout.
            </summary>
        </member>
        <member name="F:Forms9Patch.StackLayout.OrientationProperty">
            <summary>
            Backing store for the Orientation property
            </summary>
        </member>
        <member name="F:Forms9Patch.StackLayout.SpacingProperty">
            <summary>
            Backing store for the Spacing property
            </summary>
        </member>
        <member name="P:Forms9Patch.StackLayout.Orientation">
            <summary>
            Gets or sets the orientation of the stack.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:Forms9Patch.StackLayout.Spacing">
            <summary>
            Gets or sets the spacing between children.
            </summary>
            <value>The spacing.</value>
        </member>
        <member name="M:Forms9Patch.StackLayout.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.StackLayout"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.StackLayout.On``1">
            <summary>
            Marker interface for returning platform-specific configuration elements.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.ImageButtonState">
            <summary>
            OBSOLETE: Use ButtonState
            </summary>
        </member>
        <member name="T:Forms9Patch.ButtonState">
            <summary>
            Describes the properties of a <see cref="T:Forms9Patch.StateButton"/> for a given state.
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.ImageProperty">
            <summary>
            OBSOLETE: Use IconImageProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.Image">
            <summary>
            OBSOLETE: Use IconImage
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.FontColorProperty">
            <summary>
            OBSOLETE: Use TextColorProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.FontColor">
            <summary>
            OBSOLETE: Use TextColor
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.IconImageProperty">
            <summary>
            Backing store for the Image bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.IconImage">
            <summary>
            Gets or sets the companion image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.IconTextProperty">
            <summary>
            Backing store for IconText property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.IconText">
            <summary>
            Gets/Sets the IconText (Alternative to IconImage).
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.IconFontFamilyProperty">
            <summary>
            backing store for the IconFontFamily property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.IconFontFamily">
            <summary>
            The font used to render the IconText
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.IconFontSizeProperty">
            <summary>
            Backing store for ButtonState IconFontSize property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.IconFontSize">
            <summary>
            controls value of .IconFontSize property
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.TrailingIconProperty">
            <summary>
            Backing store for the TrailiingImage property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.TrailingIcon">
            <summary>
            Gets or sets if the IconImage / IconText will be before or after the button's text
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.TintIconProperty">
            <summary>
            Backing store for the TintIcon property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.TintIcon">
            <summary>
            Gets or sets if the button's Icon will be tinted with the TextColor
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.IconColorProperty">
            <summary>
            Backing store for ButtonState IconColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.IconColor">
            <summary>
            Overrides this icon color as provided by the Button's TextColor (if TintIcon=true), the default TextColor (if IconText != null), or the IconImage colors
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.HasTightSpacingProperty">
            <summary>
            The has tight spacing property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.HasTightSpacing">
            <summary>
            Gets or sets if the Icon/Image is close (TightSpacing) to text or at edge (not TightSpacing) of button.
            </summary>
            <value><c>true</c> if has tight spacing; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.SpacingProperty">
            <summary>
            Backing store for the spacing property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.Spacing">
            <summary>
            Gets or sets the spacing.
            </summary>
            <value>The spacing.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.OrientationProperty">
            <summary>
            Backing store for the Button's orientation property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.Orientation">
            <summary>
            Gets or sets the orientation of the iamge and label.
            </summary>
            <value>The image and label orientation.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.ElementShapeProperty">
            <summary>
            Backing store for the ElementShape property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.ElementShape">
            <summary>
            controls the shape of a 
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.BackgroundImageProperty">
            <summary>
            Backing store for the BackgroundImage bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.BackgroundColorProperty">
            <summary>
            Backing store for the BackgroundColor bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.HasShadowProperty">
            <summary>
            Backing store for the HasShadow property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.HasShadow">
            <summary>
            Gets and sets if the button casts a shadow
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.ShadowInvertedProperty">
            <summary>
            Backing store for the ShadowInverted bindable property.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Forms9Patch.ButtonState.ShadowInverted">
            <summary>
            Gets or sets a flag indicating if the Frame's shadow is inverted. This is a bindable property.
            </summary>
            <value><c>true</c> if this instance's shadow is inverted; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.OutlineColorProperty">
            <summary>
            Backging store for the OutlineColor property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.OutlineColor">
            <summary>
            Gets/sets the button's outline color
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.BorderColorProperty">
            <summary>
            The border color property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.OutlineRadiusProperty">
            <summary>
            Backing store for the OutlineRadius bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.OutlineRadius">
            <summary>
            Gets or sets the outline radius.
            </summary>
            <value>The outline radius.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.BorderRadiusProperty">
            <summary>
            The border radius property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.BorderRadius">
            <summary>
            Gets or sets the border radius.
            </summary>
            <value>The border radius.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.OutlineWidthProperty">
            <summary>
            Backing store for the OutlineWidth bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.OutlineWidth">
            <summary>
            Gets or sets the width of the outline.
            </summary>
            <value>The width of the outline.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.BorderWidthProperty">
            <summary>
            The border width property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Forms9Patch.ButtonState.InstanceId">
            <summary>
            returns instance index (starts at 0)
            </summary>
        </member>
        <member name="F:Forms9Patch.ButtonState.TextProperty">
            <summary>
            Backing store for the Text bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.HtmlTextProperty">
            <summary>
            The formatted text property backing store.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.HtmlText">
            <summary>
            Gets or sets the formatted text.
            </summary>
            <value>The formatted text.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.TextColorProperty">
            <summary>
            Backing store for the FontColor bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.TextColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.HorizontalTextAlignmentProperty">
            <summary>
            Backing store for the Button.Alignment bindable property
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.HorizontalTextAlignment">
            <summary>
            Gets or sets the alignment of the image and text.
            </summary>
            <value>The alignment (left, center, right).</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.VerticalTextAlignmentProperty">
            <summary>
            Backing store for the vertical alignment property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
            <value>The vertical alignment.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.LineBreakModeProperty">
            <summary>
            The line break mode property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.LineBreakMode">
            <summary>
            Gets or sets the line break mode.
            </summary>
            <value>The line break mode.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.AutoFitProperty">
            <summary>
            The fit property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.AutoFit">
            <summary>
            Gets or sets the fit.
            </summary>
            <value>The fit.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.LinesProperty">
            <summary>
            The lines property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.Lines">
            <summary>
            Gets or sets the lines.
            </summary>
            <value>The lines.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.MinFontSizeProperty">
            <summary>
            The backing store for the minimum font size property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.MinFontSize">
            <summary>
            Gets or sets the minimum size of the font allowed during an autofit. 
            </summary>
            <value>The minimum size of the font.  Default=4</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.FontAttributesProperty">
            <summary>
            Backing store for the FontAttributes bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.FontAttributes">
            <summary>
            Gets or sets the font attributes.
            </summary>
            <value>The font attributes.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.FontSizeProperty">
            <summary>
            Backing store for the FontSize bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="F:Forms9Patch.ButtonState.FontFamilyProperty">
            <summary>
            Backing store for the FontFamiily bindable property.
            </summary>
        </member>
        <member name="P:Forms9Patch.ButtonState.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="M:Forms9Patch.ButtonState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ButtonState"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.ButtonState.#ctor(Forms9Patch.ButtonState)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ButtonState"/> class to the same properties of Source instance.
            </summary>
            <param name="source">Source instance.</param>
        </member>
        <member name="M:Forms9Patch.ButtonState.OnPropertyChanged(System.String)">
            <param name="propertyName">The name of the property that changed.</param>
            <summary>
            Call this method from a child class to notify that a change happened on a property.
            </summary>
        </member>
        <member name="M:Forms9Patch.ButtonState.op_Explicit(Forms9Patch.ButtonState)~System.String">
            <param name="state">State.</param>
        </member>
        <member name="T:Forms9Patch.EmbeddedHtmlViewSource">
            <summary>
            WebSource for EmbeddedResources
            </summary>
        </member>
        <member name="F:Forms9Patch.EmbeddedHtmlViewSource.EmbeddedResourceFolderProperty">
            <summary>
            EmbeddedResourceFolder BindableProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.EmbeddedHtmlViewSource.EmbeddedResourceFolder">
            <summary>
            The portion of the EmbeddedResource path under which lies all content for the WebViewSource
            </summary>
        </member>
        <member name="F:Forms9Patch.EmbeddedHtmlViewSource.HtmlDocEmbeddedResourceIdProperty">
            <summary>
            HtmlDocEmbeddedResourceId BindableProperty
            </summary>
        </member>
        <member name="P:Forms9Patch.EmbeddedHtmlViewSource.HtmlDocEmbeddedResourceId">
            <summary>
            The EmbeddedResourceId of the html document to display
            </summary>
        </member>
        <member name="M:Forms9Patch.EmbeddedHtmlViewSource.Create(System.String,System.String,System.Reflection.Assembly)">
            <summary>
            Primary method of creation
            </summary>
            <param name="embeddedResourceFolder"></param>
            <param name="htmlDocEmbeddedResourceId"></param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.EmbeddedHtmlViewSource.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Forms9Patch.EmbeddedHtmlViewSource.Dispose">
            <summary>
            Disposal
            </summary>
        </member>
        <member name="M:Forms9Patch.EmbeddedHtmlViewSource.Clear(System.String,System.Reflection.Assembly)">
            <summary>
            A way to clear any embedded resource files that have been cached locally.
            </summary>
            <param name="embeddedResourceFolder"></param>
            <param name="assembly"></param>
        </member>
        <member name="M:Forms9Patch.EmbeddedHtmlViewSource.Initialize">
            <summary>
            A way to generate the content of EmbeddedHtmlViewSource
            </summary>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.F9PFormattedString">
            <summary>
            MarkdownLabel Formatted string.
            </summary>
        </member>
        <member name="M:Forms9Patch.F9PFormattedString.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.F9PFormattedString"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Forms9Patch.F9PFormattedString"/>.</returns>
        </member>
        <member name="P:Forms9Patch.F9PFormattedString.Text">
            <summary>
            Gets or sets source text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="M:Forms9Patch.F9PFormattedString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.F9PFormattedString"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.F9PFormattedString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.F9PFormattedString"/> class.
            </summary>
            <param name="s">S.</param>
        </member>
        <member name="M:Forms9Patch.F9PFormattedString.op_Explicit(Forms9Patch.F9PFormattedString)~System.String">
            <param name="formatted">Formatted.</param>
        </member>
        <member name="E:Forms9Patch.F9PFormattedString.PropertyChanged">
            <summary>
            Occurs when property changed.
            </summary>
        </member>
        <member name="M:Forms9Patch.F9PFormattedString.OnPropertyChanged(System.String)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.HTMLMarkupString">
            <summary>
            Forms9Patch HTML markup string.
            </summary>
        </member>
        <member name="M:Forms9Patch.HTMLMarkupString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.HTMLMarkupString"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.HTMLMarkupString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.HTMLMarkupString"/> class.
            </summary>
            <param name="s">S.</param>
        </member>
        <member name="P:Forms9Patch.HTMLMarkupString.UnmarkedText">
            <summary>
            Gets the unmarked text.
            </summary>
            <value>The unmarked text.</value>
        </member>
        <member name="M:Forms9Patch.HTMLMarkupString.OnPropertyChanged(System.String)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="propertyName">Property name.</param>
        </member>
        <member name="T:Forms9Patch.ImageSource">
            <summary>
            Forms9Patch ImageSource.
            </summary>
        </member>
        <member name="M:Forms9Patch.ImageSource.FromSvgText(System.String)">
            <summary>
            Use a SVG string as a image source for a Forms9Patch image
            </summary>
            <param name="svgText"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ImageSource.FromMultiResource(System.String,System.Reflection.Assembly)">
            <summary>
            Cached selection of best fit multi-device / multi-resolution image embedded resource 
            </summary>
            <returns>Xamarin.Forms.ImageSource</returns>
            <param name="resourceId">ResourceID without extension, resolution modifier, or device modifier</param>
            <param name="assembly">Assembly in which the resource can be found</param> 
        </member>
        <member name="M:Forms9Patch.ImageSource.FromResource(System.String,System.Reflection.Assembly)">
            <summary>
            Cached selection of resource (literally - no automated selection of device, resolution, or extension).
            </summary>
            <returns>The resource.</returns>
            <param name="resourceId">Path.</param>
            <param name="assembly">Assembly.</param>
        </member>
        <member name="M:Forms9Patch.ImageSource.FromResourceAsFile(System.String,System.Reflection.Assembly)">
            <summary>
            Load an EmbeddedResource as a Xamarin.Forms.FileImageSource
            </summary>
            <param name="resourceId"></param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.PageMargin">
            <summary>
            Class to specify ths margins (in points) of a PDF page
            </summary>
        </member>
        <member name="P:Forms9Patch.PageMargin.Left">
            <summary>
            Left margin (points)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageMargin.Right">
            <summary>
            Right margin (points)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageMargin.Top">
            <summary>
            Top margin (points)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageMargin.Bottom">
            <summary>
            Bottom margin (points)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageMargin.HorizontalThickness">
            <summary>
            Combined left and right margins (points)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageMargin.VerticalThickness">
            <summary>
            Combined top and bottom margins (points)
            </summary>
        </member>
        <member name="M:Forms9Patch.PageMargin.CreateInInches(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new PageMargin from left, right, top, and bottom dimensions (in inches)
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="top"></param>
            <param name="bottom"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PageMargin.CreateInInches(System.Double,System.Double)">
            <summary>
            Creates a new PageMargin from horizontal and vertical margin dimensions (in inches)
            </summary>
            <param name="horizontal"></param>
            <param name="vertical"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PageMargin.CreateInInches(System.Double)">
            <summary>
            Creates a new PageMargin from uniform margin dimensions (in inches)
            </summary>
            <param name="all"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PageMargin.CreateInMillimeters(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new PageMargin from left, right, top, and bottom dimensions (in millimeters)
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="top"></param>
            <param name="bottom"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PageMargin.CreateInMillimeters(System.Double,System.Double)">
            <summary>
            Creates a new PageMargin from horizontal and vertical margin dimensions (in millimeters)
            </summary>
            <param name="horizontal"></param>
            <param name="vertical"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PageMargin.CreateInMillimeters(System.Double)">
            <summary>
             Creates a new PageMargin from uniform margin dimensions (in millimeters)
            </summary>
            <param name="all"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.PageSize">
            <summary>
            Helper class used to specify media size used in the generation of PDF documents
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Width">
            <summary>
            Page width in points (72 points per inch)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Height">
            <summary>
            Page height in points (72 points per inch)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Name">
            <summary>
            Name of Page Size
            </summary>
        </member>
        <member name="M:Forms9Patch.PageSize.CreateInInches(System.Double,System.Double,System.String)">
            <summary>
            Creates a new PaperSize from length and height dimensions in inches 
            </summary>
            <param name="inchWidth"></param>
            <param name="inchHeight"></param>
            <param name="callerName"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PageSize.CreateInMillimeters(System.Double,System.Double,System.String)">
            <summary>
            Creates a new PaperSize from length and height dimensions in millimeters
            </summary>
            <param name="mmWidth"></param>
            <param name="mmHeight"></param>
            <param name="callerName"></param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.PageSize.AsLandscape">
            <summary>
            Sets the current paper size to landscape orientation
            </summary>
        </member>
        <member name="M:Forms9Patch.PageSize.AsPortrait">
            <summary>
            Sets the current PaperSize to portrait orientation
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Default">
            <summary>
            Default paper size for current region (either Letter or IsoA4);
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA0">
            <summary>
            International Standards Organization A0 (841 mm x 1189 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA1">
            <summary>
            International Standards Organization A1 (594 mm x 841 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA2">
            <summary>
            International Standards Organization A2 (420 mm x 594 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA3">
            <summary>
            International Standards Organization A3 (297 mm x 420 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA4">
            <summary>
            International Standards Organization A4 (210 mm x 297 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA5">
            <summary>
            International Standards Organization A5 (148 mm x 210 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA6">
            <summary>
            International Standards Organization A6 (105 mm x 148 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA7">
            <summary>
            International Standards Organization A7 (74 mm x 105 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA8">
            <summary>
            International Standards Organization A8 (52 mm x 74 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA9">
            <summary>
            International Standards Organization A9 (37 mm x 52 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoA10">
            <summary>
            International Standards Organization A10 (26 mm x 37 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB0">
            <summary>
            International Standards Organization B0 (1000 mm x 1414 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB1">
            <summary>
            International Standards Organization B1 (707 mm x 1000 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB2">
            <summary>
            International Standards Organization B2 (500 mm x 707 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB3">
            <summary>
            International Standards Organization B3 (353 mm x 500 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB4">
            <summary>
            International Standards Organization B4 (250 mm x 353 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB5">
            <summary>
            International Standards Organization B5 (176 mm x 250 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB6">
            <summary>
            International Standards Organization B6 (125 mm x 176 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB7">
            <summary>
            International Standards Organization B7 (88 mm x 125 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB8">
            <summary>
            International Standards Organization B8 (62 mm x 88 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB9">
            <summary>
            International Standards Organization B9 (44 mm x 62 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoB10">
            <summary>
            International Standards Organization B10 (31 mm x 44 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC0">
            <summary>
            International Standards Organization C0 (917 mm x 1297 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC1">
            <summary>
            International Standards Organization C1 (648 mm x 917 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC2">
            <summary>
            International Standards Organization C2 (458 mm x 648 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC3">
            <summary>
            International Standards Organization C3 (324 mm x 458 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC4">
            <summary>
            International Standards Organization C4 (229 mm x 324 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC5">
            <summary>
            International Standards Organization C5 (162 mm x 229 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC6">
            <summary>
            International Standards Organization C6 (114 mm x 162 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC7">
            <summary>
            International Standards Organization C7 (81 mm x 114 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC8">
            <summary>
            International Standards Organization C8 (57 mm x 81 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC9">
            <summary>
            International Standards Organization C9 (40 mm x 57 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.IsoC10">
            <summary>
            International Standards Organization C10 (28 mm x 40 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB0">
            <summary>
            Japanese Industrial Standards B0 (1030 mm x 1456 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB1">
            <summary>
            Japanese Industrial Standards B1 (728 mm x 1030 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB2">
            <summary>
            Japanese Industrial Standards B2 (515 mm x 728 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB3">
            <summary>
            Japanese Industrial Standards B3 (364 mm x 515 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB4">
            <summary>
            Japanese Industrial Standards B4 (257 mm x 364 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB5">
            <summary>
            Japanese Industrial Standards B5 (182 mm x 257 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB6">
            <summary>
            Japanese Industrial Standards B6 (128 mm x 182 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB7">
            <summary>
            Japanese Industrial Standards B7 (91 mm x 128 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB8">
            <summary>
            Japanese Industrial Standards B8 (64 mm x 91 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB9">
            <summary>
            Japanese Industrial Standards B9 (45 mm x 64 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisB10">
            <summary>
            Japanese Industrial Standards B10 (32 mm x 45 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JisExec">
            <summary>
            Japanese Industrial Standards Exec (216 mm x 330 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JpnChou2">
            <summary>
            Japan Chou2 (111.1 mm x 146 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JpnChou3">
            <summary>
            Japan Chou3 (120 mm x 235 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JpnChou4">
            <summary>
            Japan Chou4 (90 mm x 205 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JpnHagaki">
            <summary>
            Japan Hagaki Postcard (100 mm x 148 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JpnKahu">
            <summary>
            Japan Kahu (240 mm x 322.1 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JpnKahu2">
            <summary>
            Japan Kahu2 (240 mm x 332 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JpnOufuku">
            <summary>
            Japan Oufuku (148 mm x 200 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.JpnYou4">
            <summary>
            Japan You 4 (105 mm x 235 mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaLedger">
            <summary>
            North America Ledger media (17" x 11")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaTabloid">
            <summary>
            North America Tabloid media (11" x 17")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaLegal">
            <summary>
            North America Legal media (8.5" x 14")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaLetter">
            <summary>
            North America Letter media (8.5" x 11")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaGovernmentLetter">
            <summary>
            North America Government-Letter media (8.0" x 10.5")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaJuniorLegal">
            <summary>
            North America Junior Legal media (8.0" x 5.0")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaFoolscap">
            <summary>
            North America Foolscap media (8" x 13")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaIndex3x5">
            <summary>
            North America Index Card 3x5 (3" x 5")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaIndex4x6">
            <summary>
            North America Index Card 4x6 (4" x 6")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaIndex5x8">
            <summary>
            North America Index Card 5x8 (5" x 8")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaMonarch">
            <summary>
            North America Monarch (7.25" x 10.5")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaQuarto">
            <summary>
            North America Quarto (8" x 10")
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaEnvelopeNo09">
            <summary>
            North Amerian #9 Envelope
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.NaEnvelopeNo10">
            <summary>
            North America #10 Envelope
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.AnsiA">
            <summary>
            American National Standards Institute: A (11" x 9.5");
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.AnsiB">
            <summary>
            American National Standards Institute: B (17" x 11");
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.AnsiC">
            <summary>
            American National Standards Institute: C (22" x 17");
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.AnsiD">
            <summary>
            American National Standards Institute: D (34" x 22");
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.AnsiE">
            <summary>
            American National Standards Institute: E (44" x 34");
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.OmDaiPaKai">
            <summary>
            Chinese Dai Pa Kai media (275mm x 395mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.OmJuuroKuKai">
            <summary>
            Chinese Jurro Ku Kai media (198mm x 275mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.OmPaKai">
            <summary>
            Chinese Pa Kai media (267mm x 389mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc1">
            <summary>
            Peoples Republic of China 1 (102mm x 165mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc2">
            <summary>
            Peoples Republic of China 2 (102mm x 176mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc3">
            <summary>
            Peoples Republic of China 3 (125mm x 176mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc4">
            <summary>
            Peoples Republic of China 4 (110mm x 208mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc5">
            <summary>
            Peoples Republic of China 5 (110mm x 220mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc6">
            <summary>
            Peoples Republic of China 6 (120mm x 320mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc7">
            <summary>
            Peoples Republic of China 7 (160mm x 230mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc8">
            <summary>
            Peoples Republic of China 8 (120mm x 309mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc9">
            <summary>
            Peoples Republic of China 9 (229mm x 324mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc10">
            <summary>
            Peoples Republic of China 10 (324mm x 458mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Prc16K">
            <summary>
            Peoples Republic of China 16K (146mm x 215mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Roc16K">
            <summary>
            Republic of China 16K (195mm x 270mm)
            </summary>
        </member>
        <member name="P:Forms9Patch.PageSize.Roc8K">
            <summary>
            Republic of China 8K (270mm x 390mm)
            </summary>
        </member>
        <member name="F:Forms9Patch.Range.Start">
            <summary>
            First pixel in stretchable range (the previous pixel will not be stretchable)
            </summary>
        </member>
        <member name="F:Forms9Patch.Range.End">
            <summary>
            Last pixel in stretchable range (the next pixel will not be stretchable)
            </summary>
        </member>
        <member name="M:Forms9Patch.RangeListExtensions.ToRangeLists(Xamarin.Forms.Thickness,System.Int32,System.Int32,Xamarin.Forms.ImageSource,System.Boolean)">
            <summary>
            Converts CapsInsets (non-stretchable insets of image) to Forms9Patch.RangeLists
            </summary>
            <param name="capInsets"></param>
            <param name="bitmapWidth"></param>
            <param name="bitmapHeight"></param>
            <param name="imageSource"></param>
            <param name="ninePatchSource"></param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Settings">
            <summary>
            Forms9Patch Settings (for use by Forms9Patch PCL code).
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ShadowOffset">
            <summary>
            The shadow offset.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ShadowRadius">
            <summary>
            The shadow radius.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ListViewCellSwipePopupMenuWidthRequest">
            <summary>
            WidthRequest for ListView Cell swipe popup menu.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ListViewCellSwipePopupMenuFontSize">
            <summary>
            FontSize for ListView Cell swipe popup menu text.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ListViewCellSwipePopupMenuTextColor">
            <summary>
            Color for ListView Cell swipe popup menu text.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ListViewCellSwipePopupMenuButtonColor">
            <summary>
            Color for background of ListView Cell swipe popup menu buttons.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ListViewCellSwipePopupMenuButtonOutlineColor">
            <summary>
            OutlineColor for background of ListView Cell swipe popup menu buttons.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ListViewCellSwipePopupMenuButtonOutlineWidth">
            <summary>
            OutlineWidth for background of ListView Cell swipe popup menu buttons.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ListViewCellSwipePopupMenuButtonOutlineRadius">
            <summary>
            OutlineRadius for background of ListView Cell swipe popup menu buttons.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.ListViewCellSwipePopupMenuButtonSeparatorWidth">
            <summary>
            SeparatorWidth for background of ListView Cell swipe popup menu buttons.
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.KeyClicks">
            <summary>
            Are haptics active by default?
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.HapticEffectMode">
            <summary>
            Haptic effect to use if HapticEffect = Default;
            </summary>
        </member>
        <member name="F:Forms9Patch.Settings.SoundEffectMode">
            <summary>
            Sound effect to use if SoundEffect = Default;
            </summary>
        </member>
        <member name="T:Forms9Patch.SpanFormattedString">
            <summary>
            Forms9Patch Span formatted string.
            </summary>
        </member>
        <member name="P:Forms9Patch.SpanFormattedString.Spans">
            <summary>
            Gets the collection of spans.
            </summary>
            <value>The spans.</value>
        </member>
        <member name="M:Forms9Patch.SpanFormattedString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SpanFormattedString"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.SpanFormattedString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SpanFormattedString"/> class.
            </summary>
            <param name="s">S.</param>
        </member>
        <member name="M:Forms9Patch.SpanFormattedString.op_Implicit(System.String)~Forms9Patch.SpanFormattedString">
            <param name="text">Text.</param>
        </member>
        <member name="T:Forms9Patch.ToFileResult">
            <summary>
            Result from ToPng and ToPdf processes
            </summary>
        </member>
        <member name="P:Forms9Patch.ToFileResult.IsError">
            <summary>
            Flags if the Result is an error;
            </summary>
        </member>
        <member name="P:Forms9Patch.ToFileResult.Result">
            <summary>
            Either success or error result
            </summary>
        </member>
        <member name="M:Forms9Patch.ToFileResult.#ctor(System.Boolean,System.String)">
            <summary>
            Html to PNG result
            </summary>
            <param name="isError"></param>
            <param name="result"></param>
        </member>
        <member name="T:Forms9Patch.PreserveAttribute">
            <summary>
            Attribute that makes sure classes are preserved by the linker
            </summary>
        </member>
        <member name="T:Forms9Patch.ApplicationInfoService">
            <summary>
            Application infomation service.
            </summary>
        </member>
        <member name="P:Forms9Patch.ApplicationInfoService.Version">
            <summary>
            Gets the version string.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Forms9Patch.ApplicationInfoService.Build">
            <summary>
            Gets the application's build number.
            </summary>
            <value>The build.</value>
        </member>
        <member name="P:Forms9Patch.ApplicationInfoService.Identifier">
            <summary>
            Gets the bundle or package identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Forms9Patch.ApplicationInfoService.Name">
            <summary>
            Gets the applications display name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Forms9Patch.ApplicationInfoService.Fingerprint">
            <summary>
            Gets the fingerprint (valid on Android only).
            </summary>
            <value>The fingerprint.</value>
        </member>
        <member name="P:Forms9Patch.ApplicationInfoService.Assembly">
            <summary>
            Gets the application's assembly.
            </summary>
            <value>The assembly.</value>
        </member>
        <member name="P:Forms9Patch.ApplicationInfoService.CurrentPage">
            <summary>
            Gets the currently displayed page.
            </summary>
            <value>The current page.</value>
        </member>
        <member name="P:Forms9Patch.ApplicationInfoService.NavigationPage">
            <summary>
            Gets the application's navigation page.
            </summary>
            <value>The navigation page.</value>
        </member>
        <member name="M:Forms9Patch.ApplicationInfoService.WaitForMainPage">
            <summary>
            Waits for Xamarin.Forms.Application.MainPAge to be set.
            </summary>
            <returns>The for main page.</returns>
        </member>
        <member name="M:Forms9Patch.ApplicationInfoService.IsPageInNavigationStacks(Xamarin.Forms.Page)">
            <summary>
            Is the page in the current navigation stacks.
            </summary>
            <returns><c>true</c>, if page in navigation stacks was ised, <c>false</c> otherwise.</returns>
            <param name="page">Page.</param>
        </member>
        <member name="T:Forms9Patch.Audio">
            <summary>
            Audio system
            </summary>
        </member>
        <member name="M:Forms9Patch.Audio.PlaySoundEffect(Forms9Patch.SoundEffect,Forms9Patch.EffectMode)">
            <summary>
            Invoke system audio effect
            </summary>
            <param name="sound"></param>
            <param name="mode"></param>
        </member>
        <member name="T:Forms9Patch.Debug">
            <summary>
            Class with helper methods intended to ask for user assistance in debugging application using Forms9Patch
            </summary>
        </member>
        <member name="F:Forms9Patch.Debug.IsRequestUserHelpEnabled">
            <summary>
            Enable ability to email user for help when unusual crash is encountered
            </summary>
        </member>
        <member name="F:Forms9Patch.Debug.RequestUserHelpEmailToAddress">
            <summary>
            Email address to which to send requests
            </summary>
        </member>
        <member name="F:Forms9Patch.Debug.RequestUserHelpMissiveTitle">
            <summary>
            Title of PermissionPopup presented to user where "YES" would send an email asking for help with bug
            </summary>
        </member>
        <member name="F:Forms9Patch.Debug.RequestUserHelpMissiveMessage">
            <summary>
            Body of PermissionPopup presented to user where "YES" would send an email asking for help with bug
            </summary>
        </member>
        <member name="M:Forms9Patch.Debug.RequestUserHelp(System.Exception,System.String,System.String,System.Int32,System.String)">
            <summary>
            Used internally to communicate with user when perplexing exception is triggered;
            </summary>
            <param name="e">Exception thrown that prompted request for help</param>
            <param name="additionalInfo">Any additional info you would like shared with you </param>
            <param name="path">Path to file where this request was called</param>
            <param name="lineNumber">Linenumber of where this request was called</param>
            <param name="methodName">Name of method from which this request was called</param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.Display">
            <summary>
            Provides characteristics of the display in which the app is presented
            </summary>
        </member>
        <member name="P:Forms9Patch.Display.Scale">
            <summary>
            The scale (relative to 160 dpi) of the screen
            </summary>
            <value>screen scale (1x=160dpi)</value>
        </member>
        <member name="P:Forms9Patch.Display.Width">
            <summary>
            The width (pixels) of the screen
            </summary>
            <value>screen width (pixels)</value>
        </member>
        <member name="P:Forms9Patch.Display.Height">
            <summary>
            The hieght (pixels) of the screen
            </summary>
            <value>screen height (pixels)</value>
        </member>
        <member name="P:Forms9Patch.Display.SafeAreaInset">
            <summary>
            Gets or sets the safe area inset (I'm looking at you, iPhone X).
            </summary>
            <value>The safe area inset.</value>
        </member>
        <member name="P:Forms9Patch.Display.StatusBarOffset">
            <summary>
            Gets the status bar offset  - the offset needed for MainPage to be in the right place at app start.
            </summary>
            <value>The status bar offset.</value>
        </member>
        <member name="P:Forms9Patch.Display.Orientation">
            <summary>
            Gets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:Forms9Patch.Display.IsPortrait">
            <summary>
            Gets a value indicating whether this <see cref="T:Forms9Patch.Display"/> is portrait.
            </summary>
            <value><c>true</c> if is portrait; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.Display.IsLandscape">
            <summary>
            Gets a value indicating whether this <see cref="T:Forms9Patch.Display"/> is landscape.
            </summary>
            <value><c>true</c> if is landscape; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Forms9Patch.Haptics">
            <summary>
            Access to device's haptic feedback system
            </summary>
        </member>
        <member name="M:Forms9Patch.Haptics.Feedback(Forms9Patch.HapticEffect,Forms9Patch.EffectMode)">
            <summary>
            Invoke haptic feedback
            </summary>
            <param name="effect"></param>
            <param name="mode"></param>
        </member>
        <member name="T:Forms9Patch.KeyboardService">
            <summary>
            Keyboard service.
            </summary>
        </member>
        <member name="P:Forms9Patch.KeyboardService.Service">
            <summary>
            Initializes the <see cref="T:Forms9Patch.KeyboardService"/> class.
            </summary>
        </member>
        <member name="M:Forms9Patch.KeyboardService.Activate">
            <summary>
            Activates the Keyboard Service (required to monitor software keyboard height)
            </summary>
        </member>
        <member name="M:Forms9Patch.KeyboardService.Hide">
            <summary>
            Forces the device's on screen keyboard to be hidden
            </summary>
        </member>
        <member name="M:Forms9Patch.KeyboardService.OnVisiblityChange(Forms9Patch.KeyboardVisibilityChange)">
            <summary>
            Ons the visiblity change.
            </summary>
            <param name="state">State.</param>
        </member>
        <member name="E:Forms9Patch.KeyboardService.Hidden">
            <summary>
            Occurs when hidden.
            </summary>
        </member>
        <member name="E:Forms9Patch.KeyboardService.Shown">
            <summary>
            Occurs when shown.
            </summary>
        </member>
        <member name="E:Forms9Patch.KeyboardService.HeightChanged">
            <summary>
            Occurs when virtual keyboard height has changed.
            </summary>
        </member>
        <member name="P:Forms9Patch.KeyboardService.IsHardwareKeyboardActive">
            <summary>
            Gets a value indicating whether the hardware keyboard is active.
            </summary>
            <value><c>true</c> if is hardware keyboard active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.KeyboardService.LanguageRegion">
            <summary>
            Gets the Keyboard's language-region.
            </summary>
            <value>The language region.</value>
        </member>
        <member name="P:Forms9Patch.KeyboardService.Height">
            <summary>
            Gets the current height of the on-screen software keyboard
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:Forms9Patch.KeyboardVisibilityChange">
            <summary>
            Keyboard visibility change.
            </summary>
        </member>
        <member name="F:Forms9Patch.KeyboardVisibilityChange.Shown">
            <summary>
            The keyboard will show/has shown.
            </summary>
        </member>
        <member name="F:Forms9Patch.KeyboardVisibilityChange.Hidden">
            <summary>
            The keyboard will hide/has been hidden.
            </summary>
        </member>
        <member name="T:Forms9Patch.OsInfoService">
            <summary>
            Provides information about the operating system in which the app is running
            </summary>
        </member>
        <member name="P:Forms9Patch.OsInfoService.Version">
            <summary>
            Operating system version
            </summary>
        </member>
        <member name="T:Forms9Patch.PrintService">
            <summary>
            Extensions to XF WebView
            </summary>
        </member>
        <member name="M:Forms9Patch.PrintService.Print(Xamarin.Forms.WebView,System.String)">
            <summary>
            OBSOLETE: Use PrintAsync instead
            </summary>
            <param name="webview"></param>
            <param name="jobName"></param>
        </member>
        <member name="M:Forms9Patch.PrintService.PrintAsync(Xamarin.Forms.WebView,System.String)">
            <summary>
            Print the specified webview and jobName.
            </summary>
            <param name="webview">Webview.</param>
            <param name="jobName">Job name.</param>
        </member>
        <member name="M:Forms9Patch.PrintService.Print(System.String,System.String)">
            <summary>
            OBSOLETE: Use PrintAsync instead
            </summary>
            <param name="html"></param>
            <param name="jobName"></param>
        </member>
        <member name="M:Forms9Patch.PrintService.PrintAsync(System.String,System.String)">
            <summary>
            Print HTML string
            </summary>
            <param name="html"></param>
            <param name="jobName"></param>
        </member>
        <member name="P:Forms9Patch.PrintService.CanPrint">
            <summary>
            Gets a value indicating whether this <see cref="T:Forms9Patch.WebViewExtensions"/> can print.
            </summary>
            <value><c>true</c> if can print; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Forms9Patch.StatusBarService.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="T:Forms9Patch.ToPdfService">
            <summary>
            Html string extensions.
            </summary>
        </member>
        <member name="P:Forms9Patch.ToPdfService.IsAvailable">
            <summary>
            Returns true if PDF generation is available on this device
            </summary>
        </member>
        <member name="M:Forms9Patch.ToPdfService.ToPdfAsync(System.String,System.String,Forms9Patch.PageSize,Forms9Patch.PageMargin)">
            <summary>
            Converts HTML text to PNG
            </summary>
            <param name="html">HTML string to be converted to PDF</param>
            <param name="fileName">Name (not path), excluding suffix, of PDF file</param>
            <param name="pageSize">PDF page size, in points. (default based upon user's region)</param>
            <param name="margin">PDF page's margin, in points. (default is zero)</param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ToPdfService.ToPdfAsync(Xamarin.Forms.WebView,System.String,Forms9Patch.PageSize,Forms9Patch.PageMargin)">
            <summary>
            Creates a PNG from the contents of a Xamarin.Forms.WebView
            </summary>
            <param name="webView">Xamarin.Forms.WebView</param>
            <param name="fileName">Name (not path), excluding suffix, of PDF file</param>
            <param name="pageSize">PDF page size, in points. (default based upon user's region)</param>
            <param name="margin">PDF page's margin, in points. (default is zero)</param>
            <returns>Forms9Patch.ToFileResult</returns>
        </member>
        <member name="T:Forms9Patch.ToPngService">
            <summary>
            Html string extensions.
            </summary>
        </member>
        <member name="M:Forms9Patch.ToPngService.ToPng(System.String,System.String,System.Action{System.String})">
            <summary>
            OBSOLETE
            </summary>
            <param name="html"></param>
            <param name="fileName"></param>
            <param name="onComplete"></param>
        </member>
        <member name="M:Forms9Patch.ToPngService.ToPngAsync(System.String,System.String,System.Int32)">
            <summary>
            Converts HTML text to PNG
            </summary>
            <param name="html">HTML string to be converted to PNG</param>
            <param name="fileName">Name (not path), excluding suffix, of PNG file</param>
            <param name="width">Width of resulting PNG (in pixels).</param>
            <returns></returns>
        </member>
        <member name="M:Forms9Patch.ToPngService.ToPngAsync(Xamarin.Forms.WebView,System.String,System.Int32)">
            <summary>
            Creates a PNG from the contents of a Xamarin.Forms.WebView
            </summary>
            <param name="webView">Xamarin.Forms.WebView</param>
            <param name="fileName">Name (not path), excluding suffix, of PNG file</param>
            <param name="width">Width of resulting PNG (in pixels).</param>
            <returns></returns>
        </member>
        <member name="T:Forms9Patch.BackgroundColorSpan">
            <summary>
            Forms9Patch Background color span.
            </summary>
        </member>
        <member name="P:Forms9Patch.BackgroundColorSpan.Color">
            <summary>
            Gets or sets the background color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="M:Forms9Patch.BackgroundColorSpan.#ctor(System.Int32,System.Int32,Xamarin.Forms.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.BackgroundColorSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
            <param name="color">Color.</param>
        </member>
        <member name="M:Forms9Patch.BackgroundColorSpan.#ctor(Forms9Patch.BackgroundColorSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.BackgroundColorSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="T:Forms9Patch.BoldSpan">
            <summary>
            Forms9Patch Bold span.
            </summary>
        </member>
        <member name="M:Forms9Patch.BoldSpan.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.BoldSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
        </member>
        <member name="M:Forms9Patch.BoldSpan.#ctor(Forms9Patch.BoldSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.BoldSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="M:Forms9Patch.DenominatorSpan.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.DenominatorSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
        </member>
        <member name="M:Forms9Patch.DenominatorSpan.#ctor(Forms9Patch.DenominatorSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.DenominatorSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="T:Forms9Patch.FontColorSpan">
            <summary>
            Forms9Patch Font color span.
            </summary>
        </member>
        <member name="P:Forms9Patch.FontColorSpan.Color">
            <summary>
            Gets or sets the font foreground color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="M:Forms9Patch.FontColorSpan.#ctor(System.Int32,System.Int32,Xamarin.Forms.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.FontColorSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
            <param name="color">Color.</param>
        </member>
        <member name="M:Forms9Patch.FontColorSpan.#ctor(Forms9Patch.FontColorSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.FontColorSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="T:Forms9Patch.FontFamilySpan">
            <summary>
            Font family span.
            </summary>
        </member>
        <member name="P:Forms9Patch.FontFamilySpan.FontFamilyName">
            <summary>
            Gets or sets the name of the font family -OR- resource ID or embedded resource font.
            </summary>
            <value>The name of the font family.</value>
        </member>
        <member name="M:Forms9Patch.FontFamilySpan.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.FontFamilySpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
            <param name="fontName">Font name.</param>
        </member>
        <member name="M:Forms9Patch.FontFamilySpan.#ctor(Forms9Patch.FontFamilySpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.FontFamilySpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="T:Forms9Patch.FontSizeSpan">
            <summary>
            Font size span.
            </summary>
        </member>
        <member name="P:Forms9Patch.FontSizeSpan.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="M:Forms9Patch.FontSizeSpan.#ctor(System.Int32,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.FontSizeSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
            <param name="size">Size.</param>
        </member>
        <member name="M:Forms9Patch.FontSizeSpan.#ctor(Forms9Patch.FontSizeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.FontSizeSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="T:Forms9Patch.ItalicsSpan">
            <summary>
            Italics span.
            </summary>
        </member>
        <member name="M:Forms9Patch.ItalicsSpan.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ItalicsSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
        </member>
        <member name="M:Forms9Patch.ItalicsSpan.#ctor(Forms9Patch.ItalicsSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.ItalicsSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="M:Forms9Patch.NumeratorSpan.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.NumeratorSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
        </member>
        <member name="M:Forms9Patch.NumeratorSpan.#ctor(Forms9Patch.NumeratorSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.NumeratorSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="T:Forms9Patch.Span">
            <summary>
            Forms9Patch FormattedString Span
            </summary>
        </member>
        <member name="P:Forms9Patch.Span.Start">
            <summary>
            Gets or sets the span's start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Forms9Patch.Span.End">
            <summary>
            Gets or sets the span's end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Forms9Patch.Span.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.  int.MaxValue to indicate that the span is unterminated (goes to the end of the string)</value>
        </member>
        <member name="M:Forms9Patch.Span.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.Span"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
        </member>
        <member name="E:Forms9Patch.Span.PropertyChanged">
            <summary>
            Occurs when property changed.
            </summary>
        </member>
        <member name="T:Forms9Patch.StrikethroughSpan">
            <summary>
            Forms9Patch Strikethrough span.
            </summary>
        </member>
        <member name="M:Forms9Patch.StrikethroughSpan.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.StrikethroughSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
        </member>
        <member name="M:Forms9Patch.StrikethroughSpan.#ctor(Forms9Patch.StrikethroughSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.StrikethroughSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="T:Forms9Patch.SubscriptSpan">
            <summary>
            Forms9Patch Subscript span.
            </summary>
        </member>
        <member name="M:Forms9Patch.SubscriptSpan.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SubscriptSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
        </member>
        <member name="M:Forms9Patch.SubscriptSpan.#ctor(Forms9Patch.SubscriptSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SubscriptSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="T:Forms9Patch.SuperscriptSpan">
            <summary>
            Forms9Patch Superscript span.
            </summary>
        </member>
        <member name="M:Forms9Patch.SuperscriptSpan.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SuperscriptSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
        </member>
        <member name="M:Forms9Patch.SuperscriptSpan.#ctor(Forms9Patch.SuperscriptSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.SuperscriptSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
        <member name="T:Forms9Patch.UnderlineSpan">
            <summary>
            Forms9Patch Underline span.
            </summary>
        </member>
        <member name="M:Forms9Patch.UnderlineSpan.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.UnderlineSpan"/> class.
            </summary>
            <param name="start">Start.</param>
            <param name="end">End.</param>
        </member>
        <member name="M:Forms9Patch.UnderlineSpan.#ctor(Forms9Patch.UnderlineSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Forms9Patch.UnderlineSpan"/> class.
            </summary>
            <param name="span">Span.</param>
        </member>
    </members>
</doc>
