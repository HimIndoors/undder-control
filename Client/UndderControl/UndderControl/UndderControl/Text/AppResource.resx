<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssessCompareButton" xml:space="preserve">
    <value>COMPARE RESULTS</value>
  </data>
  <data name="AssessPageTitle" xml:space="preserve">
    <value>WHAT IS SELECTIVE DRY COW TREATMENT?</value>
  </data>
  <data name="AssessQuestionButton" xml:space="preserve">
    <value>START QUESTIONS</value>
  </data>
  <data name="AssessSummaryButton" xml:space="preserve">
    <value>SUMMARY OF RESULTS</value>
  </data>
  <data name="AssessText1" xml:space="preserve">
    <value>SDCT is widely regarded best practice during dry off and essential in reducing the use of antibiotics in the dairy industry. MSD Animal Health has provided this tool to assist vets and farmers to assess whether SDCT is right for them and then monitor success after SDCT has been implemented.</value>
  </data>
  <data name="AssessText2" xml:space="preserve">
    <value>Once a farm has been analysed and the process of monitoring has begun, SDCT can help reduce the economic loss from discarded milk, medicine and treatment costs. Farm analysis and monitoring resulting in better management, can reduce the threat of new infection and the associated fatality costs, increased culling costs and reduced yield for
the lactation.</value>
  </data>
  <data name="AssessText3" xml:space="preserve">
    <value>SDCT is based on analysing and monitoring the herd by gathering data through regular and repeated cow SCCs and accurate infection records.</value>
  </data>
  <data name="AssessText4" xml:space="preserve">
    <value>SDCT can only be used if other best practice procedures are put into place, and this app will help to establish a pathway to using SDCT as common practice.
All farms must conduct monthly cow SCC measurements (last cow SCC before dry off and the first SCC after calving) before implementing SDCT, or alternatively you may use another reliable test.</value>
  </data>
  <data name="AssessTitle1" xml:space="preserve">
    <value>SELECTIVE DRY COW TREATMENT (SDCT) IS...</value>
  </data>
  <data name="AssessTitle2" xml:space="preserve">
    <value>HOW WILL SDCT HELP MY FARM?</value>
  </data>
  <data name="AssessTitle3" xml:space="preserve">
    <value>HOW TO IMPLEMENT SDCT ON MY FARM?</value>
  </data>
  <data name="AssessTitle4" xml:space="preserve">
    <value>AM I ELIGIBLE FOR SDCT?</value>
  </data>
  <data name="MonitorCompareButton" xml:space="preserve">
    <value>COMPARE RESULTS</value>
  </data>
  <data name="MonitorPageTitle" xml:space="preserve">
    <value>IS SELECTIVE DRY COW TREATMENT WORKING?</value>
  </data>
  <data name="MonitorStatusButton" xml:space="preserve">
    <value>COW STATUS INPUT</value>
  </data>
  <data name="MonitorSummaryButton" xml:space="preserve">
    <value>SUMMARY OF RESULTS</value>
  </data>
  <data name="MonitorText1" xml:space="preserve">
    <value>Once SDCT has been implemented, continuous monitoring is required in order to refine practices on farm in order to optimise success levels and ultimately productivity, profitability and animal welfare.</value>
  </data>
  <data name="MonitorText2" xml:space="preserve">
    <value>This app will help you to analyse the infection rates of the herd at dry-off and calving. By inputing the infection status of each cow in the herd you can monitor the overall results and analyse which areas are working well and where improvement may be required.</value>
  </data>
  <data name="MonitorText3" xml:space="preserve">
    <value>Overcoming problems is part of everyday life when managing a dairy herd and SDCT is no different, by fostering good working relationships, MSD Animal Health Representatives, vets and farmers can work together to overcome any challenges which may arise.</value>
  </data>
  <data name="MonitorText4" xml:space="preserve">
    <value>SDCT provides both short term and long term benefits; reducing antibiotic use in the food chain, improving productivity and reducing infection treatment costs are all strong reasons to implement and maintain SDCT.</value>
  </data>
  <data name="MonitorTitle1" xml:space="preserve">
    <value>IT IS IMPORTANT TO CONTINUE MONITORING
THE FARM ONCE SDCT IS IMPLEMENTED...</value>
  </data>
  <data name="MonitorTitle2" xml:space="preserve">
    <value>WHAT YOU NEED TO MONITOR...</value>
  </data>
  <data name="MonitorTitle3" xml:space="preserve">
    <value>HOW TO DEAL WITH ANY PROBLEMS WHICH
MAY ARISE...</value>
  </data>
  <data name="MonitorTitle4" xml:space="preserve">
    <value>THE BENEFITS OF MAINTAINING SDCT...</value>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum ornare libero a dictum. Nullam dictum lacinia lectus, a condimentum erat venenatis in. Vivamus gravida eu sem eu cursus. Fusce fermentum, felis eu malesuada elementum, neque ipsum sodales turpis, feugiat pulvinar orci lectus vitae ipsum. Aenean congue tristique nulla, at consectetur risus lobortis non. In eu leo ante. Donec a faucibus elit, vel consectetur nisi. Praesent consectetur leo non sagittis hendrerit.

Sed sit amet leo eu justo congue dictum. Maecenas ac sagittis ante. Aliquam erat volutpat. Ut feugiat, enim quis ultricies facilisis, felis libero ultrices ipsum, nec condimentum est erat tincidunt est. Fusce hendrerit metus id ex rhoncus, ut sollicitudin mauris egestas. Maecenas quis condimentum augue. Morbi venenatis consectetur mauris nec varius. Morbi dignissim mauris at purus gravida, in vestibulum dui porta. Quisque urna dui, ultrices et magna in, luctus lacinia lorem. In volutpat odio vel urna semper accumsan. Pellentesque et tortor nec metus iaculis fringilla. Vivamus semper sed eros non mattis. Phasellus ac sapien molestie, placerat metus in, semper ipsum. Nam aliquam scelerisque erat eget eleifend. Mauris pellentesque est a interdum mattis.

Sed id pharetra ligula, at sagittis eros. Vivamus volutpat dictum massa quis dapibus. Vivamus ac molestie dolor. Quisque urna lectus, suscipit sed bibendum vitae, tristique viverra nunc. Nulla nec libero cursus sem sodales blandit non in nisl. Curabitur dui dui, mattis sed condimentum non, efficitur vel tortor. Fusce fringilla mauris dolor. Praesent id interdum odio. Pellentesque dolor metus, dignissim a odio et, vehicula ultricies augue.</value>
  </data>
  <data name="TermsTitle" xml:space="preserve">
    <value>Terms and Conditions</value>
  </data>
</root>